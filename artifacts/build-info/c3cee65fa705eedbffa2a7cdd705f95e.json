{
	"id": "c3cee65fa705eedbffa2a7cdd705f95e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"WaveToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n\r\ncontract WaveToken is ERC20 { \r\n    constructor(uint256 initialSupply) ERC20(\"Wave Token\", \"WAV\") { \r\n        _mint(msg.sender, initialSupply * 10 ** decimals());\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"WaveToken.sol": {
				"WaveToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "initialSupply",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"WaveToken.sol\":119:291  contract WaveToken is ERC20 { ... */\n  mstore(0x40, 0x80)\n    /* \"WaveToken.sol\":155:288  constructor(uint256 initialSupply) ERC20(\"Wave Token\", \"WAV\") { ... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0a\n  dup2\n  mstore\n  0x20\n  add\n  0x5761766520546f6b656e00000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x5741560000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"WaveToken.sol\":229:280  _mint(msg.sender, initialSupply * 10 ** decimals()) */\n  tag_11\n    /* \"WaveToken.sol\":235:245  msg.sender */\n  caller\n    /* \"WaveToken.sol\":269:279  decimals() */\n  tag_12\n    /* \"WaveToken.sol\":269:277  decimals */\n  shl(0x20, tag_13)\n    /* \"WaveToken.sol\":269:279  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"WaveToken.sol\":263:265  10 */\n  0x0a\n    /* \"WaveToken.sol\":263:279  10 ** decimals() */\n  tag_14\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"WaveToken.sol\":247:260  initialSupply */\n  dup4\n    /* \"WaveToken.sol\":247:279  initialSupply * 10 ** decimals() */\n  tag_16\n  swap2\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n    /* \"WaveToken.sol\":229:234  _mint */\n  shl(0x20, tag_18)\n    /* \"WaveToken.sol\":229:280  _mint(msg.sender, initialSupply * 10 ** decimals()) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"WaveToken.sol\":155:288  constructor(uint256 initialSupply) ERC20(\"Wave Token\", \"WAV\") { ... */\n  pop\n    /* \"WaveToken.sol\":119:291  contract WaveToken is ERC20 { ... */\n  jump(tag_19)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\ntag_13:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2737:2742  uint8 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n  0x12\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2754:2763  return 18 */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\ntag_18:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7529  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7516  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n  tag_22\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7582:7583  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_23\n  swap2\n  swap1\n  tag_24\n  jump\t// in\ntag_23:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\ntag_22:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n  tag_25\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7621:7622  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7625:7632  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7634:7639  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7612  _update */\n  shl(0x20, tag_26)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_25:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_26:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6094:6095  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6082  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n  tag_28\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_29\n  swap2\n  swap1\n  tag_30\n  jump\t// in\ntag_29:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n  jump(tag_31)\ntag_28:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6297  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6298:6302  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6303  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6335:6340  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n  iszero\n  tag_32\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6392:6396  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6398:6409  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6416  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_33\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_34\n  jump\t// in\ntag_33:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\ntag_32:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6584:6589  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6581  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6562:6566  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6252:6614  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\ntag_31:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6642:6643  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6630  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n  tag_35\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6807:6812  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n  jump(tag_36)\ntag_35:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7019:7024  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7012:7014  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\ntag_36:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  mload(0x40)\n  tag_37\n  swap2\n  swap1\n  tag_38\n  jump\t// in\ntag_37:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_40:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_42:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_43:\n    /* \"#utility.yul\":490:514   */\n  tag_79\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_42\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_80\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  dup1\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_80:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_44:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_82\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_43\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:1045   */\ntag_3:\n    /* \"#utility.yul\":764:770   */\n  0x00\n    /* \"#utility.yul\":813:815   */\n  0x20\n    /* \"#utility.yul\":801:810   */\n  dup3\n    /* \"#utility.yul\":792:799   */\n  dup5\n    /* \"#utility.yul\":788:811   */\n  sub\n    /* \"#utility.yul\":784:816   */\n  slt\n    /* \"#utility.yul\":781:900   */\n  iszero\n  tag_84\n  jumpi\n    /* \"#utility.yul\":819:898   */\n  tag_85\n  tag_40\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":781:900   */\ntag_84:\n    /* \"#utility.yul\":939:940   */\n  0x00\n    /* \"#utility.yul\":964:1028   */\n  tag_86\n    /* \"#utility.yul\":1020:1027   */\n  dup5\n    /* \"#utility.yul\":1011:1017   */\n  dup3\n    /* \"#utility.yul\":1000:1009   */\n  dup6\n    /* \"#utility.yul\":996:1018   */\n  add\n    /* \"#utility.yul\":964:1028   */\n  tag_44\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":954:1028   */\n  swap2\n  pop\n    /* \"#utility.yul\":910:1038   */\n  pop\n    /* \"#utility.yul\":694:1045   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1051:1150   */\ntag_45:\n    /* \"#utility.yul\":1103:1109   */\n  0x00\n    /* \"#utility.yul\":1137:1142   */\n  dup2\n    /* \"#utility.yul\":1131:1143   */\n  mload\n    /* \"#utility.yul\":1121:1143   */\n  swap1\n  pop\n    /* \"#utility.yul\":1051:1150   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1156:1336   */\ntag_46:\n    /* \"#utility.yul\":1204:1281   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1201:1202   */\n  0x00\n    /* \"#utility.yul\":1194:1282   */\n  mstore\n    /* \"#utility.yul\":1301:1305   */\n  0x41\n    /* \"#utility.yul\":1298:1299   */\n  0x04\n    /* \"#utility.yul\":1291:1306   */\n  mstore\n    /* \"#utility.yul\":1325:1329   */\n  0x24\n    /* \"#utility.yul\":1322:1323   */\n  0x00\n    /* \"#utility.yul\":1315:1330   */\n  revert\n    /* \"#utility.yul\":1342:1522   */\ntag_47:\n    /* \"#utility.yul\":1390:1467   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1387:1388   */\n  0x00\n    /* \"#utility.yul\":1380:1468   */\n  mstore\n    /* \"#utility.yul\":1487:1491   */\n  0x22\n    /* \"#utility.yul\":1484:1485   */\n  0x04\n    /* \"#utility.yul\":1477:1492   */\n  mstore\n    /* \"#utility.yul\":1511:1515   */\n  0x24\n    /* \"#utility.yul\":1508:1509   */\n  0x00\n    /* \"#utility.yul\":1501:1516   */\n  revert\n    /* \"#utility.yul\":1528:1848   */\ntag_48:\n    /* \"#utility.yul\":1572:1578   */\n  0x00\n    /* \"#utility.yul\":1609:1610   */\n  0x02\n    /* \"#utility.yul\":1603:1607   */\n  dup3\n    /* \"#utility.yul\":1599:1611   */\n  div\n    /* \"#utility.yul\":1589:1611   */\n  swap1\n  pop\n    /* \"#utility.yul\":1656:1657   */\n  0x01\n    /* \"#utility.yul\":1650:1654   */\n  dup3\n    /* \"#utility.yul\":1646:1658   */\n  and\n    /* \"#utility.yul\":1677:1695   */\n  dup1\n    /* \"#utility.yul\":1667:1748   */\n  tag_91\n  jumpi\n    /* \"#utility.yul\":1733:1737   */\n  0x7f\n    /* \"#utility.yul\":1725:1731   */\n  dup3\n    /* \"#utility.yul\":1721:1738   */\n  and\n    /* \"#utility.yul\":1711:1738   */\n  swap2\n  pop\n    /* \"#utility.yul\":1667:1748   */\ntag_91:\n    /* \"#utility.yul\":1795:1797   */\n  0x20\n    /* \"#utility.yul\":1787:1793   */\n  dup3\n    /* \"#utility.yul\":1784:1798   */\n  lt\n    /* \"#utility.yul\":1764:1782   */\n  dup2\n    /* \"#utility.yul\":1761:1799   */\n  sub\n    /* \"#utility.yul\":1758:1842   */\n  tag_92\n  jumpi\n    /* \"#utility.yul\":1814:1832   */\n  tag_93\n  tag_47\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":1758:1842   */\ntag_92:\n    /* \"#utility.yul\":1579:1848   */\n  pop\n    /* \"#utility.yul\":1528:1848   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1854:1995   */\ntag_49:\n    /* \"#utility.yul\":1903:1907   */\n  0x00\n    /* \"#utility.yul\":1926:1929   */\n  dup2\n    /* \"#utility.yul\":1918:1929   */\n  swap1\n  pop\n    /* \"#utility.yul\":1949:1952   */\n  dup2\n    /* \"#utility.yul\":1946:1947   */\n  0x00\n    /* \"#utility.yul\":1939:1953   */\n  mstore\n    /* \"#utility.yul\":1983:1987   */\n  0x20\n    /* \"#utility.yul\":1980:1981   */\n  0x00\n    /* \"#utility.yul\":1970:1988   */\n  keccak256\n    /* \"#utility.yul\":1962:1988   */\n  swap1\n  pop\n    /* \"#utility.yul\":1854:1995   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2001:2094   */\ntag_50:\n    /* \"#utility.yul\":2038:2044   */\n  0x00\n    /* \"#utility.yul\":2085:2087   */\n  0x20\n    /* \"#utility.yul\":2080:2082   */\n  0x1f\n    /* \"#utility.yul\":2073:2078   */\n  dup4\n    /* \"#utility.yul\":2069:2083   */\n  add\n    /* \"#utility.yul\":2065:2088   */\n  div\n    /* \"#utility.yul\":2055:2088   */\n  swap1\n  pop\n    /* \"#utility.yul\":2001:2094   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2100:2207   */\ntag_51:\n    /* \"#utility.yul\":2144:2152   */\n  0x00\n    /* \"#utility.yul\":2194:2199   */\n  dup3\n    /* \"#utility.yul\":2188:2192   */\n  dup3\n    /* \"#utility.yul\":2184:2200   */\n  shl\n    /* \"#utility.yul\":2163:2200   */\n  swap1\n  pop\n    /* \"#utility.yul\":2100:2207   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2213:2606   */\ntag_52:\n    /* \"#utility.yul\":2282:2288   */\n  0x00\n    /* \"#utility.yul\":2332:2333   */\n  0x08\n    /* \"#utility.yul\":2320:2330   */\n  dup4\n    /* \"#utility.yul\":2316:2334   */\n  mul\n    /* \"#utility.yul\":2355:2452   */\n  tag_98\n    /* \"#utility.yul\":2385:2451   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2374:2383   */\n  dup3\n    /* \"#utility.yul\":2355:2452   */\n  tag_51\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":2473:2512   */\n  tag_99\n    /* \"#utility.yul\":2503:2511   */\n  dup7\n    /* \"#utility.yul\":2492:2501   */\n  dup4\n    /* \"#utility.yul\":2473:2512   */\n  tag_51\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":2461:2512   */\n  swap6\n  pop\n    /* \"#utility.yul\":2545:2549   */\n  dup1\n    /* \"#utility.yul\":2541:2550   */\n  not\n    /* \"#utility.yul\":2534:2539   */\n  dup5\n    /* \"#utility.yul\":2530:2551   */\n  and\n    /* \"#utility.yul\":2521:2551   */\n  swap4\n  pop\n    /* \"#utility.yul\":2594:2598   */\n  dup1\n    /* \"#utility.yul\":2584:2592   */\n  dup7\n    /* \"#utility.yul\":2580:2599   */\n  and\n    /* \"#utility.yul\":2573:2578   */\n  dup5\n    /* \"#utility.yul\":2570:2600   */\n  or\n    /* \"#utility.yul\":2560:2600   */\n  swap3\n  pop\n    /* \"#utility.yul\":2289:2606   */\n  pop\n  pop\n    /* \"#utility.yul\":2213:2606   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2612:2672   */\ntag_53:\n    /* \"#utility.yul\":2640:2643   */\n  0x00\n    /* \"#utility.yul\":2661:2666   */\n  dup2\n    /* \"#utility.yul\":2654:2666   */\n  swap1\n  pop\n    /* \"#utility.yul\":2612:2672   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2678:2820   */\ntag_54:\n    /* \"#utility.yul\":2728:2737   */\n  0x00\n    /* \"#utility.yul\":2761:2814   */\n  tag_102\n    /* \"#utility.yul\":2779:2813   */\n  tag_103\n    /* \"#utility.yul\":2788:2812   */\n  tag_104\n    /* \"#utility.yul\":2806:2811   */\n  dup5\n    /* \"#utility.yul\":2788:2812   */\n  tag_42\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":2779:2813   */\n  tag_53\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":2761:2814   */\n  tag_42\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":2748:2814   */\n  swap1\n  pop\n    /* \"#utility.yul\":2678:2820   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2826:2901   */\ntag_55:\n    /* \"#utility.yul\":2869:2872   */\n  0x00\n    /* \"#utility.yul\":2890:2895   */\n  dup2\n    /* \"#utility.yul\":2883:2895   */\n  swap1\n  pop\n    /* \"#utility.yul\":2826:2901   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2907:3176   */\ntag_56:\n    /* \"#utility.yul\":3017:3056   */\n  tag_107\n    /* \"#utility.yul\":3048:3055   */\n  dup4\n    /* \"#utility.yul\":3017:3056   */\n  tag_54\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":3078:3169   */\n  tag_108\n    /* \"#utility.yul\":3127:3168   */\n  tag_109\n    /* \"#utility.yul\":3151:3167   */\n  dup3\n    /* \"#utility.yul\":3127:3168   */\n  tag_55\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":3119:3125   */\n  dup5\n    /* \"#utility.yul\":3112:3116   */\n  dup5\n    /* \"#utility.yul\":3106:3117   */\n  sload\n    /* \"#utility.yul\":3078:3169   */\n  tag_52\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":3072:3076   */\n  dup3\n    /* \"#utility.yul\":3065:3170   */\n  sstore\n    /* \"#utility.yul\":2983:3176   */\n  pop\n    /* \"#utility.yul\":2907:3176   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3182:3255   */\ntag_57:\n    /* \"#utility.yul\":3227:3230   */\n  0x00\n    /* \"#utility.yul\":3182:3255   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3261:3450   */\ntag_58:\n    /* \"#utility.yul\":3338:3370   */\n  tag_112\n  tag_57\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":3379:3444   */\n  tag_113\n    /* \"#utility.yul\":3437:3443   */\n  dup2\n    /* \"#utility.yul\":3429:3435   */\n  dup5\n    /* \"#utility.yul\":3423:3427   */\n  dup5\n    /* \"#utility.yul\":3379:3444   */\n  tag_56\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":3314:3450   */\n  pop\n    /* \"#utility.yul\":3261:3450   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3456:3642   */\ntag_59:\n    /* \"#utility.yul\":3516:3636   */\ntag_115:\n    /* \"#utility.yul\":3533:3536   */\n  dup2\n    /* \"#utility.yul\":3526:3531   */\n  dup2\n    /* \"#utility.yul\":3523:3537   */\n  lt\n    /* \"#utility.yul\":3516:3636   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":3587:3626   */\n  tag_118\n    /* \"#utility.yul\":3624:3625   */\n  0x00\n    /* \"#utility.yul\":3617:3622   */\n  dup3\n    /* \"#utility.yul\":3587:3626   */\n  tag_58\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":3560:3561   */\n  0x01\n    /* \"#utility.yul\":3553:3558   */\n  dup2\n    /* \"#utility.yul\":3549:3562   */\n  add\n    /* \"#utility.yul\":3540:3562   */\n  swap1\n  pop\n    /* \"#utility.yul\":3516:3636   */\n  jump(tag_115)\ntag_117:\n    /* \"#utility.yul\":3456:3642   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3648:4191   */\ntag_60:\n    /* \"#utility.yul\":3749:3751   */\n  0x1f\n    /* \"#utility.yul\":3744:3747   */\n  dup3\n    /* \"#utility.yul\":3741:3752   */\n  gt\n    /* \"#utility.yul\":3738:4184   */\n  iszero\n  tag_120\n  jumpi\n    /* \"#utility.yul\":3783:3821   */\n  tag_121\n    /* \"#utility.yul\":3815:3820   */\n  dup2\n    /* \"#utility.yul\":3783:3821   */\n  tag_49\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":3867:3896   */\n  tag_122\n    /* \"#utility.yul\":3885:3895   */\n  dup5\n    /* \"#utility.yul\":3867:3896   */\n  tag_50\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":3857:3865   */\n  dup2\n    /* \"#utility.yul\":3853:3897   */\n  add\n    /* \"#utility.yul\":4050:4052   */\n  0x20\n    /* \"#utility.yul\":4038:4048   */\n  dup6\n    /* \"#utility.yul\":4035:4053   */\n  lt\n    /* \"#utility.yul\":4032:4081   */\n  iszero\n  tag_123\n  jumpi\n    /* \"#utility.yul\":4071:4079   */\n  dup2\n    /* \"#utility.yul\":4056:4079   */\n  swap1\n  pop\n    /* \"#utility.yul\":4032:4081   */\ntag_123:\n    /* \"#utility.yul\":4094:4174   */\n  tag_124\n    /* \"#utility.yul\":4150:4172   */\n  tag_125\n    /* \"#utility.yul\":4168:4171   */\n  dup6\n    /* \"#utility.yul\":4150:4172   */\n  tag_50\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":4140:4148   */\n  dup4\n    /* \"#utility.yul\":4136:4173   */\n  add\n    /* \"#utility.yul\":4123:4134   */\n  dup3\n    /* \"#utility.yul\":4094:4174   */\n  tag_59\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":3753:4184   */\n  pop\n  pop\n    /* \"#utility.yul\":3738:4184   */\ntag_120:\n    /* \"#utility.yul\":3648:4191   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4197:4314   */\ntag_61:\n    /* \"#utility.yul\":4251:4259   */\n  0x00\n    /* \"#utility.yul\":4301:4306   */\n  dup3\n    /* \"#utility.yul\":4295:4299   */\n  dup3\n    /* \"#utility.yul\":4291:4307   */\n  shr\n    /* \"#utility.yul\":4270:4307   */\n  swap1\n  pop\n    /* \"#utility.yul\":4197:4314   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4320:4489   */\ntag_62:\n    /* \"#utility.yul\":4364:4370   */\n  0x00\n    /* \"#utility.yul\":4397:4448   */\n  tag_128\n    /* \"#utility.yul\":4445:4446   */\n  0x00\n    /* \"#utility.yul\":4441:4447   */\n  not\n    /* \"#utility.yul\":4433:4438   */\n  dup5\n    /* \"#utility.yul\":4430:4431   */\n  0x08\n    /* \"#utility.yul\":4426:4439   */\n  mul\n    /* \"#utility.yul\":4397:4448   */\n  tag_61\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":4393:4449   */\n  not\n    /* \"#utility.yul\":4478:4482   */\n  dup1\n    /* \"#utility.yul\":4472:4476   */\n  dup4\n    /* \"#utility.yul\":4468:4483   */\n  and\n    /* \"#utility.yul\":4458:4483   */\n  swap2\n  pop\n    /* \"#utility.yul\":4371:4489   */\n  pop\n    /* \"#utility.yul\":4320:4489   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4494:4789   */\ntag_63:\n    /* \"#utility.yul\":4570:4574   */\n  0x00\n    /* \"#utility.yul\":4716:4745   */\n  tag_130\n    /* \"#utility.yul\":4741:4744   */\n  dup4\n    /* \"#utility.yul\":4735:4739   */\n  dup4\n    /* \"#utility.yul\":4716:4745   */\n  tag_62\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":4708:4745   */\n  swap2\n  pop\n    /* \"#utility.yul\":4778:4781   */\n  dup3\n    /* \"#utility.yul\":4775:4776   */\n  0x02\n    /* \"#utility.yul\":4771:4782   */\n  mul\n    /* \"#utility.yul\":4765:4769   */\n  dup3\n    /* \"#utility.yul\":4762:4783   */\n  or\n    /* \"#utility.yul\":4754:4783   */\n  swap1\n  pop\n    /* \"#utility.yul\":4494:4789   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4794:6189   */\ntag_8:\n    /* \"#utility.yul\":4911:4948   */\n  tag_132\n    /* \"#utility.yul\":4944:4947   */\n  dup3\n    /* \"#utility.yul\":4911:4948   */\n  tag_45\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":5013:5031   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5005:5011   */\n  dup2\n    /* \"#utility.yul\":5002:5032   */\n  gt\n    /* \"#utility.yul\":4999:5055   */\n  iszero\n  tag_133\n  jumpi\n    /* \"#utility.yul\":5035:5053   */\n  tag_134\n  tag_46\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":4999:5055   */\ntag_133:\n    /* \"#utility.yul\":5079:5117   */\n  tag_135\n    /* \"#utility.yul\":5111:5115   */\n  dup3\n    /* \"#utility.yul\":5105:5116   */\n  sload\n    /* \"#utility.yul\":5079:5117   */\n  tag_48\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":5164:5231   */\n  tag_136\n    /* \"#utility.yul\":5224:5230   */\n  dup3\n    /* \"#utility.yul\":5216:5222   */\n  dup3\n    /* \"#utility.yul\":5210:5214   */\n  dup6\n    /* \"#utility.yul\":5164:5231   */\n  tag_60\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":5258:5259   */\n  0x00\n    /* \"#utility.yul\":5282:5286   */\n  0x20\n    /* \"#utility.yul\":5269:5286   */\n  swap1\n  pop\n    /* \"#utility.yul\":5314:5316   */\n  0x1f\n    /* \"#utility.yul\":5306:5312   */\n  dup4\n    /* \"#utility.yul\":5303:5317   */\n  gt\n    /* \"#utility.yul\":5331:5332   */\n  0x01\n    /* \"#utility.yul\":5326:5944   */\n  dup2\n  eq\n  tag_138\n  jumpi\n    /* \"#utility.yul\":5988:5989   */\n  0x00\n    /* \"#utility.yul\":6005:6011   */\n  dup5\n    /* \"#utility.yul\":6002:6079   */\n  iszero\n  tag_139\n  jumpi\n    /* \"#utility.yul\":6054:6063   */\n  dup3\n    /* \"#utility.yul\":6049:6052   */\n  dup8\n    /* \"#utility.yul\":6045:6064   */\n  add\n    /* \"#utility.yul\":6039:6065   */\n  mload\n    /* \"#utility.yul\":6030:6065   */\n  swap1\n  pop\n    /* \"#utility.yul\":6002:6079   */\ntag_139:\n    /* \"#utility.yul\":6105:6172   */\n  tag_140\n    /* \"#utility.yul\":6165:6171   */\n  dup6\n    /* \"#utility.yul\":6158:6163   */\n  dup3\n    /* \"#utility.yul\":6105:6172   */\n  tag_63\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":6099:6103   */\n  dup7\n    /* \"#utility.yul\":6092:6173   */\n  sstore\n    /* \"#utility.yul\":5961:6183   */\n  pop\n    /* \"#utility.yul\":5296:6183   */\n  jump(tag_137)\n    /* \"#utility.yul\":5326:5944   */\ntag_138:\n    /* \"#utility.yul\":5378:5382   */\n  0x1f\n    /* \"#utility.yul\":5374:5383   */\n  not\n    /* \"#utility.yul\":5366:5372   */\n  dup5\n    /* \"#utility.yul\":5362:5384   */\n  and\n    /* \"#utility.yul\":5412:5449   */\n  tag_141\n    /* \"#utility.yul\":5444:5448   */\n  dup7\n    /* \"#utility.yul\":5412:5449   */\n  tag_49\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":5471:5472   */\n  0x00\n    /* \"#utility.yul\":5485:5693   */\ntag_142:\n    /* \"#utility.yul\":5499:5506   */\n  dup3\n    /* \"#utility.yul\":5496:5497   */\n  dup2\n    /* \"#utility.yul\":5493:5507   */\n  lt\n    /* \"#utility.yul\":5485:5693   */\n  iszero\n  tag_144\n  jumpi\n    /* \"#utility.yul\":5578:5587   */\n  dup5\n    /* \"#utility.yul\":5573:5576   */\n  dup10\n    /* \"#utility.yul\":5569:5588   */\n  add\n    /* \"#utility.yul\":5563:5589   */\n  mload\n    /* \"#utility.yul\":5555:5561   */\n  dup3\n    /* \"#utility.yul\":5548:5590   */\n  sstore\n    /* \"#utility.yul\":5629:5630   */\n  0x01\n    /* \"#utility.yul\":5621:5627   */\n  dup3\n    /* \"#utility.yul\":5617:5631   */\n  add\n    /* \"#utility.yul\":5607:5631   */\n  swap2\n  pop\n    /* \"#utility.yul\":5676:5678   */\n  0x20\n    /* \"#utility.yul\":5665:5674   */\n  dup6\n    /* \"#utility.yul\":5661:5679   */\n  add\n    /* \"#utility.yul\":5648:5679   */\n  swap5\n  pop\n    /* \"#utility.yul\":5522:5526   */\n  0x20\n    /* \"#utility.yul\":5519:5520   */\n  dup2\n    /* \"#utility.yul\":5515:5527   */\n  add\n    /* \"#utility.yul\":5510:5527   */\n  swap1\n  pop\n    /* \"#utility.yul\":5485:5693   */\n  jump(tag_142)\ntag_144:\n    /* \"#utility.yul\":5721:5727   */\n  dup7\n    /* \"#utility.yul\":5712:5719   */\n  dup4\n    /* \"#utility.yul\":5709:5728   */\n  lt\n    /* \"#utility.yul\":5706:5885   */\n  iszero\n  tag_145\n  jumpi\n    /* \"#utility.yul\":5779:5788   */\n  dup5\n    /* \"#utility.yul\":5774:5777   */\n  dup10\n    /* \"#utility.yul\":5770:5789   */\n  add\n    /* \"#utility.yul\":5764:5790   */\n  mload\n    /* \"#utility.yul\":5822:5870   */\n  tag_146\n    /* \"#utility.yul\":5864:5868   */\n  0x1f\n    /* \"#utility.yul\":5856:5862   */\n  dup10\n    /* \"#utility.yul\":5852:5869   */\n  and\n    /* \"#utility.yul\":5841:5850   */\n  dup3\n    /* \"#utility.yul\":5822:5870   */\n  tag_62\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":5814:5820   */\n  dup4\n    /* \"#utility.yul\":5807:5871   */\n  sstore\n    /* \"#utility.yul\":5729:5885   */\n  pop\n    /* \"#utility.yul\":5706:5885   */\ntag_145:\n    /* \"#utility.yul\":5931:5932   */\n  0x01\n    /* \"#utility.yul\":5927:5928   */\n  0x02\n    /* \"#utility.yul\":5919:5925   */\n  dup9\n    /* \"#utility.yul\":5915:5929   */\n  mul\n    /* \"#utility.yul\":5911:5933   */\n  add\n    /* \"#utility.yul\":5905:5909   */\n  dup9\n    /* \"#utility.yul\":5898:5934   */\n  sstore\n    /* \"#utility.yul\":5333:5944   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5296:6183   */\ntag_137:\n  pop\n    /* \"#utility.yul\":4886:6189   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4794:6189   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6195:6375   */\ntag_64:\n    /* \"#utility.yul\":6243:6320   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":6240:6241   */\n  0x00\n    /* \"#utility.yul\":6233:6321   */\n  mstore\n    /* \"#utility.yul\":6340:6344   */\n  0x11\n    /* \"#utility.yul\":6337:6338   */\n  0x04\n    /* \"#utility.yul\":6330:6345   */\n  mstore\n    /* \"#utility.yul\":6364:6368   */\n  0x24\n    /* \"#utility.yul\":6361:6362   */\n  0x00\n    /* \"#utility.yul\":6354:6369   */\n  revert\n    /* \"#utility.yul\":6381:6483   */\ntag_65:\n    /* \"#utility.yul\":6423:6431   */\n  0x00\n    /* \"#utility.yul\":6470:6475   */\n  dup2\n    /* \"#utility.yul\":6467:6468   */\n  0x01\n    /* \"#utility.yul\":6463:6476   */\n  shr\n    /* \"#utility.yul\":6442:6476   */\n  swap1\n  pop\n    /* \"#utility.yul\":6381:6483   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6489:7337   */\ntag_66:\n    /* \"#utility.yul\":6550:6555   */\n  0x00\n    /* \"#utility.yul\":6557:6561   */\n  dup1\n    /* \"#utility.yul\":6581:6587   */\n  dup3\n    /* \"#utility.yul\":6572:6587   */\n  swap2\n  pop\n    /* \"#utility.yul\":6605:6610   */\n  dup4\n    /* \"#utility.yul\":6596:6610   */\n  swap1\n  pop\n    /* \"#utility.yul\":6619:7331   */\ntag_150:\n    /* \"#utility.yul\":6640:6641   */\n  0x01\n    /* \"#utility.yul\":6630:6638   */\n  dup6\n    /* \"#utility.yul\":6627:6642   */\n  gt\n    /* \"#utility.yul\":6619:7331   */\n  iszero\n  tag_152\n  jumpi\n    /* \"#utility.yul\":6735:6739   */\n  dup1\n    /* \"#utility.yul\":6730:6733   */\n  dup7\n    /* \"#utility.yul\":6726:6740   */\n  div\n    /* \"#utility.yul\":6720:6724   */\n  dup2\n    /* \"#utility.yul\":6717:6741   */\n  gt\n    /* \"#utility.yul\":6714:6764   */\n  iszero\n  tag_153\n  jumpi\n    /* \"#utility.yul\":6744:6762   */\n  tag_154\n  tag_64\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":6714:6764   */\ntag_153:\n    /* \"#utility.yul\":6794:6795   */\n  0x01\n    /* \"#utility.yul\":6784:6792   */\n  dup6\n    /* \"#utility.yul\":6780:6796   */\n  and\n    /* \"#utility.yul\":6777:7228   */\n  iszero\n  tag_155\n  jumpi\n    /* \"#utility.yul\":7209:7213   */\n  dup1\n    /* \"#utility.yul\":7202:7207   */\n  dup3\n    /* \"#utility.yul\":7198:7214   */\n  mul\n    /* \"#utility.yul\":7189:7214   */\n  swap2\n  pop\n    /* \"#utility.yul\":6777:7228   */\ntag_155:\n    /* \"#utility.yul\":7259:7263   */\n  dup1\n    /* \"#utility.yul\":7253:7257   */\n  dup2\n    /* \"#utility.yul\":7249:7264   */\n  mul\n    /* \"#utility.yul\":7241:7264   */\n  swap1\n  pop\n    /* \"#utility.yul\":7289:7321   */\n  tag_156\n    /* \"#utility.yul\":7312:7320   */\n  dup6\n    /* \"#utility.yul\":7289:7321   */\n  tag_65\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":7277:7321   */\n  swap5\n  pop\n    /* \"#utility.yul\":6619:7331   */\n  jump(tag_150)\ntag_152:\n    /* \"#utility.yul\":6489:7337   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7343:8416   */\ntag_67:\n    /* \"#utility.yul\":7397:7402   */\n  0x00\n    /* \"#utility.yul\":7588:7596   */\n  dup3\n    /* \"#utility.yul\":7578:7618   */\n  tag_158\n  jumpi\n    /* \"#utility.yul\":7609:7610   */\n  0x01\n    /* \"#utility.yul\":7600:7610   */\n  swap1\n  pop\n    /* \"#utility.yul\":7611:7616   */\n  jump(tag_157)\n    /* \"#utility.yul\":7578:7618   */\ntag_158:\n    /* \"#utility.yul\":7637:7641   */\n  dup2\n    /* \"#utility.yul\":7627:7663   */\n  tag_159\n  jumpi\n    /* \"#utility.yul\":7654:7655   */\n  0x00\n    /* \"#utility.yul\":7645:7655   */\n  swap1\n  pop\n    /* \"#utility.yul\":7656:7661   */\n  jump(tag_157)\n    /* \"#utility.yul\":7627:7663   */\ntag_159:\n    /* \"#utility.yul\":7723:7727   */\n  dup2\n    /* \"#utility.yul\":7771:7772   */\n  0x01\n    /* \"#utility.yul\":7766:7793   */\n  dup2\n  eq\n  tag_161\n  jumpi\n    /* \"#utility.yul\":7807:7808   */\n  0x02\n    /* \"#utility.yul\":7802:7993   */\n  dup2\n  eq\n  tag_162\n  jumpi\n    /* \"#utility.yul\":7716:7993   */\n  jump(tag_160)\n    /* \"#utility.yul\":7766:7793   */\ntag_161:\n    /* \"#utility.yul\":7784:7785   */\n  0x01\n    /* \"#utility.yul\":7775:7785   */\n  swap2\n  pop\n    /* \"#utility.yul\":7786:7791   */\n  pop\n  jump(tag_157)\n    /* \"#utility.yul\":7802:7993   */\ntag_162:\n    /* \"#utility.yul\":7847:7850   */\n  0xff\n    /* \"#utility.yul\":7837:7845   */\n  dup5\n    /* \"#utility.yul\":7834:7851   */\n  gt\n    /* \"#utility.yul\":7831:7874   */\n  iszero\n  tag_163\n  jumpi\n    /* \"#utility.yul\":7854:7872   */\n  tag_164\n  tag_64\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":7831:7874   */\ntag_163:\n    /* \"#utility.yul\":7903:7911   */\n  dup4\n    /* \"#utility.yul\":7900:7901   */\n  0x02\n    /* \"#utility.yul\":7896:7912   */\n  exp\n    /* \"#utility.yul\":7887:7912   */\n  swap2\n  pop\n    /* \"#utility.yul\":7938:7941   */\n  dup5\n    /* \"#utility.yul\":7931:7936   */\n  dup3\n    /* \"#utility.yul\":7928:7942   */\n  gt\n    /* \"#utility.yul\":7925:7965   */\n  iszero\n  tag_165\n  jumpi\n    /* \"#utility.yul\":7945:7963   */\n  tag_166\n  tag_64\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":7925:7965   */\ntag_165:\n    /* \"#utility.yul\":7978:7983   */\n  pop\n  jump(tag_157)\n    /* \"#utility.yul\":7716:7993   */\ntag_160:\n  pop\n    /* \"#utility.yul\":8102:8104   */\n  0x20\n    /* \"#utility.yul\":8092:8100   */\n  dup4\n    /* \"#utility.yul\":8089:8105   */\n  lt\n    /* \"#utility.yul\":8083:8086   */\n  0x0133\n    /* \"#utility.yul\":8077:8081   */\n  dup4\n    /* \"#utility.yul\":8074:8087   */\n  lt\n    /* \"#utility.yul\":8070:8106   */\n  and\n    /* \"#utility.yul\":8052:8054   */\n  0x4e\n    /* \"#utility.yul\":8042:8050   */\n  dup5\n    /* \"#utility.yul\":8039:8055   */\n  lt\n    /* \"#utility.yul\":8034:8036   */\n  0x0b\n    /* \"#utility.yul\":8028:8032   */\n  dup5\n    /* \"#utility.yul\":8025:8037   */\n  lt\n    /* \"#utility.yul\":8021:8056   */\n  and\n    /* \"#utility.yul\":8005:8116   */\n  or\n    /* \"#utility.yul\":8002:8248   */\n  iszero\n  tag_167\n  jumpi\n    /* \"#utility.yul\":8158:8166   */\n  dup3\n    /* \"#utility.yul\":8152:8156   */\n  dup3\n    /* \"#utility.yul\":8148:8167   */\n  exp\n    /* \"#utility.yul\":8139:8167   */\n  swap1\n  pop\n    /* \"#utility.yul\":8193:8196   */\n  dup4\n    /* \"#utility.yul\":8186:8191   */\n  dup2\n    /* \"#utility.yul\":8183:8197   */\n  gt\n    /* \"#utility.yul\":8180:8220   */\n  iszero\n  tag_168\n  jumpi\n    /* \"#utility.yul\":8200:8218   */\n  tag_169\n  tag_64\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":8180:8220   */\ntag_168:\n    /* \"#utility.yul\":8233:8238   */\n  jump(tag_157)\n    /* \"#utility.yul\":8002:8248   */\ntag_167:\n    /* \"#utility.yul\":8273:8315   */\n  tag_170\n    /* \"#utility.yul\":8311:8314   */\n  dup5\n    /* \"#utility.yul\":8301:8309   */\n  dup5\n    /* \"#utility.yul\":8295:8299   */\n  dup5\n    /* \"#utility.yul\":8292:8293   */\n  0x01\n    /* \"#utility.yul\":8273:8315   */\n  tag_66\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":8258:8315   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":8347:8351   */\n  dup2\n    /* \"#utility.yul\":8342:8345   */\n  dup5\n    /* \"#utility.yul\":8338:8352   */\n  div\n    /* \"#utility.yul\":8331:8336   */\n  dup2\n    /* \"#utility.yul\":8328:8353   */\n  gt\n    /* \"#utility.yul\":8325:8376   */\n  iszero\n  tag_171\n  jumpi\n    /* \"#utility.yul\":8356:8374   */\n  tag_172\n  tag_64\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":8325:8376   */\ntag_171:\n    /* \"#utility.yul\":8405:8409   */\n  dup2\n    /* \"#utility.yul\":8398:8403   */\n  dup2\n    /* \"#utility.yul\":8394:8410   */\n  mul\n    /* \"#utility.yul\":8385:8410   */\n  swap1\n  pop\n    /* \"#utility.yul\":7343:8416   */\ntag_157:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8422:8508   */\ntag_68:\n    /* \"#utility.yul\":8457:8464   */\n  0x00\n    /* \"#utility.yul\":8497:8501   */\n  0xff\n    /* \"#utility.yul\":8490:8495   */\n  dup3\n    /* \"#utility.yul\":8486:8502   */\n  and\n    /* \"#utility.yul\":8475:8502   */\n  swap1\n  pop\n    /* \"#utility.yul\":8422:8508   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8514:8795   */\ntag_15:\n    /* \"#utility.yul\":8572:8577   */\n  0x00\n    /* \"#utility.yul\":8596:8619   */\n  tag_175\n    /* \"#utility.yul\":8614:8618   */\n  dup3\n    /* \"#utility.yul\":8596:8619   */\n  tag_42\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":8588:8619   */\n  swap2\n  pop\n    /* \"#utility.yul\":8640:8665   */\n  tag_176\n    /* \"#utility.yul\":8656:8664   */\n  dup4\n    /* \"#utility.yul\":8640:8665   */\n  tag_68\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":8628:8665   */\n  swap3\n  pop\n    /* \"#utility.yul\":8684:8788   */\n  tag_177\n    /* \"#utility.yul\":8721:8787   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":8711:8719   */\n  dup5\n    /* \"#utility.yul\":8705:8709   */\n  dup5\n    /* \"#utility.yul\":8684:8788   */\n  tag_67\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":8675:8788   */\n  swap1\n  pop\n    /* \"#utility.yul\":8514:8795   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8801:9211   */\ntag_17:\n    /* \"#utility.yul\":8841:8848   */\n  0x00\n    /* \"#utility.yul\":8864:8884   */\n  tag_179\n    /* \"#utility.yul\":8882:8883   */\n  dup3\n    /* \"#utility.yul\":8864:8884   */\n  tag_42\n  jump\t// in\ntag_179:\n    /* \"#utility.yul\":8859:8884   */\n  swap2\n  pop\n    /* \"#utility.yul\":8898:8918   */\n  tag_180\n    /* \"#utility.yul\":8916:8917   */\n  dup4\n    /* \"#utility.yul\":8898:8918   */\n  tag_42\n  jump\t// in\ntag_180:\n    /* \"#utility.yul\":8893:8918   */\n  swap3\n  pop\n    /* \"#utility.yul\":8953:8954   */\n  dup3\n    /* \"#utility.yul\":8950:8951   */\n  dup3\n    /* \"#utility.yul\":8946:8955   */\n  mul\n    /* \"#utility.yul\":8975:9005   */\n  tag_181\n    /* \"#utility.yul\":8993:9004   */\n  dup2\n    /* \"#utility.yul\":8975:9005   */\n  tag_42\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":8964:9005   */\n  swap2\n  pop\n    /* \"#utility.yul\":9154:9155   */\n  dup3\n    /* \"#utility.yul\":9145:9152   */\n  dup3\n    /* \"#utility.yul\":9141:9156   */\n  div\n    /* \"#utility.yul\":9138:9139   */\n  dup5\n    /* \"#utility.yul\":9135:9157   */\n  eq\n    /* \"#utility.yul\":9115:9116   */\n  dup4\n    /* \"#utility.yul\":9108:9117   */\n  iszero\n    /* \"#utility.yul\":9088:9171   */\n  or\n    /* \"#utility.yul\":9065:9204   */\n  tag_182\n  jumpi\n    /* \"#utility.yul\":9184:9202   */\n  tag_183\n  tag_64\n  jump\t// in\ntag_183:\n    /* \"#utility.yul\":9065:9204   */\ntag_182:\n    /* \"#utility.yul\":8849:9211   */\n  pop\n    /* \"#utility.yul\":8801:9211   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9217:9343   */\ntag_69:\n    /* \"#utility.yul\":9254:9261   */\n  0x00\n    /* \"#utility.yul\":9294:9336   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":9287:9292   */\n  dup3\n    /* \"#utility.yul\":9283:9337   */\n  and\n    /* \"#utility.yul\":9272:9337   */\n  swap1\n  pop\n    /* \"#utility.yul\":9217:9343   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9349:9445   */\ntag_70:\n    /* \"#utility.yul\":9386:9393   */\n  0x00\n    /* \"#utility.yul\":9415:9439   */\n  tag_186\n    /* \"#utility.yul\":9433:9438   */\n  dup3\n    /* \"#utility.yul\":9415:9439   */\n  tag_69\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":9404:9439   */\n  swap1\n  pop\n    /* \"#utility.yul\":9349:9445   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9451:9569   */\ntag_71:\n    /* \"#utility.yul\":9538:9562   */\n  tag_188\n    /* \"#utility.yul\":9556:9561   */\n  dup2\n    /* \"#utility.yul\":9538:9562   */\n  tag_70\n  jump\t// in\ntag_188:\n    /* \"#utility.yul\":9533:9536   */\n  dup3\n    /* \"#utility.yul\":9526:9563   */\n  mstore\n    /* \"#utility.yul\":9451:9569   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9575:9797   */\ntag_24:\n    /* \"#utility.yul\":9668:9672   */\n  0x00\n    /* \"#utility.yul\":9706:9708   */\n  0x20\n    /* \"#utility.yul\":9695:9704   */\n  dup3\n    /* \"#utility.yul\":9691:9709   */\n  add\n    /* \"#utility.yul\":9683:9709   */\n  swap1\n  pop\n    /* \"#utility.yul\":9719:9790   */\n  tag_190\n    /* \"#utility.yul\":9787:9788   */\n  0x00\n    /* \"#utility.yul\":9776:9785   */\n  dup4\n    /* \"#utility.yul\":9772:9789   */\n  add\n    /* \"#utility.yul\":9763:9769   */\n  dup5\n    /* \"#utility.yul\":9719:9790   */\n  tag_71\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":9575:9797   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9803:9994   */\ntag_30:\n    /* \"#utility.yul\":9843:9846   */\n  0x00\n    /* \"#utility.yul\":9862:9882   */\n  tag_192\n    /* \"#utility.yul\":9880:9881   */\n  dup3\n    /* \"#utility.yul\":9862:9882   */\n  tag_42\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":9857:9882   */\n  swap2\n  pop\n    /* \"#utility.yul\":9896:9916   */\n  tag_193\n    /* \"#utility.yul\":9914:9915   */\n  dup4\n    /* \"#utility.yul\":9896:9916   */\n  tag_42\n  jump\t// in\ntag_193:\n    /* \"#utility.yul\":9891:9916   */\n  swap3\n  pop\n    /* \"#utility.yul\":9939:9940   */\n  dup3\n    /* \"#utility.yul\":9936:9937   */\n  dup3\n    /* \"#utility.yul\":9932:9941   */\n  add\n    /* \"#utility.yul\":9925:9941   */\n  swap1\n  pop\n    /* \"#utility.yul\":9960:9963   */\n  dup1\n    /* \"#utility.yul\":9957:9958   */\n  dup3\n    /* \"#utility.yul\":9954:9964   */\n  gt\n    /* \"#utility.yul\":9951:9987   */\n  iszero\n  tag_194\n  jumpi\n    /* \"#utility.yul\":9967:9985   */\n  tag_195\n  tag_64\n  jump\t// in\ntag_195:\n    /* \"#utility.yul\":9951:9987   */\ntag_194:\n    /* \"#utility.yul\":9803:9994   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10000:10118   */\ntag_72:\n    /* \"#utility.yul\":10087:10111   */\n  tag_197\n    /* \"#utility.yul\":10105:10110   */\n  dup2\n    /* \"#utility.yul\":10087:10111   */\n  tag_42\n  jump\t// in\ntag_197:\n    /* \"#utility.yul\":10082:10085   */\n  dup3\n    /* \"#utility.yul\":10075:10112   */\n  mstore\n    /* \"#utility.yul\":10000:10118   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10124:10566   */\ntag_34:\n    /* \"#utility.yul\":10273:10277   */\n  0x00\n    /* \"#utility.yul\":10311:10313   */\n  0x60\n    /* \"#utility.yul\":10300:10309   */\n  dup3\n    /* \"#utility.yul\":10296:10314   */\n  add\n    /* \"#utility.yul\":10288:10314   */\n  swap1\n  pop\n    /* \"#utility.yul\":10324:10395   */\n  tag_199\n    /* \"#utility.yul\":10392:10393   */\n  0x00\n    /* \"#utility.yul\":10381:10390   */\n  dup4\n    /* \"#utility.yul\":10377:10394   */\n  add\n    /* \"#utility.yul\":10368:10374   */\n  dup7\n    /* \"#utility.yul\":10324:10395   */\n  tag_71\n  jump\t// in\ntag_199:\n    /* \"#utility.yul\":10405:10477   */\n  tag_200\n    /* \"#utility.yul\":10473:10475   */\n  0x20\n    /* \"#utility.yul\":10462:10471   */\n  dup4\n    /* \"#utility.yul\":10458:10476   */\n  add\n    /* \"#utility.yul\":10449:10455   */\n  dup6\n    /* \"#utility.yul\":10405:10477   */\n  tag_72\n  jump\t// in\ntag_200:\n    /* \"#utility.yul\":10487:10559   */\n  tag_201\n    /* \"#utility.yul\":10555:10557   */\n  0x40\n    /* \"#utility.yul\":10544:10553   */\n  dup4\n    /* \"#utility.yul\":10540:10558   */\n  add\n    /* \"#utility.yul\":10531:10537   */\n  dup5\n    /* \"#utility.yul\":10487:10559   */\n  tag_72\n  jump\t// in\ntag_201:\n    /* \"#utility.yul\":10124:10566   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10572:10794   */\ntag_38:\n    /* \"#utility.yul\":10665:10669   */\n  0x00\n    /* \"#utility.yul\":10703:10705   */\n  0x20\n    /* \"#utility.yul\":10692:10701   */\n  dup3\n    /* \"#utility.yul\":10688:10706   */\n  add\n    /* \"#utility.yul\":10680:10706   */\n  swap1\n  pop\n    /* \"#utility.yul\":10716:10787   */\n  tag_203\n    /* \"#utility.yul\":10784:10785   */\n  0x00\n    /* \"#utility.yul\":10773:10782   */\n  dup4\n    /* \"#utility.yul\":10769:10786   */\n  add\n    /* \"#utility.yul\":10760:10766   */\n  dup5\n    /* \"#utility.yul\":10716:10787   */\n  tag_72\n  jump\t// in\ntag_203:\n    /* \"#utility.yul\":10572:10794   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"WaveToken.sol\":119:291  contract WaveToken is ERC20 { ... */\ntag_19:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"WaveToken.sol\":119:291  contract WaveToken is ERC20 { ... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x313ce567\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_8:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_9:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_10:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_11:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_14:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_54\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_56\n      swap1\n      tag_55\n      jump\t// in\n    tag_56:\n      dup1\n      iszero\n      tag_57\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_58\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_57)\n    tag_58:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_59:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_59\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_57:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_20:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4052:4056  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4068:4081  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4094  _msgSender */\n      tag_62\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      jump\t// in\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4068:4096  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      tag_63\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4115:4120  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4122:4129  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4131:4136  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4114  _approve */\n      tag_64\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      jump\t// in\n    tag_63:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4154:4158  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4147:4158  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_24:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2882:2889  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2908:2920  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2920  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4844:4848  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4860:4875  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4890  _msgSender() */\n      tag_67\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4888  _msgSender */\n      tag_62\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4890  _msgSender() */\n      jump\t// in\n    tag_67:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4860:4890  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      tag_68\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4916:4920  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4922:4929  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4931:4936  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4915  _spendAllowance */\n      tag_69\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_68:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      tag_70\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4957:4961  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4963:4965  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4967:4972  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4956  _transfer */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      jump\t// in\n    tag_70:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4990:4994  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4983:4994  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2737:2742  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2754:2763  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3050:3057  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3085  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3086:3093  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3094  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_75\n      swap1\n      tag_55\n      jump\t// in\n    tag_75:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_76\n      swap1\n      tag_55\n      jump\t// in\n    tag_76:\n      dup1\n      iszero\n      tag_77\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_78\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_77)\n    tag_78:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_79:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_79\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_77:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3365:3369  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3381:3394  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3407  _msgSender */\n      tag_62\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      jump\t// in\n    tag_81:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3381:3409  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      tag_82\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3429:3434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3436:3438  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3440:3445  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3428  _transfer */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      jump\t// in\n    tag_82:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3463:3467  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3456:3467  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3612:3619  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3655  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3664  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3665  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      tag_86\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8800:8805  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8807:8814  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8816:8821  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8823:8827  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8799  _approve */\n      tag_87\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10519  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10532:10537  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10539:10546  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10531  allowance */\n      tag_51\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      jump\t// in\n    tag_89:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10547  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10597  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10577  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10597  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_90\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10641  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10633  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10641  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n      iszero\n      tag_91\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10695:10702  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10704:10720  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10722:10727  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_92\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10793:10798  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10800:10807  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10833  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10825  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10833  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10840  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10792  _approve */\n      tag_87\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10485:10872  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5473:5474  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5461  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n      tag_96\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5525:5526  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5567  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5554  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n      tag_99\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5620:5621  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5651:5655  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5657:5659  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5661:5666  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5650  _update */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      jump\t// in\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9812  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9799  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n      tag_104\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9865:9866  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9912  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9899  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n      tag_106\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9964:9965  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10017:10022  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:9998  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9999:10004  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10013  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10022  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10045  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n      iszero\n      tag_108\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10082:10089  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10075:10080  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10091:10096  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_109\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_102:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6094:6095  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6082  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      tag_111\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_112\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      jump(tag_114)\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6297  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6298:6302  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6303  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6335:6340  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n      iszero\n      tag_115\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6392:6396  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6398:6409  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6416  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_116\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6584:6589  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6581  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6562:6566  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6252:6614  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6642:6643  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6630  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      tag_117\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6807:6812  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      jump(tag_118)\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7019:7024  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7012:7014  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      mload(0x40)\n      tag_119\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_120:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_121:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_122:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_147:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_149\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_147)\n    tag_149:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_123:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_124:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_152\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_120\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":818:889   */\n      tag_153\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_121\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_154\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_122\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":988:1017   */\n      tag_155\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_123\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_16:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_157\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_124\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_126:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_128:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_129:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_163\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_128\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_130:\n        /* \"#utility.yul\":1983:2007   */\n      tag_165\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_129\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_166\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_166:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_131:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_168\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_130\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_132:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_133:\n        /* \"#utility.yul\":2339:2363   */\n      tag_171\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_132\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_172\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_172:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_134:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_174\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_133\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_19:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_176\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_177\n      tag_126\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":2632:2751   */\n    tag_176:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_178\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_131\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_179\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_134\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_135:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_136:\n        /* \"#utility.yul\":3196:3217   */\n      tag_182\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_135\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_22:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_184\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_136\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3564   */\n    tag_137:\n        /* \"#utility.yul\":3533:3557   */\n      tag_186\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3533:3557   */\n      tag_132\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":3528:3531   */\n      dup3\n        /* \"#utility.yul\":3521:3558   */\n      mstore\n        /* \"#utility.yul\":3446:3564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3792   */\n    tag_26:\n        /* \"#utility.yul\":3663:3667   */\n      0x00\n        /* \"#utility.yul\":3701:3703   */\n      0x20\n        /* \"#utility.yul\":3690:3699   */\n      dup3\n        /* \"#utility.yul\":3686:3704   */\n      add\n        /* \"#utility.yul\":3678:3704   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3785   */\n      tag_188\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3714:3785   */\n      tag_137\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":3570:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4417   */\n    tag_29:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup1\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x60\n        /* \"#utility.yul\":3928:3937   */\n      dup5\n        /* \"#utility.yul\":3919:3926   */\n      dup7\n        /* \"#utility.yul\":3915:3938   */\n      sub\n        /* \"#utility.yul\":3911:3943   */\n      slt\n        /* \"#utility.yul\":3908:4027   */\n      iszero\n      tag_190\n      jumpi\n        /* \"#utility.yul\":3946:4025   */\n      tag_191\n      tag_126\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":3908:4027   */\n    tag_190:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4091:4144   */\n      tag_192\n        /* \"#utility.yul\":4136:4143   */\n      dup7\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup8\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4091:4144   */\n      tag_131\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":4081:4144   */\n      swap4\n      pop\n        /* \"#utility.yul\":4037:4154   */\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4219:4272   */\n      tag_193\n        /* \"#utility.yul\":4264:4271   */\n      dup7\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup8\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_131\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4164:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4347:4400   */\n      tag_194\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup8\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_134\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3798:4417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4423:4509   */\n    tag_138:\n        /* \"#utility.yul\":4458:4465   */\n      0x00\n        /* \"#utility.yul\":4498:4502   */\n      0xff\n        /* \"#utility.yul\":4491:4496   */\n      dup3\n        /* \"#utility.yul\":4487:4503   */\n      and\n        /* \"#utility.yul\":4476:4503   */\n      swap1\n      pop\n        /* \"#utility.yul\":4423:4509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4515:4627   */\n    tag_139:\n        /* \"#utility.yul\":4598:4620   */\n      tag_197\n        /* \"#utility.yul\":4614:4619   */\n      dup2\n        /* \"#utility.yul\":4598:4620   */\n      tag_138\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":4593:4596   */\n      dup3\n        /* \"#utility.yul\":4586:4621   */\n      mstore\n        /* \"#utility.yul\":4515:4627   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4633:4847   */\n    tag_35:\n        /* \"#utility.yul\":4722:4726   */\n      0x00\n        /* \"#utility.yul\":4760:4762   */\n      0x20\n        /* \"#utility.yul\":4749:4758   */\n      dup3\n        /* \"#utility.yul\":4745:4763   */\n      add\n        /* \"#utility.yul\":4737:4763   */\n      swap1\n      pop\n        /* \"#utility.yul\":4773:4840   */\n      tag_199\n        /* \"#utility.yul\":4837:4838   */\n      0x00\n        /* \"#utility.yul\":4826:4835   */\n      dup4\n        /* \"#utility.yul\":4822:4839   */\n      add\n        /* \"#utility.yul\":4813:4819   */\n      dup5\n        /* \"#utility.yul\":4773:4840   */\n      tag_139\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":4633:4847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4853:5182   */\n    tag_38:\n        /* \"#utility.yul\":4912:4918   */\n      0x00\n        /* \"#utility.yul\":4961:4963   */\n      0x20\n        /* \"#utility.yul\":4949:4958   */\n      dup3\n        /* \"#utility.yul\":4940:4947   */\n      dup5\n        /* \"#utility.yul\":4936:4959   */\n      sub\n        /* \"#utility.yul\":4932:4964   */\n      slt\n        /* \"#utility.yul\":4929:5048   */\n      iszero\n      tag_201\n      jumpi\n        /* \"#utility.yul\":4967:5046   */\n      tag_202\n      tag_126\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":4929:5048   */\n    tag_201:\n        /* \"#utility.yul\":5087:5088   */\n      0x00\n        /* \"#utility.yul\":5112:5165   */\n      tag_203\n        /* \"#utility.yul\":5157:5164   */\n      dup5\n        /* \"#utility.yul\":5148:5154   */\n      dup3\n        /* \"#utility.yul\":5137:5146   */\n      dup6\n        /* \"#utility.yul\":5133:5155   */\n      add\n        /* \"#utility.yul\":5112:5165   */\n      tag_131\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":5102:5165   */\n      swap2\n      pop\n        /* \"#utility.yul\":5058:5175   */\n      pop\n        /* \"#utility.yul\":4853:5182   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5188:5662   */\n    tag_50:\n        /* \"#utility.yul\":5256:5262   */\n      0x00\n        /* \"#utility.yul\":5264:5270   */\n      dup1\n        /* \"#utility.yul\":5313:5315   */\n      0x40\n        /* \"#utility.yul\":5301:5310   */\n      dup4\n        /* \"#utility.yul\":5292:5299   */\n      dup6\n        /* \"#utility.yul\":5288:5311   */\n      sub\n        /* \"#utility.yul\":5284:5316   */\n      slt\n        /* \"#utility.yul\":5281:5400   */\n      iszero\n      tag_205\n      jumpi\n        /* \"#utility.yul\":5319:5398   */\n      tag_206\n      tag_126\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":5281:5400   */\n    tag_205:\n        /* \"#utility.yul\":5439:5440   */\n      0x00\n        /* \"#utility.yul\":5464:5517   */\n      tag_207\n        /* \"#utility.yul\":5509:5516   */\n      dup6\n        /* \"#utility.yul\":5500:5506   */\n      dup3\n        /* \"#utility.yul\":5489:5498   */\n      dup7\n        /* \"#utility.yul\":5485:5507   */\n      add\n        /* \"#utility.yul\":5464:5517   */\n      tag_131\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":5454:5517   */\n      swap3\n      pop\n        /* \"#utility.yul\":5410:5527   */\n      pop\n        /* \"#utility.yul\":5566:5568   */\n      0x20\n        /* \"#utility.yul\":5592:5645   */\n      tag_208\n        /* \"#utility.yul\":5637:5644   */\n      dup6\n        /* \"#utility.yul\":5628:5634   */\n      dup3\n        /* \"#utility.yul\":5617:5626   */\n      dup7\n        /* \"#utility.yul\":5613:5635   */\n      add\n        /* \"#utility.yul\":5592:5645   */\n      tag_131\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":5582:5645   */\n      swap2\n      pop\n        /* \"#utility.yul\":5537:5655   */\n      pop\n        /* \"#utility.yul\":5188:5662   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5668:5848   */\n    tag_140:\n        /* \"#utility.yul\":5716:5793   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5713:5714   */\n      0x00\n        /* \"#utility.yul\":5706:5794   */\n      mstore\n        /* \"#utility.yul\":5813:5817   */\n      0x22\n        /* \"#utility.yul\":5810:5811   */\n      0x04\n        /* \"#utility.yul\":5803:5818   */\n      mstore\n        /* \"#utility.yul\":5837:5841   */\n      0x24\n        /* \"#utility.yul\":5834:5835   */\n      0x00\n        /* \"#utility.yul\":5827:5842   */\n      revert\n        /* \"#utility.yul\":5854:6174   */\n    tag_55:\n        /* \"#utility.yul\":5898:5904   */\n      0x00\n        /* \"#utility.yul\":5935:5936   */\n      0x02\n        /* \"#utility.yul\":5929:5933   */\n      dup3\n        /* \"#utility.yul\":5925:5937   */\n      div\n        /* \"#utility.yul\":5915:5937   */\n      swap1\n      pop\n        /* \"#utility.yul\":5982:5983   */\n      0x01\n        /* \"#utility.yul\":5976:5980   */\n      dup3\n        /* \"#utility.yul\":5972:5984   */\n      and\n        /* \"#utility.yul\":6003:6021   */\n      dup1\n        /* \"#utility.yul\":5993:6074   */\n      tag_211\n      jumpi\n        /* \"#utility.yul\":6059:6063   */\n      0x7f\n        /* \"#utility.yul\":6051:6057   */\n      dup3\n        /* \"#utility.yul\":6047:6064   */\n      and\n        /* \"#utility.yul\":6037:6064   */\n      swap2\n      pop\n        /* \"#utility.yul\":5993:6074   */\n    tag_211:\n        /* \"#utility.yul\":6121:6123   */\n      0x20\n        /* \"#utility.yul\":6113:6119   */\n      dup3\n        /* \"#utility.yul\":6110:6124   */\n      lt\n        /* \"#utility.yul\":6090:6108   */\n      dup2\n        /* \"#utility.yul\":6087:6125   */\n      sub\n        /* \"#utility.yul\":6084:6168   */\n      tag_212\n      jumpi\n        /* \"#utility.yul\":6140:6158   */\n      tag_213\n      tag_140\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":6084:6168   */\n    tag_212:\n        /* \"#utility.yul\":5905:6174   */\n      pop\n        /* \"#utility.yul\":5854:6174   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6180:6298   */\n    tag_141:\n        /* \"#utility.yul\":6267:6291   */\n      tag_215\n        /* \"#utility.yul\":6285:6290   */\n      dup2\n        /* \"#utility.yul\":6267:6291   */\n      tag_129\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":6262:6265   */\n      dup3\n        /* \"#utility.yul\":6255:6292   */\n      mstore\n        /* \"#utility.yul\":6180:6298   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6304:6746   */\n    tag_93:\n        /* \"#utility.yul\":6453:6457   */\n      0x00\n        /* \"#utility.yul\":6491:6493   */\n      0x60\n        /* \"#utility.yul\":6480:6489   */\n      dup3\n        /* \"#utility.yul\":6476:6494   */\n      add\n        /* \"#utility.yul\":6468:6494   */\n      swap1\n      pop\n        /* \"#utility.yul\":6504:6575   */\n      tag_217\n        /* \"#utility.yul\":6572:6573   */\n      0x00\n        /* \"#utility.yul\":6561:6570   */\n      dup4\n        /* \"#utility.yul\":6557:6574   */\n      add\n        /* \"#utility.yul\":6548:6554   */\n      dup7\n        /* \"#utility.yul\":6504:6575   */\n      tag_141\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":6585:6657   */\n      tag_218\n        /* \"#utility.yul\":6653:6655   */\n      0x20\n        /* \"#utility.yul\":6642:6651   */\n      dup4\n        /* \"#utility.yul\":6638:6656   */\n      add\n        /* \"#utility.yul\":6629:6635   */\n      dup6\n        /* \"#utility.yul\":6585:6657   */\n      tag_137\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":6667:6739   */\n      tag_219\n        /* \"#utility.yul\":6735:6737   */\n      0x40\n        /* \"#utility.yul\":6724:6733   */\n      dup4\n        /* \"#utility.yul\":6720:6738   */\n      add\n        /* \"#utility.yul\":6711:6717   */\n      dup5\n        /* \"#utility.yul\":6667:6739   */\n      tag_137\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":6304:6746   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6752:6974   */\n    tag_98:\n        /* \"#utility.yul\":6845:6849   */\n      0x00\n        /* \"#utility.yul\":6883:6885   */\n      0x20\n        /* \"#utility.yul\":6872:6881   */\n      dup3\n        /* \"#utility.yul\":6868:6886   */\n      add\n        /* \"#utility.yul\":6860:6886   */\n      swap1\n      pop\n        /* \"#utility.yul\":6896:6967   */\n      tag_221\n        /* \"#utility.yul\":6964:6965   */\n      0x00\n        /* \"#utility.yul\":6953:6962   */\n      dup4\n        /* \"#utility.yul\":6949:6966   */\n      add\n        /* \"#utility.yul\":6940:6946   */\n      dup5\n        /* \"#utility.yul\":6896:6967   */\n      tag_141\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":6752:6974   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6980:7160   */\n    tag_142:\n        /* \"#utility.yul\":7028:7105   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7025:7026   */\n      0x00\n        /* \"#utility.yul\":7018:7106   */\n      mstore\n        /* \"#utility.yul\":7125:7129   */\n      0x11\n        /* \"#utility.yul\":7122:7123   */\n      0x04\n        /* \"#utility.yul\":7115:7130   */\n      mstore\n        /* \"#utility.yul\":7149:7153   */\n      0x24\n        /* \"#utility.yul\":7146:7147   */\n      0x00\n        /* \"#utility.yul\":7139:7154   */\n      revert\n        /* \"#utility.yul\":7166:7357   */\n    tag_113:\n        /* \"#utility.yul\":7206:7209   */\n      0x00\n        /* \"#utility.yul\":7225:7245   */\n      tag_224\n        /* \"#utility.yul\":7243:7244   */\n      dup3\n        /* \"#utility.yul\":7225:7245   */\n      tag_132\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":7220:7245   */\n      swap2\n      pop\n        /* \"#utility.yul\":7259:7279   */\n      tag_225\n        /* \"#utility.yul\":7277:7278   */\n      dup4\n        /* \"#utility.yul\":7259:7279   */\n      tag_132\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":7254:7279   */\n      swap3\n      pop\n        /* \"#utility.yul\":7302:7303   */\n      dup3\n        /* \"#utility.yul\":7299:7300   */\n      dup3\n        /* \"#utility.yul\":7295:7304   */\n      add\n        /* \"#utility.yul\":7288:7304   */\n      swap1\n      pop\n        /* \"#utility.yul\":7323:7326   */\n      dup1\n        /* \"#utility.yul\":7320:7321   */\n      dup3\n        /* \"#utility.yul\":7317:7327   */\n      gt\n        /* \"#utility.yul\":7314:7350   */\n      iszero\n      tag_226\n      jumpi\n        /* \"#utility.yul\":7330:7348   */\n      tag_227\n      tag_142\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":7314:7350   */\n    tag_226:\n        /* \"#utility.yul\":7166:7357   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206be31730b65fadcad3a4a480338bba50315a2925e0d6da903b1d825fcd990b1a64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_188": {
									"entryPoint": null,
									"id": 188,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_811": {
									"entryPoint": null,
									"id": 811,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_491": {
									"entryPoint": 275,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 413,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_215": {
									"entryPoint": 267,
									"id": 215,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 999,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1021,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2497,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2514,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2616,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2675,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1221,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1069,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2541,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 1957,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 2293,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 2047,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2373,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1521,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2478,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2447,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 965,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 2281,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1483,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1360,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1672,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1239,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1169,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1643,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1351,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1613,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1900,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1124,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1079,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1399,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 961,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 1254,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 1945,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1601,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1455,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1266,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1408,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 974,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1451,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:10797:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:6"
															},
															"nodeType": "YulIf",
															"src": "470:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:6",
														"type": ""
													}
												],
												"src": "417:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "608:80:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "618:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "627:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "649:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "649:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "586:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "594:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "602:5:6",
														"type": ""
													}
												],
												"src": "545:143:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "771:274:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "817:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "819:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "819:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "819:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "792:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "801:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "788:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "788:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "813:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "784:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "784:32:6"
															},
															"nodeType": "YulIf",
															"src": "781:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "910:128:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "925:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "939:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "929:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "954:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1000:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1011:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "996:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "996:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1020:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "964:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "964:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "954:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "741:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "752:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "764:6:6",
														"type": ""
													}
												],
												"src": "694:351:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1110:40:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1121:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1137:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1131:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1131:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1121:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1093:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1103:6:6",
														"type": ""
													}
												],
												"src": "1051:99:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1184:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1201:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1204:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1298:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1301:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1291:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1291:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1291:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1322:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1325:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1315:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1315:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1315:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1156:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1370:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1387:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1390:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1380:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1380:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1380:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1484:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1487:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1477:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1477:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1477:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1508:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1511:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1501:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1501:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1501:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "1342:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1579:269:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1589:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1603:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1609:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1599:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1599:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1589:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1620:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1650:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1656:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1646:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1646:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1624:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1697:51:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1711:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1725:6:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1733:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1721:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1721:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1711:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1677:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1670:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1670:26:6"
															},
															"nodeType": "YulIf",
															"src": "1667:81:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1800:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "1814:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1814:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1814:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1764:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1787:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1795:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1784:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1784:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1761:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1761:38:6"
															},
															"nodeType": "YulIf",
															"src": "1758:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1563:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1572:6:6",
														"type": ""
													}
												],
												"src": "1528:320:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1908:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1918:11:6",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "1926:3:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "1918:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1946:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "1949:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1939:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1939:14:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1939:14:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1962:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1980:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1983:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "1970:9:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1970:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "1962:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "1895:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1903:4:6",
														"type": ""
													}
												],
												"src": "1854:141:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2045:49:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2055:33:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2073:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2080:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2069:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2069:14:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2085:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2065:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2065:23:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2055:6:6"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2028:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2038:6:6",
														"type": ""
													}
												],
												"src": "2001:93:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2153:54:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2163:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "2188:4:6"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2194:5:6"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "2184:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2184:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "2163:8:6"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "2128:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2134:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "2144:8:6",
														"type": ""
													}
												],
												"src": "2100:107:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2289:317:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2299:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "2320:10:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2332:1:6",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2316:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2316:18:6"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "2303:9:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2343:109:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "2374:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2385:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "2355:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2355:97:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "2347:4:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2461:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "2492:9:6"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "2503:8:6"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "2473:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2473:39:6"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "2461:8:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2521:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2534:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "2545:4:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2541:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2541:9:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2530:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2530:21:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2521:5:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2560:40:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2573:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "2584:8:6"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "2594:4:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2580:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2580:19:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2570:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2570:30:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2560:6:6"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2250:5:6",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "2257:10:6",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "2269:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2282:6:6",
														"type": ""
													}
												],
												"src": "2213:393:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2644:28:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2654:12:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2661:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2654:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2630:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2640:3:6",
														"type": ""
													}
												],
												"src": "2612:60:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2738:82:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2748:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2806:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2788:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2788:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "2779:8:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2779:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2761:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2761:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2748:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2718:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2728:9:6",
														"type": ""
													}
												],
												"src": "2678:142:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2873:28:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2883:12:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2890:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2883:3:6"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2859:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2869:3:6",
														"type": ""
													}
												],
												"src": "2826:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2983:193:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2993:63:6",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "3048:7:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3017:30:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3017:39:6"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "2997:16:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3072:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "3112:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "3106:5:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3106:11:6"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3119:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "3151:16:6"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3127:23:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3127:41:6"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "3078:27:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3078:91:6"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "3065:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3065:105:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3065:105:6"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2960:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2966:6:6",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "2974:7:6",
														"type": ""
													}
												],
												"src": "2907:269:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3231:24:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3241:8:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3248:1:6",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3241:3:6"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3227:3:6",
														"type": ""
													}
												],
												"src": "3182:73:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3314:136:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3324:46:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3338:30:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3338:32:6"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "3328:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3423:4:6"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3429:6:6"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "3437:6:6"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3379:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3379:65:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3379:65:6"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3300:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3306:6:6",
														"type": ""
													}
												],
												"src": "3261:189:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3506:136:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3573:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "3617:5:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3624:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "3587:29:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3587:39:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3587:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "3526:5:6"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3533:3:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3523:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3523:14:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3538:26:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3540:22:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "3553:5:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3560:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3549:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3549:13:6"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "3540:5:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3520:2:6",
																"statements": []
															},
															"src": "3516:120:6"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "3494:5:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3501:3:6",
														"type": ""
													}
												],
												"src": "3456:186:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3727:464:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3753:431:6",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3767:54:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "3815:5:6"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "3783:31:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3783:38:6"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "3771:8:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3834:63:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "3857:8:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "3885:10:6"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "3867:17:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3867:29:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3853:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3853:44:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "3838:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "4054:27:6",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "4056:23:6",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "4071:8:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "4056:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "4038:10:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4050:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "4035:2:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4035:18:6"
																		},
																		"nodeType": "YulIf",
																		"src": "4032:49:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "4123:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "4140:8:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "4168:3:6"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "4150:17:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4150:22:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4136:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4136:37:6"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "4094:28:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4094:80:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4094:80:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "3744:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3749:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3741:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3741:11:6"
															},
															"nodeType": "YulIf",
															"src": "3738:446:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3703:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "3710:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "3715:10:6",
														"type": ""
													}
												],
												"src": "3648:543:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4260:54:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4270:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "4295:4:6"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4301:5:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "4291:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4291:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "4270:8:6"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "4235:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4241:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "4251:8:6",
														"type": ""
													}
												],
												"src": "4197:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4371:118:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4381:68:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4430:1:6",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "4433:5:6"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "4426:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4426:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4445:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "4441:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4441:6:6"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "4397:28:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4397:51:6"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "4393:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4393:56:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "4385:4:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4458:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4472:4:6"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "4478:4:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4468:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4468:15:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4458:6:6"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4348:4:6",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "4354:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4364:6:6",
														"type": ""
													}
												],
												"src": "4320:169:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4575:214:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4708:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4735:4:6"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "4741:3:6"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4716:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4716:29:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4708:4:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4754:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4765:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4775:1:6",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "4778:3:6"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "4771:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4771:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4762:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4762:21:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "4754:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4556:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "4562:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "4570:4:6",
														"type": ""
													}
												],
												"src": "4494:295:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4886:1303:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4897:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "4944:3:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4911:32:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4911:37:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "4901:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5033:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5035:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5035:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5035:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "5005:6:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5013:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5002:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5002:30:6"
															},
															"nodeType": "YulIf",
															"src": "4999:56:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5065:52:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "5111:4:6"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "5105:5:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5105:11:6"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "5079:25:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5079:38:6"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "5069:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5210:4:6"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "5216:6:6"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "5224:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "5164:45:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5164:67:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5164:67:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5241:18:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5258:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "5245:9:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5269:17:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5282:4:6",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "5269:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5333:611:6",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5347:37:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "5366:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "5378:4:6",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "5374:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5374:9:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "5362:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5362:22:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "5351:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5398:51:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "5444:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "5412:31:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5412:37:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "5402:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5462:10:6",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5471:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "5466:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5530:163:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "5555:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "5573:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "5578:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "5569:3:6"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "5569:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "5563:5:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "5563:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "5548:6:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5548:42:6"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "5548:42:6"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "5607:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "5621:6:6"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5629:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "5617:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5617:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "5607:6:6"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "5648:31:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "5665:9:6"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5676:2:6",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "5661:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5661:18:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "5648:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "5496:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "5499:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "5493:2:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5493:14:6"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "5508:21:6",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "5510:17:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "5519:1:6"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5522:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "5515:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5515:12:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "5510:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "5489:3:6",
																					"statements": []
																				},
																				"src": "5485:208:6"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5729:156:6",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "5747:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "5774:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "5779:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "5770:3:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "5770:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "5764:5:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5764:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "5751:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "5814:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "5841:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "5856:6:6"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "5864:4:6",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "5852:3:6"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "5852:17:6"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "5822:18:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "5822:48:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "5807:6:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5807:64:6"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "5807:64:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "5712:7:6"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "5721:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "5709:2:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5709:19:6"
																				},
																				"nodeType": "YulIf",
																				"src": "5706:179:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "5905:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "5919:6:6"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "5927:1:6",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "5915:3:6"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "5915:14:6"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "5931:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "5911:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5911:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "5898:6:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5898:36:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5898:36:6"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "5326:618:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5331:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5961:222:6",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5975:14:6",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5988:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "5979:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "6012:67:6",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "6030:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "6049:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "6054:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "6045:3:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6045:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "6039:5:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6039:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "6030:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "6005:6:6"
																				},
																				"nodeType": "YulIf",
																				"src": "6002:77:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "6099:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "6158:5:6"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "6165:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "6105:52:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6105:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "6092:6:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6092:81:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6092:81:6"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "5953:230:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "5306:6:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5314:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5303:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5303:14:6"
															},
															"nodeType": "YulSwitch",
															"src": "5296:887:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "4875:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "4881:3:6",
														"type": ""
													}
												],
												"src": "4794:1395:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6223:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6240:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6243:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6233:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6233:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6233:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6337:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6340:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6330:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6330:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6330:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6361:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6364:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6354:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6354:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6354:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6195:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6432:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6442:34:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6467:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6470:5:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6463:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6463:13:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "6442:8:6"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6413:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "6423:8:6",
														"type": ""
													}
												],
												"src": "6381:102:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6562:775:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6572:15:6",
															"value": {
																"name": "_power",
																"nodeType": "YulIdentifier",
																"src": "6581:6:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "6572:5:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6596:14:6",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "6605:5:6"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "6596:4:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6654:677:6",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6742:22:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "6744:16:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6744:18:6"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "6744:18:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "6720:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "6730:3:6"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "6735:4:6"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "6726:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6726:14:6"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "6717:2:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6717:24:6"
																		},
																		"nodeType": "YulIf",
																		"src": "6714:50:6"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6809:419:6",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "7189:25:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "7202:5:6"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "7209:4:6"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "7198:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7198:16:6"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "7189:5:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "6784:8:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6794:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6780:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6780:16:6"
																		},
																		"nodeType": "YulIf",
																		"src": "6777:451:6"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7241:23:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "7253:4:6"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "7259:4:6"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "7249:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7249:15:6"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "7241:4:6"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7277:44:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "7312:8:6"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nodeType": "YulIdentifier",
																				"src": "7289:22:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7289:32:6"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "7277:8:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "6630:8:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6640:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6627:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6627:15:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6643:2:6",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6623:3:6",
																"statements": []
															},
															"src": "6619:712:6"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nodeType": "YulTypedName",
														"src": "6517:6:6",
														"type": ""
													},
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "6525:5:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "6532:8:6",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "6542:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "6550:5:6",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "6557:4:6",
														"type": ""
													}
												],
												"src": "6489:848:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7403:1013:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7598:20:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7600:10:6",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "7609:1:6",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "7600:5:6"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "7611:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "7588:8:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7581:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7581:16:6"
															},
															"nodeType": "YulIf",
															"src": "7578:40:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7643:20:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7645:10:6",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "7654:1:6",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "7645:5:6"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "7656:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "7637:4:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7630:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7630:12:6"
															},
															"nodeType": "YulIf",
															"src": "7627:36:6"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7773:20:6",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "7775:10:6",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7784:1:6",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "7775:5:6"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "7786:5:6"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "7766:27:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7771:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7817:176:6",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "7852:22:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "7854:16:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7854:18:6"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "7854:18:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "7837:8:6"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7847:3:6",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "7834:2:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7834:17:6"
																				},
																				"nodeType": "YulIf",
																				"src": "7831:43:6"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "7887:25:6",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7900:1:6",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "7903:8:6"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nodeType": "YulIdentifier",
																						"src": "7896:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7896:16:6"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "7887:5:6"
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "7943:22:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "7945:16:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7945:18:6"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "7945:18:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "7931:5:6"
																						},
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "7938:3:6"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "7928:2:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7928:14:6"
																				},
																				"nodeType": "YulIf",
																				"src": "7925:40:6"
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "7978:5:6"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "7802:191:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7807:1:6",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "7723:4:6"
															},
															"nodeType": "YulSwitch",
															"src": "7716:277:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8125:123:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8139:28:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "8152:4:6"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "8158:8:6"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "8148:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8148:19:6"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "8139:5:6"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "8198:22:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "8200:16:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8200:18:6"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8200:18:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nodeType": "YulIdentifier",
																					"src": "8186:5:6"
																				},
																				{
																					"name": "max",
																					"nodeType": "YulIdentifier",
																					"src": "8193:3:6"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "8183:2:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8183:14:6"
																		},
																		"nodeType": "YulIf",
																		"src": "8180:40:6"
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "8233:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "8028:4:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8034:2:6",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "8025:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8025:12:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "8042:8:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8052:2:6",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "8039:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8039:16:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8021:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8021:35:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "8077:4:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8083:3:6",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "8074:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8074:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "8092:8:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8102:2:6",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "8089:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8089:16:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8070:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8070:36:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "8005:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8005:111:6"
															},
															"nodeType": "YulIf",
															"src": "8002:246:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8258:57:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8292:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "8295:4:6"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "8301:8:6"
																	},
																	{
																		"name": "max",
																		"nodeType": "YulIdentifier",
																		"src": "8311:3:6"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "8273:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8273:42:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "8258:5:6"
																},
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "8265:4:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8354:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8356:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8356:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8356:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "8331:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nodeType": "YulIdentifier",
																				"src": "8342:3:6"
																			},
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "8347:4:6"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "8338:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8338:14:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8328:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8328:25:6"
															},
															"nodeType": "YulIf",
															"src": "8325:51:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8385:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "8398:5:6"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "8405:4:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "8394:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8394:16:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "8385:5:6"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "7373:4:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "7379:8:6",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "7389:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "7397:5:6",
														"type": ""
													}
												],
												"src": "7343:1073:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8465:43:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8475:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8490:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8497:4:6",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8486:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8486:16:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8475:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8447:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8457:7:6",
														"type": ""
													}
												],
												"src": "8422:86:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8578:217:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8588:31:6",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "8614:4:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8596:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8596:23:6"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "8588:4:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8628:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "8656:8:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "8640:15:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8640:25:6"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nodeType": "YulIdentifier",
																	"src": "8628:8:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8675:113:6",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "8705:4:6"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "8711:8:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8721:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "8684:20:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8684:104:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "8675:5:6"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "8553:4:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "8559:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "8572:5:6",
														"type": ""
													}
												],
												"src": "8514:281:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8849:362:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8859:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8882:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8864:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8864:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8859:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8893:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8916:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8898:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8898:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8893:1:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8927:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8950:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8953:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "8946:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8946:9:6"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "8931:11:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8964:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "8993:11:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8975:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8975:30:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "8964:7:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9182:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9184:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9184:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9184:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "9115:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9108:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9108:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "9138:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "9145:7:6"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "9154:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "9141:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9141:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "9135:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9135:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "9088:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9088:83:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9068:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9068:113:6"
															},
															"nodeType": "YulIf",
															"src": "9065:139:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8832:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8835:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "8841:7:6",
														"type": ""
													}
												],
												"src": "8801:410:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9262:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9272:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9287:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9294:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9283:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9283:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "9272:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9244:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "9254:7:6",
														"type": ""
													}
												],
												"src": "9217:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9394:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9404:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9433:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "9415:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9415:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "9404:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9376:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "9386:7:6",
														"type": ""
													}
												],
												"src": "9349:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9516:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9533:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9556:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9538:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9538:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9526:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9526:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9526:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9504:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9511:3:6",
														"type": ""
													}
												],
												"src": "9451:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9673:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9683:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9695:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9706:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9691:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9691:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9683:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9763:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9776:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9787:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9772:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9772:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9719:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9719:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9719:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9645:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9657:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9668:4:6",
														"type": ""
													}
												],
												"src": "9575:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9847:147:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9857:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9880:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9862:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9862:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9857:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9891:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9914:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9896:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9896:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9891:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9925:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9936:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9939:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9932:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9932:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "9925:3:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9965:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9967:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9967:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9967:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9957:1:6"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "9960:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9954:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9954:10:6"
															},
															"nodeType": "YulIf",
															"src": "9951:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9834:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9837:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "9843:3:6",
														"type": ""
													}
												],
												"src": "9803:191:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10065:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10082:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10105:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "10087:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10087:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10075:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10075:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10075:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10053:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10060:3:6",
														"type": ""
													}
												],
												"src": "10000:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10278:288:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10288:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10300:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10311:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10296:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10296:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10288:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10368:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10381:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10392:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10377:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10377:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10324:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10324:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10324:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10449:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10462:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10473:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10458:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10458:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10405:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10405:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10405:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "10531:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10544:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10555:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10540:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10540:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10487:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10487:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10487:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10234:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10246:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10254:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10262:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10273:4:6",
														"type": ""
													}
												],
												"src": "10124:442:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10670:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10680:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10692:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10703:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10688:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10688:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10680:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10760:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10773:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10784:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10769:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10769:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10716:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10716:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10716:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10642:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10654:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10665:4:6",
														"type": ""
													}
												],
												"src": "10572:222:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b5060405162001898380380620018988339818101604052810190620000369190620003fd565b6040518060400160405280600a81526020017f5761766520546f6b656e000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f57415600000000000000000000000000000000000000000000000000000000008152508160039081620000b3919062000688565b508060049081620000c5919062000688565b5050506200010433620000dd6200010b60201b60201c565b600a620000eb9190620008f5565b83620000f8919062000945565b6200011360201b60201c565b5062000a8e565b5f6012905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000186575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016200017d9190620009d2565b60405180910390fd5b620001995f83836200019d60201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603620001f1578060025f828254620001e49190620009ed565b92505081905550620002c2565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156200027d578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401620002749392919062000a38565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036200030b578060025f828254039250508190555062000355565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620003b4919062000a73565b60405180910390a3505050565b5f80fd5b5f819050919050565b620003d981620003c5565b8114620003e4575f80fd5b50565b5f81519050620003f781620003ce565b92915050565b5f60208284031215620004155762000414620003c1565b5b5f6200042484828501620003e7565b91505092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680620004a957607f821691505b602082108103620004bf57620004be62000464565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620005237fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620004e6565b6200052f8683620004e6565b95508019841693508086168417925050509392505050565b5f819050919050565b5f620005706200056a6200056484620003c5565b62000547565b620003c5565b9050919050565b5f819050919050565b6200058b8362000550565b620005a36200059a8262000577565b848454620004f2565b825550505050565b5f90565b620005b9620005ab565b620005c681848462000580565b505050565b5b81811015620005ed57620005e15f82620005af565b600181019050620005cc565b5050565b601f8211156200063c576200060681620004c5565b6200061184620004d7565b8101602085101562000621578190505b620006396200063085620004d7565b830182620005cb565b50505b505050565b5f82821c905092915050565b5f6200065e5f198460080262000641565b1980831691505092915050565b5f6200067883836200064d565b9150826002028217905092915050565b62000693826200042d565b67ffffffffffffffff811115620006af57620006ae62000437565b5b620006bb825462000491565b620006c8828285620005f1565b5f60209050601f831160018114620006fe575f8415620006e9578287015190505b620006f585826200066b565b86555062000764565b601f1984166200070e86620004c5565b5f5b82811015620007375784890151825560018201915060208501945060208101905062000710565b8683101562000757578489015162000753601f8916826200064d565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b6001851115620007f657808604811115620007ce57620007cd6200076c565b5b6001851615620007de5780820291505b8081029050620007ee8562000799565b9450620007ae565b94509492505050565b5f82620008105760019050620008e2565b816200081f575f9050620008e2565b8160018114620008385760028114620008435762000879565b6001915050620008e2565b60ff8411156200085857620008576200076c565b5b8360020a9150848211156200087257620008716200076c565b5b50620008e2565b5060208310610133831016604e8410600b8410161715620008b35782820a905083811115620008ad57620008ac6200076c565b5b620008e2565b620008c28484846001620007a5565b92509050818404811115620008dc57620008db6200076c565b5b81810290505b9392505050565b5f60ff82169050919050565b5f6200090182620003c5565b91506200090e83620008e9565b92506200093d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484620007ff565b905092915050565b5f6200095182620003c5565b91506200095e83620003c5565b92508282026200096e81620003c5565b915082820484148315176200098857620009876200076c565b5b5092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620009ba826200098f565b9050919050565b620009cc81620009ae565b82525050565b5f602082019050620009e75f830184620009c1565b92915050565b5f620009f982620003c5565b915062000a0683620003c5565b925082820190508082111562000a215762000a206200076c565b5b92915050565b62000a3281620003c5565b82525050565b5f60608201905062000a4d5f830186620009c1565b62000a5c602083018562000a27565b62000a6b604083018462000a27565b949350505050565b5f60208201905062000a885f83018462000a27565b92915050565b610dfc8062000a9c5f395ff3fe608060405234801561000f575f80fd5b5060043610610091575f3560e01c8063313ce56711610064578063313ce5671461013157806370a082311461014f57806395d89b411461017f578063a9059cbb1461019d578063dd62ed3e146101cd57610091565b806306fdde0314610095578063095ea7b3146100b357806318160ddd146100e357806323b872dd14610101575b5f80fd5b61009d6101fd565b6040516100aa9190610a75565b60405180910390f35b6100cd60048036038101906100c89190610b26565b61028d565b6040516100da9190610b7e565b60405180910390f35b6100eb6102af565b6040516100f89190610ba6565b60405180910390f35b61011b60048036038101906101169190610bbf565b6102b8565b6040516101289190610b7e565b60405180910390f35b6101396102e6565b6040516101469190610c2a565b60405180910390f35b61016960048036038101906101649190610c43565b6102ee565b6040516101769190610ba6565b60405180910390f35b610187610333565b6040516101949190610a75565b60405180910390f35b6101b760048036038101906101b29190610b26565b6103c3565b6040516101c49190610b7e565b60405180910390f35b6101e760048036038101906101e29190610c6e565b6103e5565b6040516101f49190610ba6565b60405180910390f35b60606003805461020c90610cd9565b80601f016020809104026020016040519081016040528092919081815260200182805461023890610cd9565b80156102835780601f1061025a57610100808354040283529160200191610283565b820191905f5260205f20905b81548152906001019060200180831161026657829003601f168201915b5050505050905090565b5f80610297610467565b90506102a481858561046e565b600191505092915050565b5f600254905090565b5f806102c2610467565b90506102cf858285610480565b6102da858585610513565b60019150509392505050565b5f6012905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606004805461034290610cd9565b80601f016020809104026020016040519081016040528092919081815260200182805461036e90610cd9565b80156103b95780601f10610390576101008083540402835291602001916103b9565b820191905f5260205f20905b81548152906001019060200180831161039c57829003601f168201915b5050505050905090565b5f806103cd610467565b90506103da818585610513565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b61047b8383836001610603565b505050565b5f61048b84846103e5565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81101561050d57818110156104fe578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016104f593929190610d18565b60405180910390fd5b61050c84848484035f610603565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610583575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161057a9190610d4d565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105f3575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016105ea9190610d4d565b60405180910390fd5b6105fe8383836107d2565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610673575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161066a9190610d4d565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036106e3575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016106da9190610d4d565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156107cc578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516107c39190610ba6565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610822578060025f8282546108169190610d93565b925050819055506108f0565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156108ab578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016108a293929190610d18565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610937578060025f8282540392505081905550610981565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516109de9190610ba6565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610a22578082015181840152602081019050610a07565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610a47826109eb565b610a5181856109f5565b9350610a61818560208601610a05565b610a6a81610a2d565b840191505092915050565b5f6020820190508181035f830152610a8d8184610a3d565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610ac282610a99565b9050919050565b610ad281610ab8565b8114610adc575f80fd5b50565b5f81359050610aed81610ac9565b92915050565b5f819050919050565b610b0581610af3565b8114610b0f575f80fd5b50565b5f81359050610b2081610afc565b92915050565b5f8060408385031215610b3c57610b3b610a95565b5b5f610b4985828601610adf565b9250506020610b5a85828601610b12565b9150509250929050565b5f8115159050919050565b610b7881610b64565b82525050565b5f602082019050610b915f830184610b6f565b92915050565b610ba081610af3565b82525050565b5f602082019050610bb95f830184610b97565b92915050565b5f805f60608486031215610bd657610bd5610a95565b5b5f610be386828701610adf565b9350506020610bf486828701610adf565b9250506040610c0586828701610b12565b9150509250925092565b5f60ff82169050919050565b610c2481610c0f565b82525050565b5f602082019050610c3d5f830184610c1b565b92915050565b5f60208284031215610c5857610c57610a95565b5b5f610c6584828501610adf565b91505092915050565b5f8060408385031215610c8457610c83610a95565b5b5f610c9185828601610adf565b9250506020610ca285828601610adf565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610cf057607f821691505b602082108103610d0357610d02610cac565b5b50919050565b610d1281610ab8565b82525050565b5f606082019050610d2b5f830186610d09565b610d386020830185610b97565b610d456040830184610b97565b949350505050565b5f602082019050610d605f830184610d09565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610d9d82610af3565b9150610da883610af3565b9250828201905080821115610dc057610dbf610d66565b5b9291505056fea26469706673582212206be31730b65fadcad3a4a480338bba50315a2925e0d6da903b1d825fcd990b1a64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1898 CODESIZE SUB DUP1 PUSH3 0x1898 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x3FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5761766520546F6B656E00000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5741560000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xB3 SWAP2 SWAP1 PUSH3 0x688 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0xC5 SWAP2 SWAP1 PUSH3 0x688 JUMP JUMPDEST POP POP POP PUSH3 0x104 CALLER PUSH3 0xDD PUSH3 0x10B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH3 0xEB SWAP2 SWAP1 PUSH3 0x8F5 JUMP JUMPDEST DUP4 PUSH3 0xF8 SWAP2 SWAP1 PUSH3 0x945 JUMP JUMPDEST PUSH3 0x113 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0xA8E JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x186 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x17D SWAP2 SWAP1 PUSH3 0x9D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x199 PUSH0 DUP4 DUP4 PUSH3 0x19D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x1F1 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x1E4 SWAP2 SWAP1 PUSH3 0x9ED JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x2C2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x27D JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x274 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xA38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x30B JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x355 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x3B4 SWAP2 SWAP1 PUSH3 0xA73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3D9 DUP2 PUSH3 0x3C5 JUMP JUMPDEST DUP2 EQ PUSH3 0x3E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x3F7 DUP2 PUSH3 0x3CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x415 JUMPI PUSH3 0x414 PUSH3 0x3C1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x424 DUP5 DUP3 DUP6 ADD PUSH3 0x3E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x4A9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x4BF JUMPI PUSH3 0x4BE PUSH3 0x464 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x523 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x4E6 JUMP JUMPDEST PUSH3 0x52F DUP7 DUP4 PUSH3 0x4E6 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x570 PUSH3 0x56A PUSH3 0x564 DUP5 PUSH3 0x3C5 JUMP JUMPDEST PUSH3 0x547 JUMP JUMPDEST PUSH3 0x3C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x58B DUP4 PUSH3 0x550 JUMP JUMPDEST PUSH3 0x5A3 PUSH3 0x59A DUP3 PUSH3 0x577 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x4F2 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x5B9 PUSH3 0x5AB JUMP JUMPDEST PUSH3 0x5C6 DUP2 DUP5 DUP5 PUSH3 0x580 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x5ED JUMPI PUSH3 0x5E1 PUSH0 DUP3 PUSH3 0x5AF JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x5CC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x63C JUMPI PUSH3 0x606 DUP2 PUSH3 0x4C5 JUMP JUMPDEST PUSH3 0x611 DUP5 PUSH3 0x4D7 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x621 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x639 PUSH3 0x630 DUP6 PUSH3 0x4D7 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x5CB JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x65E PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x641 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x678 DUP4 DUP4 PUSH3 0x64D JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x693 DUP3 PUSH3 0x42D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x6AF JUMPI PUSH3 0x6AE PUSH3 0x437 JUMP JUMPDEST JUMPDEST PUSH3 0x6BB DUP3 SLOAD PUSH3 0x491 JUMP JUMPDEST PUSH3 0x6C8 DUP3 DUP3 DUP6 PUSH3 0x5F1 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x6FE JUMPI PUSH0 DUP5 ISZERO PUSH3 0x6E9 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x6F5 DUP6 DUP3 PUSH3 0x66B JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x764 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x70E DUP7 PUSH3 0x4C5 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x737 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x710 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x757 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x753 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x64D JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH3 0x7F6 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH3 0x7CE JUMPI PUSH3 0x7CD PUSH3 0x76C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH3 0x7DE JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH3 0x7EE DUP6 PUSH3 0x799 JUMP JUMPDEST SWAP5 POP PUSH3 0x7AE JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH3 0x810 JUMPI PUSH1 0x1 SWAP1 POP PUSH3 0x8E2 JUMP JUMPDEST DUP2 PUSH3 0x81F JUMPI PUSH0 SWAP1 POP PUSH3 0x8E2 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x838 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x843 JUMPI PUSH3 0x879 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x8E2 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x858 JUMPI PUSH3 0x857 PUSH3 0x76C JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH3 0x872 JUMPI PUSH3 0x871 PUSH3 0x76C JUMP JUMPDEST JUMPDEST POP PUSH3 0x8E2 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x8B3 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH3 0x8AD JUMPI PUSH3 0x8AC PUSH3 0x76C JUMP JUMPDEST JUMPDEST PUSH3 0x8E2 JUMP JUMPDEST PUSH3 0x8C2 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH3 0x7A5 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH3 0x8DC JUMPI PUSH3 0x8DB PUSH3 0x76C JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x901 DUP3 PUSH3 0x3C5 JUMP JUMPDEST SWAP2 POP PUSH3 0x90E DUP4 PUSH3 0x8E9 JUMP JUMPDEST SWAP3 POP PUSH3 0x93D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH3 0x7FF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x951 DUP3 PUSH3 0x3C5 JUMP JUMPDEST SWAP2 POP PUSH3 0x95E DUP4 PUSH3 0x3C5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH3 0x96E DUP2 PUSH3 0x3C5 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH3 0x988 JUMPI PUSH3 0x987 PUSH3 0x76C JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x9BA DUP3 PUSH3 0x98F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x9CC DUP2 PUSH3 0x9AE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x9E7 PUSH0 DUP4 ADD DUP5 PUSH3 0x9C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x9F9 DUP3 PUSH3 0x3C5 JUMP JUMPDEST SWAP2 POP PUSH3 0xA06 DUP4 PUSH3 0x3C5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0xA21 JUMPI PUSH3 0xA20 PUSH3 0x76C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xA32 DUP2 PUSH3 0x3C5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0xA4D PUSH0 DUP4 ADD DUP7 PUSH3 0x9C1 JUMP JUMPDEST PUSH3 0xA5C PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0xA27 JUMP JUMPDEST PUSH3 0xA6B PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0xA27 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xA88 PUSH0 DUP4 ADD DUP5 PUSH3 0xA27 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDFC DUP1 PUSH3 0xA9C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1CD JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9D PUSH2 0x1FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0xA75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0xB26 JUMP JUMPDEST PUSH2 0x28D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDA SWAP2 SWAP1 PUSH2 0xB7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEB PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0xBA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x116 SWAP2 SWAP1 PUSH2 0xBBF JUMP JUMPDEST PUSH2 0x2B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x128 SWAP2 SWAP1 PUSH2 0xB7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH2 0x2E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0xC2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0xC43 JUMP JUMPDEST PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0xBA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH2 0x333 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x194 SWAP2 SWAP1 PUSH2 0xA75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0xB26 JUMP JUMPDEST PUSH2 0x3C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0xB7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0xC6E JUMP JUMPDEST PUSH2 0x3E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0xBA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x20C SWAP1 PUSH2 0xCD9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x238 SWAP1 PUSH2 0xCD9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x283 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x25A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x283 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x266 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x297 PUSH2 0x467 JUMP JUMPDEST SWAP1 POP PUSH2 0x2A4 DUP2 DUP6 DUP6 PUSH2 0x46E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2C2 PUSH2 0x467 JUMP JUMPDEST SWAP1 POP PUSH2 0x2CF DUP6 DUP3 DUP6 PUSH2 0x480 JUMP JUMPDEST PUSH2 0x2DA DUP6 DUP6 DUP6 PUSH2 0x513 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x342 SWAP1 PUSH2 0xCD9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x36E SWAP1 PUSH2 0xCD9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3B9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x390 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3B9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x39C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3CD PUSH2 0x467 JUMP JUMPDEST SWAP1 POP PUSH2 0x3DA DUP2 DUP6 DUP6 PUSH2 0x513 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x47B DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x603 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x48B DUP5 DUP5 PUSH2 0x3E5 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x50D JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4FE JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x50C DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x603 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x583 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57A SWAP2 SWAP1 PUSH2 0xD4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5F3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EA SWAP2 SWAP1 PUSH2 0xD4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5FE DUP4 DUP4 DUP4 PUSH2 0x7D2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x673 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x66A SWAP2 SWAP1 PUSH2 0xD4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6E3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DA SWAP2 SWAP1 PUSH2 0xD4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x7CC JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x7C3 SWAP2 SWAP1 PUSH2 0xBA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x822 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x816 SWAP2 SWAP1 PUSH2 0xD93 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x8F0 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x8AB JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x937 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x981 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x9DE SWAP2 SWAP1 PUSH2 0xBA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA22 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA07 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA47 DUP3 PUSH2 0x9EB JUMP JUMPDEST PUSH2 0xA51 DUP2 DUP6 PUSH2 0x9F5 JUMP JUMPDEST SWAP4 POP PUSH2 0xA61 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA05 JUMP JUMPDEST PUSH2 0xA6A DUP2 PUSH2 0xA2D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA8D DUP2 DUP5 PUSH2 0xA3D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAC2 DUP3 PUSH2 0xA99 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAD2 DUP2 PUSH2 0xAB8 JUMP JUMPDEST DUP2 EQ PUSH2 0xADC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAED DUP2 PUSH2 0xAC9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB05 DUP2 PUSH2 0xAF3 JUMP JUMPDEST DUP2 EQ PUSH2 0xB0F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB20 DUP2 PUSH2 0xAFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB3C JUMPI PUSH2 0xB3B PUSH2 0xA95 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB49 DUP6 DUP3 DUP7 ADD PUSH2 0xADF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB5A DUP6 DUP3 DUP7 ADD PUSH2 0xB12 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB78 DUP2 PUSH2 0xB64 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB91 PUSH0 DUP4 ADD DUP5 PUSH2 0xB6F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBA0 DUP2 PUSH2 0xAF3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBB9 PUSH0 DUP4 ADD DUP5 PUSH2 0xB97 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xBD6 JUMPI PUSH2 0xBD5 PUSH2 0xA95 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBE3 DUP7 DUP3 DUP8 ADD PUSH2 0xADF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xBF4 DUP7 DUP3 DUP8 ADD PUSH2 0xADF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xC05 DUP7 DUP3 DUP8 ADD PUSH2 0xB12 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC24 DUP2 PUSH2 0xC0F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC3D PUSH0 DUP4 ADD DUP5 PUSH2 0xC1B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC58 JUMPI PUSH2 0xC57 PUSH2 0xA95 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC65 DUP5 DUP3 DUP6 ADD PUSH2 0xADF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC84 JUMPI PUSH2 0xC83 PUSH2 0xA95 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC91 DUP6 DUP3 DUP7 ADD PUSH2 0xADF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xCA2 DUP6 DUP3 DUP7 ADD PUSH2 0xADF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xCF0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xD03 JUMPI PUSH2 0xD02 PUSH2 0xCAC JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD12 DUP2 PUSH2 0xAB8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD2B PUSH0 DUP4 ADD DUP7 PUSH2 0xD09 JUMP JUMPDEST PUSH2 0xD38 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xB97 JUMP JUMPDEST PUSH2 0xD45 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xB97 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD60 PUSH0 DUP4 ADD DUP5 PUSH2 0xD09 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xD9D DUP3 PUSH2 0xAF3 JUMP JUMPDEST SWAP2 POP PUSH2 0xDA8 DUP4 PUSH2 0xAF3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xDC0 JUMPI PUSH2 0xDBF PUSH2 0xD66 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0xE31730B65FADCAD3A4A48033 DUP12 0xBA POP BALANCE GAS 0x29 0x25 0xE0 0xD6 0xDA SWAP1 EXTCODESIZE SAR DUP3 PUSH0 0xCD SWAP10 SIGNEXTEND BYTE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "119:172:5:-:0;;;155:133;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1582:113:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1656:5;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;229:51:5::1;235:10;269;:8;;;:10;;:::i;:::-;263:2;:16;;;;:::i;:::-;247:13;:32;;;;:::i;:::-;229:5;;;:51;;:::i;:::-;155:133:::0;119:172;;2688:82:1;2737:5;2761:2;2754:9;;2688:82;:::o;7439:208::-;7528:1;7509:21;;:7;:21;;;7505:91;;7582:1;7553:32;;;;;;;;;;;:::i;:::-;;;;;;;;7505:91;7605:35;7621:1;7625:7;7634:5;7605:7;;;:35;;:::i;:::-;7439:208;;:::o;5989:1107::-;6094:1;6078:18;;:4;:18;;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;;;;;6074:540;;;6266:19;6288:9;:15;6298:4;6288:15;;;;;;;;;;;;;;;;6266:37;;6335:5;6321:11;:19;6317:115;;;6392:4;6398:11;6411:5;6367:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6317:115;6584:5;6570:11;:19;6552:9;:15;6562:4;6552:15;;;;;;;;;;;;;;;:37;;;;6252:362;6074:540;6642:1;6628:16;;:2;:16;;;6624:425;;6807:5;6791:12;;:21;;;;;;;;;;;6624:425;;;7019:5;7002:9;:13;7012:2;7002:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6624:425;7079:2;7064:25;;7073:4;7064:25;;;7083:5;7064:25;;;;;;:::i;:::-;;;;;;;;5989:1107;;;:::o;88:117:6:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:351::-;764:6;813:2;801:9;792:7;788:23;784:32;781:119;;;819:79;;:::i;:::-;781:119;939:1;964:64;1020:7;1011:6;1000:9;996:22;964:64;:::i;:::-;954:74;;910:128;694:351;;;;:::o;1051:99::-;1103:6;1137:5;1131:12;1121:22;;1051:99;;;:::o;1156:180::-;1204:77;1201:1;1194:88;1301:4;1298:1;1291:15;1325:4;1322:1;1315:15;1342:180;1390:77;1387:1;1380:88;1487:4;1484:1;1477:15;1511:4;1508:1;1501:15;1528:320;1572:6;1609:1;1603:4;1599:12;1589:22;;1656:1;1650:4;1646:12;1677:18;1667:81;;1733:4;1725:6;1721:17;1711:27;;1667:81;1795:2;1787:6;1784:14;1764:18;1761:38;1758:84;;1814:18;;:::i;:::-;1758:84;1579:269;1528:320;;;:::o;1854:141::-;1903:4;1926:3;1918:11;;1949:3;1946:1;1939:14;1983:4;1980:1;1970:18;1962:26;;1854:141;;;:::o;2001:93::-;2038:6;2085:2;2080;2073:5;2069:14;2065:23;2055:33;;2001:93;;;:::o;2100:107::-;2144:8;2194:5;2188:4;2184:16;2163:37;;2100:107;;;;:::o;2213:393::-;2282:6;2332:1;2320:10;2316:18;2355:97;2385:66;2374:9;2355:97;:::i;:::-;2473:39;2503:8;2492:9;2473:39;:::i;:::-;2461:51;;2545:4;2541:9;2534:5;2530:21;2521:30;;2594:4;2584:8;2580:19;2573:5;2570:30;2560:40;;2289:317;;2213:393;;;;;:::o;2612:60::-;2640:3;2661:5;2654:12;;2612:60;;;:::o;2678:142::-;2728:9;2761:53;2779:34;2788:24;2806:5;2788:24;:::i;:::-;2779:34;:::i;:::-;2761:53;:::i;:::-;2748:66;;2678:142;;;:::o;2826:75::-;2869:3;2890:5;2883:12;;2826:75;;;:::o;2907:269::-;3017:39;3048:7;3017:39;:::i;:::-;3078:91;3127:41;3151:16;3127:41;:::i;:::-;3119:6;3112:4;3106:11;3078:91;:::i;:::-;3072:4;3065:105;2983:193;2907:269;;;:::o;3182:73::-;3227:3;3182:73;:::o;3261:189::-;3338:32;;:::i;:::-;3379:65;3437:6;3429;3423:4;3379:65;:::i;:::-;3314:136;3261:189;;:::o;3456:186::-;3516:120;3533:3;3526:5;3523:14;3516:120;;;3587:39;3624:1;3617:5;3587:39;:::i;:::-;3560:1;3553:5;3549:13;3540:22;;3516:120;;;3456:186;;:::o;3648:543::-;3749:2;3744:3;3741:11;3738:446;;;3783:38;3815:5;3783:38;:::i;:::-;3867:29;3885:10;3867:29;:::i;:::-;3857:8;3853:44;4050:2;4038:10;4035:18;4032:49;;;4071:8;4056:23;;4032:49;4094:80;4150:22;4168:3;4150:22;:::i;:::-;4140:8;4136:37;4123:11;4094:80;:::i;:::-;3753:431;;3738:446;3648:543;;;:::o;4197:117::-;4251:8;4301:5;4295:4;4291:16;4270:37;;4197:117;;;;:::o;4320:169::-;4364:6;4397:51;4445:1;4441:6;4433:5;4430:1;4426:13;4397:51;:::i;:::-;4393:56;4478:4;4472;4468:15;4458:25;;4371:118;4320:169;;;;:::o;4494:295::-;4570:4;4716:29;4741:3;4735:4;4716:29;:::i;:::-;4708:37;;4778:3;4775:1;4771:11;4765:4;4762:21;4754:29;;4494:295;;;;:::o;4794:1395::-;4911:37;4944:3;4911:37;:::i;:::-;5013:18;5005:6;5002:30;4999:56;;;5035:18;;:::i;:::-;4999:56;5079:38;5111:4;5105:11;5079:38;:::i;:::-;5164:67;5224:6;5216;5210:4;5164:67;:::i;:::-;5258:1;5282:4;5269:17;;5314:2;5306:6;5303:14;5331:1;5326:618;;;;5988:1;6005:6;6002:77;;;6054:9;6049:3;6045:19;6039:26;6030:35;;6002:77;6105:67;6165:6;6158:5;6105:67;:::i;:::-;6099:4;6092:81;5961:222;5296:887;;5326:618;5378:4;5374:9;5366:6;5362:22;5412:37;5444:4;5412:37;:::i;:::-;5471:1;5485:208;5499:7;5496:1;5493:14;5485:208;;;5578:9;5573:3;5569:19;5563:26;5555:6;5548:42;5629:1;5621:6;5617:14;5607:24;;5676:2;5665:9;5661:18;5648:31;;5522:4;5519:1;5515:12;5510:17;;5485:208;;;5721:6;5712:7;5709:19;5706:179;;;5779:9;5774:3;5770:19;5764:26;5822:48;5864:4;5856:6;5852:17;5841:9;5822:48;:::i;:::-;5814:6;5807:64;5729:156;5706:179;5931:1;5927;5919:6;5915:14;5911:22;5905:4;5898:36;5333:611;;;5296:887;;4886:1303;;;4794:1395;;:::o;6195:180::-;6243:77;6240:1;6233:88;6340:4;6337:1;6330:15;6364:4;6361:1;6354:15;6381:102;6423:8;6470:5;6467:1;6463:13;6442:34;;6381:102;;;:::o;6489:848::-;6550:5;6557:4;6581:6;6572:15;;6605:5;6596:14;;6619:712;6640:1;6630:8;6627:15;6619:712;;;6735:4;6730:3;6726:14;6720:4;6717:24;6714:50;;;6744:18;;:::i;:::-;6714:50;6794:1;6784:8;6780:16;6777:451;;;7209:4;7202:5;7198:16;7189:25;;6777:451;7259:4;7253;7249:15;7241:23;;7289:32;7312:8;7289:32;:::i;:::-;7277:44;;6619:712;;;6489:848;;;;;;;:::o;7343:1073::-;7397:5;7588:8;7578:40;;7609:1;7600:10;;7611:5;;7578:40;7637:4;7627:36;;7654:1;7645:10;;7656:5;;7627:36;7723:4;7771:1;7766:27;;;;7807:1;7802:191;;;;7716:277;;7766:27;7784:1;7775:10;;7786:5;;;7802:191;7847:3;7837:8;7834:17;7831:43;;;7854:18;;:::i;:::-;7831:43;7903:8;7900:1;7896:16;7887:25;;7938:3;7931:5;7928:14;7925:40;;;7945:18;;:::i;:::-;7925:40;7978:5;;;7716:277;;8102:2;8092:8;8089:16;8083:3;8077:4;8074:13;8070:36;8052:2;8042:8;8039:16;8034:2;8028:4;8025:12;8021:35;8005:111;8002:246;;;8158:8;8152:4;8148:19;8139:28;;8193:3;8186:5;8183:14;8180:40;;;8200:18;;:::i;:::-;8180:40;8233:5;;8002:246;8273:42;8311:3;8301:8;8295:4;8292:1;8273:42;:::i;:::-;8258:57;;;;8347:4;8342:3;8338:14;8331:5;8328:25;8325:51;;;8356:18;;:::i;:::-;8325:51;8405:4;8398:5;8394:16;8385:25;;7343:1073;;;;;;:::o;8422:86::-;8457:7;8497:4;8490:5;8486:16;8475:27;;8422:86;;;:::o;8514:281::-;8572:5;8596:23;8614:4;8596:23;:::i;:::-;8588:31;;8640:25;8656:8;8640:25;:::i;:::-;8628:37;;8684:104;8721:66;8711:8;8705:4;8684:104;:::i;:::-;8675:113;;8514:281;;;;:::o;8801:410::-;8841:7;8864:20;8882:1;8864:20;:::i;:::-;8859:25;;8898:20;8916:1;8898:20;:::i;:::-;8893:25;;8953:1;8950;8946:9;8975:30;8993:11;8975:30;:::i;:::-;8964:41;;9154:1;9145:7;9141:15;9138:1;9135:22;9115:1;9108:9;9088:83;9065:139;;9184:18;;:::i;:::-;9065:139;8849:362;8801:410;;;;:::o;9217:126::-;9254:7;9294:42;9287:5;9283:54;9272:65;;9217:126;;;:::o;9349:96::-;9386:7;9415:24;9433:5;9415:24;:::i;:::-;9404:35;;9349:96;;;:::o;9451:118::-;9538:24;9556:5;9538:24;:::i;:::-;9533:3;9526:37;9451:118;;:::o;9575:222::-;9668:4;9706:2;9695:9;9691:18;9683:26;;9719:71;9787:1;9776:9;9772:17;9763:6;9719:71;:::i;:::-;9575:222;;;;:::o;9803:191::-;9843:3;9862:20;9880:1;9862:20;:::i;:::-;9857:25;;9896:20;9914:1;9896:20;:::i;:::-;9891:25;;9939:1;9936;9932:9;9925:16;;9960:3;9957:1;9954:10;9951:36;;;9967:18;;:::i;:::-;9951:36;9803:191;;;;:::o;10000:118::-;10087:24;10105:5;10087:24;:::i;:::-;10082:3;10075:37;10000:118;;:::o;10124:442::-;10273:4;10311:2;10300:9;10296:18;10288:26;;10324:71;10392:1;10381:9;10377:17;10368:6;10324:71;:::i;:::-;10405:72;10473:2;10462:9;10458:18;10449:6;10405:72;:::i;:::-;10487;10555:2;10544:9;10540:18;10531:6;10487:72;:::i;:::-;10124:442;;;;;;:::o;10572:222::-;10665:4;10703:2;10692:9;10688:18;10680:26;;10716:71;10784:1;10773:9;10769:17;10760:6;10716:71;:::i;:::-;10572:222;;;;:::o;119:172:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_542": {
									"entryPoint": 1134,
									"id": 542,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_602": {
									"entryPoint": 1539,
									"id": 602,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_767": {
									"entryPoint": 1127,
									"id": 767,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_650": {
									"entryPoint": 1152,
									"id": 650,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_381": {
									"entryPoint": 1299,
									"id": 381,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 2002,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_278": {
									"entryPoint": 997,
									"id": 278,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_302": {
									"entryPoint": 653,
									"id": 302,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_237": {
									"entryPoint": 750,
									"id": 237,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_215": {
									"entryPoint": 742,
									"id": 215,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@name_197": {
									"entryPoint": 509,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_206": {
									"entryPoint": 819,
									"id": 206,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_224": {
									"entryPoint": 687,
									"id": 224,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_334": {
									"entryPoint": 696,
									"id": 334,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_261": {
									"entryPoint": 963,
									"id": 261,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2783,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2834,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3139,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3182,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3007,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2854,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3337,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2927,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2621,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2967,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 3099,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3405,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3352,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 2942,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2677,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2982,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 3114,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2539,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2549,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2744,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2916,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2713,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2803,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3087,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2565,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 3289,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3430,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 3244,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2709,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2605,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 2761,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2812,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7360:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:6",
														"type": ""
													}
												],
												"src": "7:99:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:6",
														"type": ""
													}
												],
												"src": "112:169:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "349:184:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "368:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "363:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "428:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:6"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:6"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:13:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "400:19:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "402:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "414:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "382:3:6",
																"statements": []
															},
															"src": "378:113:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:6"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "525:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:27:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "500:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "331:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "336:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "341:6:6",
														"type": ""
													}
												],
												"src": "287:246:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:54:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "597:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "622:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "631:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "570:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "580:6:6",
														"type": ""
													}
												],
												"src": "539:102:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:285:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:39:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "753:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "811:78:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:71:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "944:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:6"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "898:65:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "898:65:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "972:46:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:39:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "720:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "727:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "735:3:6",
														"type": ""
													}
												],
												"src": "647:377:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:195:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1250:86:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:6"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1258:78:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1120:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1132:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1143:4:6",
														"type": ""
													}
												],
												"src": "1030:313:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1389:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1399:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1409:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1382:6:6",
														"type": ""
													}
												],
												"src": "1349:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1519:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1642:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1721:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1731:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1742:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1703:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1713:7:6",
														"type": ""
													}
												],
												"src": "1676:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1853:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1863:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1874:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1835:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1845:7:6",
														"type": ""
													}
												],
												"src": "1808:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1953:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2010:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1966:43:6"
															},
															"nodeType": "YulIf",
															"src": "1963:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1946:5:6",
														"type": ""
													}
												],
												"src": "1910:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2090:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2100:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2109:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2138:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2068:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2076:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2084:5:6",
														"type": ""
													}
												],
												"src": "2038:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2228:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2238:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2249:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2210:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2220:7:6",
														"type": ""
													}
												],
												"src": "2183:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2309:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2366:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2322:43:6"
															},
															"nodeType": "YulIf",
															"src": "2319:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2302:5:6",
														"type": ""
													}
												],
												"src": "2266:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2446:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2456:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2465:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2494:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2424:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2432:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2440:5:6",
														"type": ""
													}
												],
												"src": "2394:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2622:391:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2635:32:6"
															},
															"nodeType": "YulIf",
															"src": "2632:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "2761:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2805:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2888:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2933:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2584:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2595:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2607:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2615:6:6",
														"type": ""
													}
												],
												"src": "2539:474:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3061:48:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3071:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3082:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3043:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3053:7:6",
														"type": ""
													}
												],
												"src": "3019:90:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3174:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3184:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3162:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3169:3:6",
														"type": ""
													}
												],
												"src": "3115:109:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3322:118:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3332:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3340:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3368:65:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3294:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3306:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3317:4:6",
														"type": ""
													}
												],
												"src": "3230:210:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3511:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3528:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3551:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3533:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3533:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3521:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3521:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3499:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3506:3:6",
														"type": ""
													}
												],
												"src": "3446:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3668:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3678:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3690:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3701:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3686:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3678:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3714:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3714:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3714:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3640:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3652:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3663:4:6",
														"type": ""
													}
												],
												"src": "3570:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3898:519:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3944:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3946:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3946:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3946:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3915:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3911:32:6"
															},
															"nodeType": "YulIf",
															"src": "3908:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "4037:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4052:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4056:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4081:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4091:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4091:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4164:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4179:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4183:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4209:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4292:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4337:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3852:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3863:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3875:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3883:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3891:6:6",
														"type": ""
													}
												],
												"src": "3798:619:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4466:43:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4476:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4491:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4498:4:6",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4487:16:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4476:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4448:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4458:7:6",
														"type": ""
													}
												],
												"src": "4423:86:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4576:51:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4593:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4614:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "4598:15:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4598:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4586:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4586:35:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4586:35:6"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4564:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4571:3:6",
														"type": ""
													}
												],
												"src": "4515:112:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4727:120:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4737:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4749:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4760:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4745:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4745:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4737:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4813:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4837:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4822:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4773:39:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4773:67:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4773:67:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4699:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4711:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4722:4:6",
														"type": ""
													}
												],
												"src": "4633:214:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4919:263:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4965:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4967:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4967:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4967:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4940:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4949:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4936:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4936:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4961:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4932:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4932:32:6"
															},
															"nodeType": "YulIf",
															"src": "4929:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "5058:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5073:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5087:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5077:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5102:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5137:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5148:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5133:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5133:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5157:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5112:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5112:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5102:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4889:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4900:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4912:6:6",
														"type": ""
													}
												],
												"src": "4853:329:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5271:391:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5317:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5319:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5319:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5319:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5292:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5301:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5288:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5288:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5313:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5284:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5284:32:6"
															},
															"nodeType": "YulIf",
															"src": "5281:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "5410:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5425:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5439:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5429:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5454:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5489:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5500:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5485:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5485:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5509:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5464:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5464:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5454:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5537:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5552:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5566:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5556:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5582:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5617:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5628:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5613:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5613:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5637:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5592:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5592:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5582:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5233:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5244:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5256:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5264:6:6",
														"type": ""
													}
												],
												"src": "5188:474:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5696:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5713:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5716:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5706:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5706:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5706:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5810:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5813:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5803:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5803:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5803:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5834:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5837:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5827:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5827:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5827:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "5668:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5905:269:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5915:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5929:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5935:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "5925:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5925:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5915:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5946:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5976:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5982:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5972:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5972:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5950:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6023:51:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6037:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "6051:6:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6059:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6047:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6047:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6037:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6003:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5996:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5996:26:6"
															},
															"nodeType": "YulIf",
															"src": "5993:81:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6126:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "6140:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6140:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6140:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6090:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6113:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6121:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6110:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6110:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6087:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6087:38:6"
															},
															"nodeType": "YulIf",
															"src": "6084:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5889:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5898:6:6",
														"type": ""
													}
												],
												"src": "5854:320:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6245:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6262:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6285:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6267:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6267:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6255:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6255:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6255:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6233:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6240:3:6",
														"type": ""
													}
												],
												"src": "6180:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6458:288:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6468:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6480:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6491:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6476:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6476:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6468:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6548:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6561:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6572:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6557:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6557:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6504:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6504:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6504:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6629:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6642:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6653:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6638:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6638:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6585:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6585:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6585:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6711:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6724:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6735:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6720:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6720:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6667:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6667:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6667:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6414:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6426:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6434:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6442:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6453:4:6",
														"type": ""
													}
												],
												"src": "6304:442:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6850:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6860:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6872:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6883:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6868:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6868:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6860:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6940:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6953:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6964:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6949:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6949:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6896:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6896:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6896:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6822:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6834:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6845:4:6",
														"type": ""
													}
												],
												"src": "6752:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7008:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7025:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7028:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7018:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7018:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7018:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7122:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7125:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7115:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7115:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7115:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7146:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7149:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7139:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7139:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7139:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6980:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7210:147:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7220:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7243:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7225:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7225:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7220:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7254:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7277:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7259:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7259:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7254:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7288:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7299:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7302:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7295:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7295:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "7288:3:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7328:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7330:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7330:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7330:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7320:1:6"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "7323:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7317:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7317:10:6"
															},
															"nodeType": "YulIf",
															"src": "7314:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7197:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7200:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "7206:3:6",
														"type": ""
													}
												],
												"src": "7166:191:6"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610091575f3560e01c8063313ce56711610064578063313ce5671461013157806370a082311461014f57806395d89b411461017f578063a9059cbb1461019d578063dd62ed3e146101cd57610091565b806306fdde0314610095578063095ea7b3146100b357806318160ddd146100e357806323b872dd14610101575b5f80fd5b61009d6101fd565b6040516100aa9190610a75565b60405180910390f35b6100cd60048036038101906100c89190610b26565b61028d565b6040516100da9190610b7e565b60405180910390f35b6100eb6102af565b6040516100f89190610ba6565b60405180910390f35b61011b60048036038101906101169190610bbf565b6102b8565b6040516101289190610b7e565b60405180910390f35b6101396102e6565b6040516101469190610c2a565b60405180910390f35b61016960048036038101906101649190610c43565b6102ee565b6040516101769190610ba6565b60405180910390f35b610187610333565b6040516101949190610a75565b60405180910390f35b6101b760048036038101906101b29190610b26565b6103c3565b6040516101c49190610b7e565b60405180910390f35b6101e760048036038101906101e29190610c6e565b6103e5565b6040516101f49190610ba6565b60405180910390f35b60606003805461020c90610cd9565b80601f016020809104026020016040519081016040528092919081815260200182805461023890610cd9565b80156102835780601f1061025a57610100808354040283529160200191610283565b820191905f5260205f20905b81548152906001019060200180831161026657829003601f168201915b5050505050905090565b5f80610297610467565b90506102a481858561046e565b600191505092915050565b5f600254905090565b5f806102c2610467565b90506102cf858285610480565b6102da858585610513565b60019150509392505050565b5f6012905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606004805461034290610cd9565b80601f016020809104026020016040519081016040528092919081815260200182805461036e90610cd9565b80156103b95780601f10610390576101008083540402835291602001916103b9565b820191905f5260205f20905b81548152906001019060200180831161039c57829003601f168201915b5050505050905090565b5f806103cd610467565b90506103da818585610513565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b61047b8383836001610603565b505050565b5f61048b84846103e5565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81101561050d57818110156104fe578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016104f593929190610d18565b60405180910390fd5b61050c84848484035f610603565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610583575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161057a9190610d4d565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105f3575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016105ea9190610d4d565b60405180910390fd5b6105fe8383836107d2565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610673575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161066a9190610d4d565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036106e3575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016106da9190610d4d565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156107cc578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516107c39190610ba6565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610822578060025f8282546108169190610d93565b925050819055506108f0565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156108ab578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016108a293929190610d18565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610937578060025f8282540392505081905550610981565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516109de9190610ba6565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610a22578082015181840152602081019050610a07565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610a47826109eb565b610a5181856109f5565b9350610a61818560208601610a05565b610a6a81610a2d565b840191505092915050565b5f6020820190508181035f830152610a8d8184610a3d565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610ac282610a99565b9050919050565b610ad281610ab8565b8114610adc575f80fd5b50565b5f81359050610aed81610ac9565b92915050565b5f819050919050565b610b0581610af3565b8114610b0f575f80fd5b50565b5f81359050610b2081610afc565b92915050565b5f8060408385031215610b3c57610b3b610a95565b5b5f610b4985828601610adf565b9250506020610b5a85828601610b12565b9150509250929050565b5f8115159050919050565b610b7881610b64565b82525050565b5f602082019050610b915f830184610b6f565b92915050565b610ba081610af3565b82525050565b5f602082019050610bb95f830184610b97565b92915050565b5f805f60608486031215610bd657610bd5610a95565b5b5f610be386828701610adf565b9350506020610bf486828701610adf565b9250506040610c0586828701610b12565b9150509250925092565b5f60ff82169050919050565b610c2481610c0f565b82525050565b5f602082019050610c3d5f830184610c1b565b92915050565b5f60208284031215610c5857610c57610a95565b5b5f610c6584828501610adf565b91505092915050565b5f8060408385031215610c8457610c83610a95565b5b5f610c9185828601610adf565b9250506020610ca285828601610adf565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610cf057607f821691505b602082108103610d0357610d02610cac565b5b50919050565b610d1281610ab8565b82525050565b5f606082019050610d2b5f830186610d09565b610d386020830185610b97565b610d456040830184610b97565b949350505050565b5f602082019050610d605f830184610d09565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610d9d82610af3565b9150610da883610af3565b9250828201905080821115610dc057610dbf610d66565b5b9291505056fea26469706673582212206be31730b65fadcad3a4a480338bba50315a2925e0d6da903b1d825fcd990b1a64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1CD JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9D PUSH2 0x1FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0xA75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0xB26 JUMP JUMPDEST PUSH2 0x28D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDA SWAP2 SWAP1 PUSH2 0xB7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEB PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0xBA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x116 SWAP2 SWAP1 PUSH2 0xBBF JUMP JUMPDEST PUSH2 0x2B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x128 SWAP2 SWAP1 PUSH2 0xB7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH2 0x2E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0xC2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0xC43 JUMP JUMPDEST PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0xBA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH2 0x333 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x194 SWAP2 SWAP1 PUSH2 0xA75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0xB26 JUMP JUMPDEST PUSH2 0x3C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0xB7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0xC6E JUMP JUMPDEST PUSH2 0x3E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0xBA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x20C SWAP1 PUSH2 0xCD9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x238 SWAP1 PUSH2 0xCD9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x283 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x25A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x283 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x266 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x297 PUSH2 0x467 JUMP JUMPDEST SWAP1 POP PUSH2 0x2A4 DUP2 DUP6 DUP6 PUSH2 0x46E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2C2 PUSH2 0x467 JUMP JUMPDEST SWAP1 POP PUSH2 0x2CF DUP6 DUP3 DUP6 PUSH2 0x480 JUMP JUMPDEST PUSH2 0x2DA DUP6 DUP6 DUP6 PUSH2 0x513 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x342 SWAP1 PUSH2 0xCD9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x36E SWAP1 PUSH2 0xCD9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3B9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x390 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3B9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x39C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3CD PUSH2 0x467 JUMP JUMPDEST SWAP1 POP PUSH2 0x3DA DUP2 DUP6 DUP6 PUSH2 0x513 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x47B DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x603 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x48B DUP5 DUP5 PUSH2 0x3E5 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x50D JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4FE JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x50C DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x603 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x583 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57A SWAP2 SWAP1 PUSH2 0xD4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5F3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EA SWAP2 SWAP1 PUSH2 0xD4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5FE DUP4 DUP4 DUP4 PUSH2 0x7D2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x673 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x66A SWAP2 SWAP1 PUSH2 0xD4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6E3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DA SWAP2 SWAP1 PUSH2 0xD4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x7CC JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x7C3 SWAP2 SWAP1 PUSH2 0xBA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x822 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x816 SWAP2 SWAP1 PUSH2 0xD93 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x8F0 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x8AB JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x937 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x981 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x9DE SWAP2 SWAP1 PUSH2 0xBA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA22 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA07 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA47 DUP3 PUSH2 0x9EB JUMP JUMPDEST PUSH2 0xA51 DUP2 DUP6 PUSH2 0x9F5 JUMP JUMPDEST SWAP4 POP PUSH2 0xA61 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA05 JUMP JUMPDEST PUSH2 0xA6A DUP2 PUSH2 0xA2D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA8D DUP2 DUP5 PUSH2 0xA3D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAC2 DUP3 PUSH2 0xA99 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAD2 DUP2 PUSH2 0xAB8 JUMP JUMPDEST DUP2 EQ PUSH2 0xADC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAED DUP2 PUSH2 0xAC9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB05 DUP2 PUSH2 0xAF3 JUMP JUMPDEST DUP2 EQ PUSH2 0xB0F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB20 DUP2 PUSH2 0xAFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB3C JUMPI PUSH2 0xB3B PUSH2 0xA95 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB49 DUP6 DUP3 DUP7 ADD PUSH2 0xADF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB5A DUP6 DUP3 DUP7 ADD PUSH2 0xB12 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB78 DUP2 PUSH2 0xB64 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB91 PUSH0 DUP4 ADD DUP5 PUSH2 0xB6F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBA0 DUP2 PUSH2 0xAF3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBB9 PUSH0 DUP4 ADD DUP5 PUSH2 0xB97 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xBD6 JUMPI PUSH2 0xBD5 PUSH2 0xA95 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBE3 DUP7 DUP3 DUP8 ADD PUSH2 0xADF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xBF4 DUP7 DUP3 DUP8 ADD PUSH2 0xADF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xC05 DUP7 DUP3 DUP8 ADD PUSH2 0xB12 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC24 DUP2 PUSH2 0xC0F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC3D PUSH0 DUP4 ADD DUP5 PUSH2 0xC1B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC58 JUMPI PUSH2 0xC57 PUSH2 0xA95 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC65 DUP5 DUP3 DUP6 ADD PUSH2 0xADF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC84 JUMPI PUSH2 0xC83 PUSH2 0xA95 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC91 DUP6 DUP3 DUP7 ADD PUSH2 0xADF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xCA2 DUP6 DUP3 DUP7 ADD PUSH2 0xADF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xCF0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xD03 JUMPI PUSH2 0xD02 PUSH2 0xCAC JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD12 DUP2 PUSH2 0xAB8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD2B PUSH0 DUP4 ADD DUP7 PUSH2 0xD09 JUMP JUMPDEST PUSH2 0xD38 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xB97 JUMP JUMPDEST PUSH2 0xD45 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xB97 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD60 PUSH0 DUP4 ADD DUP5 PUSH2 0xD09 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xD9D DUP3 PUSH2 0xAF3 JUMP JUMPDEST SWAP2 POP PUSH2 0xDA8 DUP4 PUSH2 0xAF3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xDC0 JUMPI PUSH2 0xDBF PUSH2 0xD66 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0xE31730B65FADCAD3A4A48033 DUP12 0xBA POP BALANCE GAS 0x29 0x25 0xE0 0xD6 0xDA SWAP1 EXTCODESIZE SAR DUP3 PUSH0 0xCD SWAP10 SIGNEXTEND BYTE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "119:172:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3979:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2830:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4757:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2688:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2985:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3296:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3532:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1760:89;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;4068:13;4084:12;:10;:12::i;:::-;4068:28;;4106:31;4115:5;4122:7;4131:5;4106:8;:31::i;:::-;4154:4;4147:11;;;3979:186;;;;:::o;2830:97::-;2882:7;2908:12;;2901:19;;2830:97;:::o;4757:244::-;4844:4;4860:15;4878:12;:10;:12::i;:::-;4860:30;;4900:37;4916:4;4922:7;4931:5;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;4990:4;4983:11;;;4757:244;;;;;:::o;2688:82::-;2737:5;2761:2;2754:9;;2688:82;:::o;2985:116::-;3050:7;3076:9;:18;3086:7;3076:18;;;;;;;;;;;;;;;;3069:25;;2985:116;;;:::o;1962:93::-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;3296:178::-;3365:4;3381:13;3397:12;:10;:12::i;:::-;3381:28;;3419:27;3429:5;3436:2;3440:5;3419:9;:27::i;:::-;3463:4;3456:11;;;3296:178;;;;:::o;3532:140::-;3612:7;3638:11;:18;3650:5;3638:18;;;;;;;;;;;;;;;:27;3657:7;3638:27;;;;;;;;;;;;;;;;3631:34;;3532:140;;;;:::o;656:96:4:-;709:7;735:10;728:17;;656:96;:::o;8707:128:1:-;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;:::-;8707:128;;;:::o;10396:476::-;10495:24;10522:25;10532:5;10539:7;10522:9;:25::i;:::-;10495:52;;10580:17;10561:16;:36;10557:309;;;10636:5;10617:16;:24;10613:130;;;10695:7;10704:16;10722:5;10668:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10613:130;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;:::-;10557:309;10485:387;10396:476;;;:::o;5374:300::-;5473:1;5457:18;;:4;:18;;;5453:86;;5525:1;5498:30;;;;;;;;;;;:::i;:::-;;;;;;;;5453:86;5566:1;5552:16;;:2;:16;;;5548:86;;5620:1;5591:32;;;;;;;;;;;:::i;:::-;;;;;;;;5548:86;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;:::-;5374:300;;;:::o;9682:432::-;9811:1;9794:19;;:5;:19;;;9790:89;;9865:1;9836:32;;;;;;;;;;;:::i;:::-;;;;;;;;9790:89;9911:1;9892:21;;:7;:21;;;9888:90;;9964:1;9936:31;;;;;;;;;;;:::i;:::-;;;;;;;;9888:90;10017:5;9987:11;:18;9999:5;9987:18;;;;;;;;;;;;;;;:27;10006:7;9987:27;;;;;;;;;;;;;;;:35;;;;10036:9;10032:76;;;10082:7;10066:31;;10075:5;10066:31;;;10091:5;10066:31;;;;;;:::i;:::-;;;;;;;;10032:76;9682:432;;;;:::o;5989:1107::-;6094:1;6078:18;;:4;:18;;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;;;;;6074:540;;;6266:19;6288:9;:15;6298:4;6288:15;;;;;;;;;;;;;;;;6266:37;;6335:5;6321:11;:19;6317:115;;;6392:4;6398:11;6411:5;6367:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6317:115;6584:5;6570:11;:19;6552:9;:15;6562:4;6552:15;;;;;;;;;;;;;;;:37;;;;6252:362;6074:540;6642:1;6628:16;;:2;:16;;;6624:425;;6807:5;6791:12;;:21;;;;;;;;;;;6624:425;;;7019:5;7002:9;:13;7012:2;7002:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6624:425;7079:2;7064:25;;7073:4;7064:25;;;7083:5;7064:25;;;;;;:::i;:::-;;;;;;;;5989:1107;;;:::o;7:99:6:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:474::-;5256:6;5264;5313:2;5301:9;5292:7;5288:23;5284:32;5281:119;;;5319:79;;:::i;:::-;5281:119;5439:1;5464:53;5509:7;5500:6;5489:9;5485:22;5464:53;:::i;:::-;5454:63;;5410:117;5566:2;5592:53;5637:7;5628:6;5617:9;5613:22;5592:53;:::i;:::-;5582:63;;5537:118;5188:474;;;;;:::o;5668:180::-;5716:77;5713:1;5706:88;5813:4;5810:1;5803:15;5837:4;5834:1;5827:15;5854:320;5898:6;5935:1;5929:4;5925:12;5915:22;;5982:1;5976:4;5972:12;6003:18;5993:81;;6059:4;6051:6;6047:17;6037:27;;5993:81;6121:2;6113:6;6110:14;6090:18;6087:38;6084:84;;6140:18;;:::i;:::-;6084:84;5905:269;5854:320;;;:::o;6180:118::-;6267:24;6285:5;6267:24;:::i;:::-;6262:3;6255:37;6180:118;;:::o;6304:442::-;6453:4;6491:2;6480:9;6476:18;6468:26;;6504:71;6572:1;6561:9;6557:17;6548:6;6504:71;:::i;:::-;6585:72;6653:2;6642:9;6638:18;6629:6;6585:72;:::i;:::-;6667;6735:2;6724:9;6720:18;6711:6;6667:72;:::i;:::-;6304:442;;;;;;:::o;6752:222::-;6845:4;6883:2;6872:9;6868:18;6860:26;;6896:71;6964:1;6953:9;6949:17;6940:6;6896:71;:::i;:::-;6752:222;;;;:::o;6980:180::-;7028:77;7025:1;7018:88;7125:4;7122:1;7115:15;7149:4;7146:1;7139:15;7166:191;7206:3;7225:20;7243:1;7225:20;:::i;:::-;7220:25;;7259:20;7277:1;7259:20;:::i;:::-;7254:25;;7302:1;7299;7295:9;7288:16;;7323:3;7320:1;7317:10;7314:36;;;7330:18;;:::i;:::-;7314:36;7166:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "716000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2851",
								"decimals()": "338",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2477",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 119,
									"end": 291,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 119,
									"end": 291,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 119,
									"end": 291,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 155,
									"end": 288,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 155,
									"end": 288,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 155,
									"end": 288,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 155,
									"end": 288,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 155,
									"end": 288,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 155,
									"end": 288,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 155,
									"end": 288,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 155,
									"end": 288,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 155,
									"end": 288,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 155,
									"end": 288,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 155,
									"end": 288,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 155,
									"end": 288,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 155,
									"end": 288,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 155,
									"end": 288,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 155,
									"end": 288,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 155,
									"end": 288,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 155,
									"end": 288,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 155,
									"end": 288,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 155,
									"end": 288,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 155,
									"end": 288,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 155,
									"end": 288,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 155,
									"end": 288,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 155,
									"end": 288,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 155,
									"end": 288,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 155,
									"end": 288,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 155,
									"end": 288,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 155,
									"end": 288,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 155,
									"end": 288,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 155,
									"end": 288,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 155,
									"end": 288,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 155,
									"end": 288,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 155,
									"end": 288,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 155,
									"end": 288,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 155,
									"end": 288,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 155,
									"end": 288,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "A"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "5761766520546F6B656E00000000000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "5741560000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 229,
									"end": 280,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 235,
									"end": 245,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 269,
									"end": 279,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 269,
									"end": 277,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 269,
									"end": 277,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 269,
									"end": 277,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 269,
									"end": 279,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 269,
									"end": 279,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 269,
									"end": 279,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 269,
									"end": 279,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 269,
									"end": 279,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 263,
									"end": 265,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "A"
								},
								{
									"begin": 263,
									"end": 279,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 263,
									"end": 279,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 263,
									"end": 279,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 263,
									"end": 279,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 263,
									"end": 279,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 263,
									"end": 279,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 263,
									"end": 279,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 247,
									"end": 260,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 247,
									"end": 279,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 247,
									"end": 279,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 247,
									"end": 279,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 247,
									"end": 279,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 247,
									"end": 279,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 247,
									"end": 279,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 247,
									"end": 279,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 229,
									"end": 234,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 229,
									"end": 234,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 229,
									"end": 234,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 229,
									"end": 280,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 229,
									"end": 280,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 229,
									"end": 280,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 229,
									"end": 280,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 229,
									"end": 280,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 155,
									"end": 288,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 119,
									"end": 291,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 119,
									"end": 291,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2688,
									"end": 2770,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 2688,
									"end": 2770,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2737,
									"end": 2742,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2761,
									"end": 2763,
									"name": "PUSH",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 2754,
									"end": 2763,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2754,
									"end": 2763,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2688,
									"end": 2770,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2688,
									"end": 2770,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7528,
									"end": 7529,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7509,
									"end": 7516,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7583,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 1,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 7553,
									"end": 7585,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 7621,
									"end": 7622,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7625,
									"end": 7632,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7634,
									"end": 7639,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7605,
									"end": 7612,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 7605,
									"end": 7612,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7605,
									"end": 7612,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 7605,
									"end": 7640,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7439,
									"end": 7647,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6094,
									"end": 6095,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6078,
									"end": 6082,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6230,
									"end": 6235,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6214,
									"end": 6226,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6214,
									"end": 6226,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 6214,
									"end": 6235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6266,
									"end": 6285,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6298,
									"end": 6302,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6266,
									"end": 6303,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6266,
									"end": 6303,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6335,
									"end": 6340,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6321,
									"end": 6332,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6321,
									"end": 6340,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6392,
									"end": 6396,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6398,
									"end": 6409,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6411,
									"end": 6416,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 1,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 6367,
									"end": 6417,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6584,
									"end": 6589,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6581,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6589,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6552,
									"end": 6561,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6562,
									"end": 6566,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6252,
									"end": 6614,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6642,
									"end": 6643,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6628,
									"end": 6630,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6807,
									"end": 6812,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6791,
									"end": 6803,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6791,
									"end": 6803,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7019,
									"end": 7024,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7011,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7012,
									"end": 7014,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7079,
									"end": 7081,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7077,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 1,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7083,
									"end": 7088,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 7064,
									"end": 7089,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5989,
									"end": 7096,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 764,
									"end": 770,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 813,
									"end": 815,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 801,
									"end": 810,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 792,
									"end": 799,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 788,
									"end": 811,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 784,
									"end": 816,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 781,
									"end": 900,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 781,
									"end": 900,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 781,
									"end": 900,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 819,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 819,
									"end": 898,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 819,
									"end": 898,
									"name": "tag",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 781,
									"end": 900,
									"name": "tag",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 781,
									"end": 900,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 939,
									"end": 940,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "86"
								},
								{
									"begin": 1020,
									"end": 1027,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1011,
									"end": 1017,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1000,
									"end": 1009,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 996,
									"end": 1018,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 964,
									"end": 1028,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "tag",
									"source": 6,
									"value": "86"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 954,
									"end": 1028,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 954,
									"end": 1028,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 910,
									"end": 1038,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 694,
									"end": 1045,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1051,
									"end": 1150,
									"name": "tag",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 1051,
									"end": 1150,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1103,
									"end": 1109,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1137,
									"end": 1142,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1131,
									"end": 1143,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1121,
									"end": 1143,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1121,
									"end": 1143,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1051,
									"end": 1150,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1051,
									"end": 1150,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1051,
									"end": 1150,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1051,
									"end": 1150,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1336,
									"name": "tag",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 1156,
									"end": 1336,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1204,
									"end": 1281,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1201,
									"end": 1202,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1194,
									"end": 1282,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1301,
									"end": 1305,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1298,
									"end": 1299,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1291,
									"end": 1306,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1325,
									"end": 1329,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1322,
									"end": 1323,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1315,
									"end": 1330,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1342,
									"end": 1522,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 1342,
									"end": 1522,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1390,
									"end": 1467,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1387,
									"end": 1388,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1380,
									"end": 1468,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1487,
									"end": 1491,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1484,
									"end": 1485,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1477,
									"end": 1492,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1511,
									"end": 1515,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1508,
									"end": 1509,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1501,
									"end": 1516,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1528,
									"end": 1848,
									"name": "tag",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 1528,
									"end": 1848,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1572,
									"end": 1578,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1609,
									"end": 1610,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1603,
									"end": 1607,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1599,
									"end": 1611,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 1589,
									"end": 1611,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1589,
									"end": 1611,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1656,
									"end": 1657,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1650,
									"end": 1654,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1646,
									"end": 1658,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1677,
									"end": 1695,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1667,
									"end": 1748,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 1667,
									"end": 1748,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1733,
									"end": 1737,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 1725,
									"end": 1731,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1721,
									"end": 1738,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1711,
									"end": 1738,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1711,
									"end": 1738,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1667,
									"end": 1748,
									"name": "tag",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 1667,
									"end": 1748,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1795,
									"end": 1797,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1787,
									"end": 1793,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1784,
									"end": 1798,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1764,
									"end": 1782,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1761,
									"end": 1799,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1758,
									"end": 1842,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "92"
								},
								{
									"begin": 1758,
									"end": 1842,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1814,
									"end": 1832,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "93"
								},
								{
									"begin": 1814,
									"end": 1832,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 1814,
									"end": 1832,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1814,
									"end": 1832,
									"name": "tag",
									"source": 6,
									"value": "93"
								},
								{
									"begin": 1814,
									"end": 1832,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1758,
									"end": 1842,
									"name": "tag",
									"source": 6,
									"value": "92"
								},
								{
									"begin": 1758,
									"end": 1842,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1579,
									"end": 1848,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1528,
									"end": 1848,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1528,
									"end": 1848,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1528,
									"end": 1848,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1528,
									"end": 1848,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "tag",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1903,
									"end": 1907,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1926,
									"end": 1929,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1918,
									"end": 1929,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1918,
									"end": 1929,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1949,
									"end": 1952,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1946,
									"end": 1947,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1939,
									"end": 1953,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1983,
									"end": 1987,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1980,
									"end": 1981,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1970,
									"end": 1988,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 1962,
									"end": 1988,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1962,
									"end": 1988,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1854,
									"end": 1995,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2038,
									"end": 2044,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2085,
									"end": 2087,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2080,
									"end": 2082,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2073,
									"end": 2078,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2069,
									"end": 2083,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2065,
									"end": 2088,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 2055,
									"end": 2088,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2055,
									"end": 2088,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2001,
									"end": 2094,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "tag",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2144,
									"end": 2152,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2194,
									"end": 2199,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2188,
									"end": 2192,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2184,
									"end": 2200,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2163,
									"end": 2200,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2163,
									"end": 2200,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2100,
									"end": 2207,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2282,
									"end": 2288,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2332,
									"end": 2333,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 2320,
									"end": 2330,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2316,
									"end": 2334,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 2355,
									"end": 2452,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "98"
								},
								{
									"begin": 2385,
									"end": 2451,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2374,
									"end": 2383,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2355,
									"end": 2452,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 2355,
									"end": 2452,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2355,
									"end": 2452,
									"name": "tag",
									"source": 6,
									"value": "98"
								},
								{
									"begin": 2355,
									"end": 2452,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2473,
									"end": 2512,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 2503,
									"end": 2511,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2492,
									"end": 2501,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2473,
									"end": 2512,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 2473,
									"end": 2512,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2473,
									"end": 2512,
									"name": "tag",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 2473,
									"end": 2512,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2461,
									"end": 2512,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 2461,
									"end": 2512,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2545,
									"end": 2549,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2541,
									"end": 2550,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 2534,
									"end": 2539,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2530,
									"end": 2551,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2521,
									"end": 2551,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 2521,
									"end": 2551,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2594,
									"end": 2598,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2584,
									"end": 2592,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2580,
									"end": 2599,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2573,
									"end": 2578,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 2600,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 2560,
									"end": 2600,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2560,
									"end": 2600,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2289,
									"end": 2606,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2289,
									"end": 2606,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2213,
									"end": 2606,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "tag",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2640,
									"end": 2643,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2661,
									"end": 2666,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2654,
									"end": 2666,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2654,
									"end": 2666,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2612,
									"end": 2672,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "tag",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2728,
									"end": 2737,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2761,
									"end": 2814,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "102"
								},
								{
									"begin": 2779,
									"end": 2813,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "103"
								},
								{
									"begin": 2788,
									"end": 2812,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "104"
								},
								{
									"begin": 2806,
									"end": 2811,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2788,
									"end": 2812,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 2788,
									"end": 2812,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2788,
									"end": 2812,
									"name": "tag",
									"source": 6,
									"value": "104"
								},
								{
									"begin": 2788,
									"end": 2812,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2779,
									"end": 2813,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 2779,
									"end": 2813,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2779,
									"end": 2813,
									"name": "tag",
									"source": 6,
									"value": "103"
								},
								{
									"begin": 2779,
									"end": 2813,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2761,
									"end": 2814,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 2761,
									"end": 2814,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2761,
									"end": 2814,
									"name": "tag",
									"source": 6,
									"value": "102"
								},
								{
									"begin": 2761,
									"end": 2814,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2748,
									"end": 2814,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2748,
									"end": 2814,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2678,
									"end": 2820,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "tag",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2869,
									"end": 2872,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2890,
									"end": 2895,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2883,
									"end": 2895,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2883,
									"end": 2895,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2826,
									"end": 2901,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "tag",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3017,
									"end": 3056,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "107"
								},
								{
									"begin": 3048,
									"end": 3055,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3017,
									"end": 3056,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 3017,
									"end": 3056,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3017,
									"end": 3056,
									"name": "tag",
									"source": 6,
									"value": "107"
								},
								{
									"begin": 3017,
									"end": 3056,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3078,
									"end": 3169,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "108"
								},
								{
									"begin": 3127,
									"end": 3168,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "109"
								},
								{
									"begin": 3151,
									"end": 3167,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3127,
									"end": 3168,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 3127,
									"end": 3168,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3127,
									"end": 3168,
									"name": "tag",
									"source": 6,
									"value": "109"
								},
								{
									"begin": 3127,
									"end": 3168,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3119,
									"end": 3125,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3112,
									"end": 3116,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3106,
									"end": 3117,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 3078,
									"end": 3169,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 3078,
									"end": 3169,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3078,
									"end": 3169,
									"name": "tag",
									"source": 6,
									"value": "108"
								},
								{
									"begin": 3078,
									"end": 3169,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3072,
									"end": 3076,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3065,
									"end": 3170,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2983,
									"end": 3176,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2907,
									"end": 3176,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3182,
									"end": 3255,
									"name": "tag",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 3182,
									"end": 3255,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3227,
									"end": 3230,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3182,
									"end": 3255,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3182,
									"end": 3255,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3261,
									"end": 3450,
									"name": "tag",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 3261,
									"end": 3450,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3338,
									"end": 3370,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "112"
								},
								{
									"begin": 3338,
									"end": 3370,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 3338,
									"end": 3370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3338,
									"end": 3370,
									"name": "tag",
									"source": 6,
									"value": "112"
								},
								{
									"begin": 3338,
									"end": 3370,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3379,
									"end": 3444,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "113"
								},
								{
									"begin": 3437,
									"end": 3443,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3429,
									"end": 3435,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3423,
									"end": 3427,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3379,
									"end": 3444,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 3379,
									"end": 3444,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3379,
									"end": 3444,
									"name": "tag",
									"source": 6,
									"value": "113"
								},
								{
									"begin": 3379,
									"end": 3444,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3314,
									"end": 3450,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3261,
									"end": 3450,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3261,
									"end": 3450,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3261,
									"end": 3450,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3456,
									"end": 3642,
									"name": "tag",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 3456,
									"end": 3642,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "tag",
									"source": 6,
									"value": "115"
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3533,
									"end": 3536,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3526,
									"end": 3531,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3523,
									"end": 3537,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "117"
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3587,
									"end": 3626,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "118"
								},
								{
									"begin": 3624,
									"end": 3625,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3617,
									"end": 3622,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3587,
									"end": 3626,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 3587,
									"end": 3626,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3587,
									"end": 3626,
									"name": "tag",
									"source": 6,
									"value": "118"
								},
								{
									"begin": 3587,
									"end": 3626,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3560,
									"end": 3561,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3553,
									"end": 3558,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3549,
									"end": 3562,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3540,
									"end": 3562,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3540,
									"end": 3562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "115"
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "tag",
									"source": 6,
									"value": "117"
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3456,
									"end": 3642,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3456,
									"end": 3642,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3456,
									"end": 3642,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "tag",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3749,
									"end": 3751,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 3744,
									"end": 3747,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3741,
									"end": 3752,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "120"
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3783,
									"end": 3821,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "121"
								},
								{
									"begin": 3815,
									"end": 3820,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3783,
									"end": 3821,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 3783,
									"end": 3821,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3783,
									"end": 3821,
									"name": "tag",
									"source": 6,
									"value": "121"
								},
								{
									"begin": 3783,
									"end": 3821,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3867,
									"end": 3896,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "122"
								},
								{
									"begin": 3885,
									"end": 3895,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3867,
									"end": 3896,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 3867,
									"end": 3896,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3867,
									"end": 3896,
									"name": "tag",
									"source": 6,
									"value": "122"
								},
								{
									"begin": 3867,
									"end": 3896,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3857,
									"end": 3865,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3853,
									"end": 3897,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4050,
									"end": 4052,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4038,
									"end": 4048,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 4035,
									"end": 4053,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "123"
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4071,
									"end": 4079,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4056,
									"end": 4079,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4056,
									"end": 4079,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "tag",
									"source": 6,
									"value": "123"
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4094,
									"end": 4174,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "124"
								},
								{
									"begin": 4150,
									"end": 4172,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "125"
								},
								{
									"begin": 4168,
									"end": 4171,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 4150,
									"end": 4172,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 4150,
									"end": 4172,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4150,
									"end": 4172,
									"name": "tag",
									"source": 6,
									"value": "125"
								},
								{
									"begin": 4150,
									"end": 4172,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4140,
									"end": 4148,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4136,
									"end": 4173,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4123,
									"end": 4134,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4094,
									"end": 4174,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 4094,
									"end": 4174,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4094,
									"end": 4174,
									"name": "tag",
									"source": 6,
									"value": "124"
								},
								{
									"begin": 4094,
									"end": 4174,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3753,
									"end": 4184,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3753,
									"end": 4184,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "tag",
									"source": 6,
									"value": "120"
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3648,
									"end": 4191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "tag",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4251,
									"end": 4259,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4301,
									"end": 4306,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4295,
									"end": 4299,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4291,
									"end": 4307,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 4270,
									"end": 4307,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4270,
									"end": 4307,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4197,
									"end": 4314,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "tag",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4364,
									"end": 4370,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4397,
									"end": 4448,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "128"
								},
								{
									"begin": 4445,
									"end": 4446,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4441,
									"end": 4447,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 4433,
									"end": 4438,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4430,
									"end": 4431,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 4426,
									"end": 4439,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 4397,
									"end": 4448,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 4397,
									"end": 4448,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4397,
									"end": 4448,
									"name": "tag",
									"source": 6,
									"value": "128"
								},
								{
									"begin": 4397,
									"end": 4448,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4393,
									"end": 4449,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 4478,
									"end": 4482,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4472,
									"end": 4476,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4468,
									"end": 4483,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4458,
									"end": 4483,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4458,
									"end": 4483,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4371,
									"end": 4489,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4320,
									"end": 4489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "tag",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4570,
									"end": 4574,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4716,
									"end": 4745,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "130"
								},
								{
									"begin": 4741,
									"end": 4744,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4735,
									"end": 4739,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4716,
									"end": 4745,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 4716,
									"end": 4745,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4716,
									"end": 4745,
									"name": "tag",
									"source": 6,
									"value": "130"
								},
								{
									"begin": 4716,
									"end": 4745,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4708,
									"end": 4745,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4708,
									"end": 4745,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4778,
									"end": 4781,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4775,
									"end": 4776,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 4771,
									"end": 4782,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 4765,
									"end": 4769,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4762,
									"end": 4783,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 4754,
									"end": 4783,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4754,
									"end": 4783,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4494,
									"end": 4789,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4794,
									"end": 6189,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 4794,
									"end": 6189,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4911,
									"end": 4948,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "132"
								},
								{
									"begin": 4944,
									"end": 4947,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4911,
									"end": 4948,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 4911,
									"end": 4948,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4911,
									"end": 4948,
									"name": "tag",
									"source": 6,
									"value": "132"
								},
								{
									"begin": 4911,
									"end": 4948,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5013,
									"end": 5031,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5005,
									"end": 5011,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5002,
									"end": 5032,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "133"
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5035,
									"end": 5053,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "134"
								},
								{
									"begin": 5035,
									"end": 5053,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 5035,
									"end": 5053,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5035,
									"end": 5053,
									"name": "tag",
									"source": 6,
									"value": "134"
								},
								{
									"begin": 5035,
									"end": 5053,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "tag",
									"source": 6,
									"value": "133"
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5079,
									"end": 5117,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "135"
								},
								{
									"begin": 5111,
									"end": 5115,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5105,
									"end": 5116,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 5079,
									"end": 5117,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 5079,
									"end": 5117,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5079,
									"end": 5117,
									"name": "tag",
									"source": 6,
									"value": "135"
								},
								{
									"begin": 5079,
									"end": 5117,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5164,
									"end": 5231,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "136"
								},
								{
									"begin": 5224,
									"end": 5230,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5216,
									"end": 5222,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5210,
									"end": 5214,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 5164,
									"end": 5231,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 5164,
									"end": 5231,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5164,
									"end": 5231,
									"name": "tag",
									"source": 6,
									"value": "136"
								},
								{
									"begin": 5164,
									"end": 5231,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5258,
									"end": 5259,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5282,
									"end": 5286,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5269,
									"end": 5286,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5269,
									"end": 5286,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5314,
									"end": 5316,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 5306,
									"end": 5312,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5303,
									"end": 5317,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 5331,
									"end": 5332,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "138"
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5988,
									"end": 5989,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6005,
									"end": 6011,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "139"
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6054,
									"end": 6063,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6049,
									"end": 6052,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 6045,
									"end": 6064,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6039,
									"end": 6065,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 6030,
									"end": 6065,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6030,
									"end": 6065,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "tag",
									"source": 6,
									"value": "139"
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6105,
									"end": 6172,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "140"
								},
								{
									"begin": 6165,
									"end": 6171,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 6158,
									"end": 6163,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6105,
									"end": 6172,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 6105,
									"end": 6172,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6105,
									"end": 6172,
									"name": "tag",
									"source": 6,
									"value": "140"
								},
								{
									"begin": 6105,
									"end": 6172,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6099,
									"end": 6103,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 6092,
									"end": 6173,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 5961,
									"end": 6183,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "137"
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "tag",
									"source": 6,
									"value": "138"
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5378,
									"end": 5382,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 5374,
									"end": 5383,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 5366,
									"end": 5372,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5362,
									"end": 5384,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5412,
									"end": 5449,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "141"
								},
								{
									"begin": 5444,
									"end": 5448,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 5412,
									"end": 5449,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 5412,
									"end": 5449,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5412,
									"end": 5449,
									"name": "tag",
									"source": 6,
									"value": "141"
								},
								{
									"begin": 5412,
									"end": 5449,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5471,
									"end": 5472,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "tag",
									"source": 6,
									"value": "142"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5499,
									"end": 5506,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5496,
									"end": 5497,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5493,
									"end": 5507,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "144"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5578,
									"end": 5587,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5573,
									"end": 5576,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 5569,
									"end": 5588,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5563,
									"end": 5589,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 5555,
									"end": 5561,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5548,
									"end": 5590,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 5629,
									"end": 5630,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 5621,
									"end": 5627,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5617,
									"end": 5631,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5607,
									"end": 5631,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5607,
									"end": 5631,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5676,
									"end": 5678,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5665,
									"end": 5674,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 5661,
									"end": 5679,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5648,
									"end": 5679,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 5648,
									"end": 5679,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5522,
									"end": 5526,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5519,
									"end": 5520,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5515,
									"end": 5527,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5510,
									"end": 5527,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5510,
									"end": 5527,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "142"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "tag",
									"source": 6,
									"value": "144"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5721,
									"end": 5727,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 5712,
									"end": 5719,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5709,
									"end": 5728,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "145"
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5779,
									"end": 5788,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5774,
									"end": 5777,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 5770,
									"end": 5789,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5764,
									"end": 5790,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 5822,
									"end": 5870,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "146"
								},
								{
									"begin": 5864,
									"end": 5868,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 5856,
									"end": 5862,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 5852,
									"end": 5869,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5841,
									"end": 5850,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5822,
									"end": 5870,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 5822,
									"end": 5870,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5822,
									"end": 5870,
									"name": "tag",
									"source": 6,
									"value": "146"
								},
								{
									"begin": 5822,
									"end": 5870,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5814,
									"end": 5820,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5807,
									"end": 5871,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 5729,
									"end": 5885,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "tag",
									"source": 6,
									"value": "145"
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5931,
									"end": 5932,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 5927,
									"end": 5928,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 5919,
									"end": 5925,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 5915,
									"end": 5929,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 5911,
									"end": 5933,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5905,
									"end": 5909,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 5898,
									"end": 5934,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 5333,
									"end": 5944,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5333,
									"end": 5944,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5333,
									"end": 5944,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "tag",
									"source": 6,
									"value": "137"
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4886,
									"end": 6189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4886,
									"end": 6189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4886,
									"end": 6189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4794,
									"end": 6189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4794,
									"end": 6189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4794,
									"end": 6189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6195,
									"end": 6375,
									"name": "tag",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 6195,
									"end": 6375,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6243,
									"end": 6320,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6240,
									"end": 6241,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6233,
									"end": 6321,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 6340,
									"end": 6344,
									"name": "PUSH",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 6337,
									"end": 6338,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 6330,
									"end": 6345,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 6364,
									"end": 6368,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 6361,
									"end": 6362,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6354,
									"end": 6369,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 6381,
									"end": 6483,
									"name": "tag",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 6381,
									"end": 6483,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6423,
									"end": 6431,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6470,
									"end": 6475,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6467,
									"end": 6468,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 6463,
									"end": 6476,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 6442,
									"end": 6476,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6442,
									"end": 6476,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6381,
									"end": 6483,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6381,
									"end": 6483,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6381,
									"end": 6483,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6381,
									"end": 6483,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6489,
									"end": 7337,
									"name": "tag",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 6489,
									"end": 7337,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6550,
									"end": 6555,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6557,
									"end": 6561,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6581,
									"end": 6587,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6572,
									"end": 6587,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6572,
									"end": 6587,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6605,
									"end": 6610,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6596,
									"end": 6610,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6596,
									"end": 6610,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6619,
									"end": 7331,
									"name": "tag",
									"source": 6,
									"value": "150"
								},
								{
									"begin": 6619,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6640,
									"end": 6641,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 6630,
									"end": 6638,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 6627,
									"end": 6642,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 6619,
									"end": 7331,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6619,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "152"
								},
								{
									"begin": 6619,
									"end": 7331,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6735,
									"end": 6739,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6730,
									"end": 6733,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 6726,
									"end": 6740,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 6720,
									"end": 6724,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6717,
									"end": 6741,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 6714,
									"end": 6764,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6714,
									"end": 6764,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "153"
								},
								{
									"begin": 6714,
									"end": 6764,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6744,
									"end": 6762,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "154"
								},
								{
									"begin": 6744,
									"end": 6762,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 6744,
									"end": 6762,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6744,
									"end": 6762,
									"name": "tag",
									"source": 6,
									"value": "154"
								},
								{
									"begin": 6744,
									"end": 6762,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6714,
									"end": 6764,
									"name": "tag",
									"source": 6,
									"value": "153"
								},
								{
									"begin": 6714,
									"end": 6764,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6794,
									"end": 6795,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 6784,
									"end": 6792,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 6780,
									"end": 6796,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6777,
									"end": 7228,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6777,
									"end": 7228,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "155"
								},
								{
									"begin": 6777,
									"end": 7228,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7209,
									"end": 7213,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 7202,
									"end": 7207,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7198,
									"end": 7214,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 7189,
									"end": 7214,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7189,
									"end": 7214,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6777,
									"end": 7228,
									"name": "tag",
									"source": 6,
									"value": "155"
								},
								{
									"begin": 6777,
									"end": 7228,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7259,
									"end": 7263,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 7253,
									"end": 7257,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7249,
									"end": 7264,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 7241,
									"end": 7264,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7241,
									"end": 7264,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7289,
									"end": 7321,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "156"
								},
								{
									"begin": 7312,
									"end": 7320,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 7289,
									"end": 7321,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 7289,
									"end": 7321,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7289,
									"end": 7321,
									"name": "tag",
									"source": 6,
									"value": "156"
								},
								{
									"begin": 7289,
									"end": 7321,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7277,
									"end": 7321,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 7277,
									"end": 7321,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6619,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "150"
								},
								{
									"begin": 6619,
									"end": 7331,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6619,
									"end": 7331,
									"name": "tag",
									"source": 6,
									"value": "152"
								},
								{
									"begin": 6619,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6489,
									"end": 7337,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 6489,
									"end": 7337,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6489,
									"end": 7337,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 6489,
									"end": 7337,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 6489,
									"end": 7337,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6489,
									"end": 7337,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6489,
									"end": 7337,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6489,
									"end": 7337,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7343,
									"end": 8416,
									"name": "tag",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 7343,
									"end": 8416,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7397,
									"end": 7402,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7588,
									"end": 7596,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7578,
									"end": 7618,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "158"
								},
								{
									"begin": 7578,
									"end": 7618,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7609,
									"end": 7610,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 7600,
									"end": 7610,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7600,
									"end": 7610,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7611,
									"end": 7616,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "157"
								},
								{
									"begin": 7611,
									"end": 7616,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7578,
									"end": 7618,
									"name": "tag",
									"source": 6,
									"value": "158"
								},
								{
									"begin": 7578,
									"end": 7618,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7637,
									"end": 7641,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7627,
									"end": 7663,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "159"
								},
								{
									"begin": 7627,
									"end": 7663,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7654,
									"end": 7655,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7645,
									"end": 7655,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7645,
									"end": 7655,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7656,
									"end": 7661,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "157"
								},
								{
									"begin": 7656,
									"end": 7661,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7627,
									"end": 7663,
									"name": "tag",
									"source": 6,
									"value": "159"
								},
								{
									"begin": 7627,
									"end": 7663,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7723,
									"end": 7727,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7771,
									"end": 7772,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 7766,
									"end": 7793,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7766,
									"end": 7793,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 7766,
									"end": 7793,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "161"
								},
								{
									"begin": 7766,
									"end": 7793,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7807,
									"end": 7808,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 7802,
									"end": 7993,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7802,
									"end": 7993,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 7802,
									"end": 7993,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "162"
								},
								{
									"begin": 7802,
									"end": 7993,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7716,
									"end": 7993,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "160"
								},
								{
									"begin": 7716,
									"end": 7993,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7766,
									"end": 7793,
									"name": "tag",
									"source": 6,
									"value": "161"
								},
								{
									"begin": 7766,
									"end": 7793,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7784,
									"end": 7785,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 7775,
									"end": 7785,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7775,
									"end": 7785,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7786,
									"end": 7791,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7786,
									"end": 7791,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "157"
								},
								{
									"begin": 7786,
									"end": 7791,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7802,
									"end": 7993,
									"name": "tag",
									"source": 6,
									"value": "162"
								},
								{
									"begin": 7802,
									"end": 7993,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7847,
									"end": 7850,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 7837,
									"end": 7845,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 7834,
									"end": 7851,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 7831,
									"end": 7874,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 7831,
									"end": 7874,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "163"
								},
								{
									"begin": 7831,
									"end": 7874,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7854,
									"end": 7872,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "164"
								},
								{
									"begin": 7854,
									"end": 7872,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 7854,
									"end": 7872,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7854,
									"end": 7872,
									"name": "tag",
									"source": 6,
									"value": "164"
								},
								{
									"begin": 7854,
									"end": 7872,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7831,
									"end": 7874,
									"name": "tag",
									"source": 6,
									"value": "163"
								},
								{
									"begin": 7831,
									"end": 7874,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7903,
									"end": 7911,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7900,
									"end": 7901,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 7896,
									"end": 7912,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 7887,
									"end": 7912,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7887,
									"end": 7912,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7938,
									"end": 7941,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 7931,
									"end": 7936,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7928,
									"end": 7942,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 7925,
									"end": 7965,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 7925,
									"end": 7965,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "165"
								},
								{
									"begin": 7925,
									"end": 7965,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7945,
									"end": 7963,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "166"
								},
								{
									"begin": 7945,
									"end": 7963,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 7945,
									"end": 7963,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7945,
									"end": 7963,
									"name": "tag",
									"source": 6,
									"value": "166"
								},
								{
									"begin": 7945,
									"end": 7963,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7925,
									"end": 7965,
									"name": "tag",
									"source": 6,
									"value": "165"
								},
								{
									"begin": 7925,
									"end": 7965,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7978,
									"end": 7983,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7978,
									"end": 7983,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "157"
								},
								{
									"begin": 7978,
									"end": 7983,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7716,
									"end": 7993,
									"name": "tag",
									"source": 6,
									"value": "160"
								},
								{
									"begin": 7716,
									"end": 7993,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7716,
									"end": 7993,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8102,
									"end": 8104,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 8092,
									"end": 8100,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8089,
									"end": 8105,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 8083,
									"end": 8086,
									"name": "PUSH",
									"source": 6,
									"value": "133"
								},
								{
									"begin": 8077,
									"end": 8081,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8074,
									"end": 8087,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 8070,
									"end": 8106,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 8052,
									"end": 8054,
									"name": "PUSH",
									"source": 6,
									"value": "4E"
								},
								{
									"begin": 8042,
									"end": 8050,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8039,
									"end": 8055,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 8034,
									"end": 8036,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 8028,
									"end": 8032,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8025,
									"end": 8037,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 8021,
									"end": 8056,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 8005,
									"end": 8116,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 8002,
									"end": 8248,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 8002,
									"end": 8248,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "167"
								},
								{
									"begin": 8002,
									"end": 8248,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8158,
									"end": 8166,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8152,
									"end": 8156,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8148,
									"end": 8167,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 8139,
									"end": 8167,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8139,
									"end": 8167,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8193,
									"end": 8196,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8186,
									"end": 8191,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8183,
									"end": 8197,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 8180,
									"end": 8220,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 8180,
									"end": 8220,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "168"
								},
								{
									"begin": 8180,
									"end": 8220,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8200,
									"end": 8218,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "169"
								},
								{
									"begin": 8200,
									"end": 8218,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 8200,
									"end": 8218,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8200,
									"end": 8218,
									"name": "tag",
									"source": 6,
									"value": "169"
								},
								{
									"begin": 8200,
									"end": 8218,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8180,
									"end": 8220,
									"name": "tag",
									"source": 6,
									"value": "168"
								},
								{
									"begin": 8180,
									"end": 8220,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8233,
									"end": 8238,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "157"
								},
								{
									"begin": 8233,
									"end": 8238,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8002,
									"end": 8248,
									"name": "tag",
									"source": 6,
									"value": "167"
								},
								{
									"begin": 8002,
									"end": 8248,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8273,
									"end": 8315,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "170"
								},
								{
									"begin": 8311,
									"end": 8314,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8301,
									"end": 8309,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8295,
									"end": 8299,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8292,
									"end": 8293,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 8273,
									"end": 8315,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 8273,
									"end": 8315,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8273,
									"end": 8315,
									"name": "tag",
									"source": 6,
									"value": "170"
								},
								{
									"begin": 8273,
									"end": 8315,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8258,
									"end": 8315,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 8258,
									"end": 8315,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8258,
									"end": 8315,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8258,
									"end": 8315,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8347,
									"end": 8351,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8342,
									"end": 8345,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8338,
									"end": 8352,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 8331,
									"end": 8336,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8328,
									"end": 8353,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 8325,
									"end": 8376,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 8325,
									"end": 8376,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "171"
								},
								{
									"begin": 8325,
									"end": 8376,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8356,
									"end": 8374,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "172"
								},
								{
									"begin": 8356,
									"end": 8374,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 8356,
									"end": 8374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8356,
									"end": 8374,
									"name": "tag",
									"source": 6,
									"value": "172"
								},
								{
									"begin": 8356,
									"end": 8374,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8325,
									"end": 8376,
									"name": "tag",
									"source": 6,
									"value": "171"
								},
								{
									"begin": 8325,
									"end": 8376,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8405,
									"end": 8409,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8398,
									"end": 8403,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8394,
									"end": 8410,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 8385,
									"end": 8410,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8385,
									"end": 8410,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7343,
									"end": 8416,
									"name": "tag",
									"source": 6,
									"value": "157"
								},
								{
									"begin": 7343,
									"end": 8416,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7343,
									"end": 8416,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 7343,
									"end": 8416,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 7343,
									"end": 8416,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7343,
									"end": 8416,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7343,
									"end": 8416,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7343,
									"end": 8416,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8422,
									"end": 8508,
									"name": "tag",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 8422,
									"end": 8508,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8457,
									"end": 8464,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 8497,
									"end": 8501,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 8490,
									"end": 8495,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8486,
									"end": 8502,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 8475,
									"end": 8502,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8475,
									"end": 8502,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8422,
									"end": 8508,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 8422,
									"end": 8508,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8422,
									"end": 8508,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8422,
									"end": 8508,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8514,
									"end": 8795,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 8514,
									"end": 8795,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8572,
									"end": 8577,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 8596,
									"end": 8619,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "175"
								},
								{
									"begin": 8614,
									"end": 8618,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8596,
									"end": 8619,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 8596,
									"end": 8619,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8596,
									"end": 8619,
									"name": "tag",
									"source": 6,
									"value": "175"
								},
								{
									"begin": 8596,
									"end": 8619,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8588,
									"end": 8619,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 8588,
									"end": 8619,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8640,
									"end": 8665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "176"
								},
								{
									"begin": 8656,
									"end": 8664,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8640,
									"end": 8665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 8640,
									"end": 8665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8640,
									"end": 8665,
									"name": "tag",
									"source": 6,
									"value": "176"
								},
								{
									"begin": 8640,
									"end": 8665,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8628,
									"end": 8665,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 8628,
									"end": 8665,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8684,
									"end": 8788,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "177"
								},
								{
									"begin": 8721,
									"end": 8787,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8711,
									"end": 8719,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8705,
									"end": 8709,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8684,
									"end": 8788,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 8684,
									"end": 8788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8684,
									"end": 8788,
									"name": "tag",
									"source": 6,
									"value": "177"
								},
								{
									"begin": 8684,
									"end": 8788,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8675,
									"end": 8788,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8675,
									"end": 8788,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8514,
									"end": 8795,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 8514,
									"end": 8795,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 8514,
									"end": 8795,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8514,
									"end": 8795,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8514,
									"end": 8795,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8801,
									"end": 9211,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 8801,
									"end": 9211,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8841,
									"end": 8848,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 8864,
									"end": 8884,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "179"
								},
								{
									"begin": 8882,
									"end": 8883,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8864,
									"end": 8884,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 8864,
									"end": 8884,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8864,
									"end": 8884,
									"name": "tag",
									"source": 6,
									"value": "179"
								},
								{
									"begin": 8864,
									"end": 8884,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8859,
									"end": 8884,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 8859,
									"end": 8884,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8898,
									"end": 8918,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "180"
								},
								{
									"begin": 8916,
									"end": 8917,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8898,
									"end": 8918,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 8898,
									"end": 8918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8898,
									"end": 8918,
									"name": "tag",
									"source": 6,
									"value": "180"
								},
								{
									"begin": 8898,
									"end": 8918,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8893,
									"end": 8918,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 8893,
									"end": 8918,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8953,
									"end": 8954,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8950,
									"end": 8951,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8946,
									"end": 8955,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 8975,
									"end": 9005,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "181"
								},
								{
									"begin": 8993,
									"end": 9004,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8975,
									"end": 9005,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 8975,
									"end": 9005,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8975,
									"end": 9005,
									"name": "tag",
									"source": 6,
									"value": "181"
								},
								{
									"begin": 8975,
									"end": 9005,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8964,
									"end": 9005,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 8964,
									"end": 9005,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9154,
									"end": 9155,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9145,
									"end": 9152,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9141,
									"end": 9156,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 9138,
									"end": 9139,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 9135,
									"end": 9157,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 9115,
									"end": 9116,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 9108,
									"end": 9117,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 9088,
									"end": 9171,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 9065,
									"end": 9204,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "182"
								},
								{
									"begin": 9065,
									"end": 9204,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 9184,
									"end": 9202,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "183"
								},
								{
									"begin": 9184,
									"end": 9202,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 9184,
									"end": 9202,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9184,
									"end": 9202,
									"name": "tag",
									"source": 6,
									"value": "183"
								},
								{
									"begin": 9184,
									"end": 9202,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9065,
									"end": 9204,
									"name": "tag",
									"source": 6,
									"value": "182"
								},
								{
									"begin": 9065,
									"end": 9204,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8849,
									"end": 9211,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8801,
									"end": 9211,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 8801,
									"end": 9211,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 8801,
									"end": 9211,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8801,
									"end": 9211,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8801,
									"end": 9211,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9217,
									"end": 9343,
									"name": "tag",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 9217,
									"end": 9343,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9254,
									"end": 9261,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9294,
									"end": 9336,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9287,
									"end": 9292,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9283,
									"end": 9337,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 9272,
									"end": 9337,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9272,
									"end": 9337,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9217,
									"end": 9343,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 9217,
									"end": 9343,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9217,
									"end": 9343,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9217,
									"end": 9343,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9349,
									"end": 9445,
									"name": "tag",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 9349,
									"end": 9445,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9386,
									"end": 9393,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9415,
									"end": 9439,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "186"
								},
								{
									"begin": 9433,
									"end": 9438,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9415,
									"end": 9439,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 9415,
									"end": 9439,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9415,
									"end": 9439,
									"name": "tag",
									"source": 6,
									"value": "186"
								},
								{
									"begin": 9415,
									"end": 9439,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9404,
									"end": 9439,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9404,
									"end": 9439,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9349,
									"end": 9445,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 9349,
									"end": 9445,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9349,
									"end": 9445,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9349,
									"end": 9445,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9451,
									"end": 9569,
									"name": "tag",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 9451,
									"end": 9569,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9538,
									"end": 9562,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "188"
								},
								{
									"begin": 9556,
									"end": 9561,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 9538,
									"end": 9562,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 9538,
									"end": 9562,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9538,
									"end": 9562,
									"name": "tag",
									"source": 6,
									"value": "188"
								},
								{
									"begin": 9538,
									"end": 9562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9533,
									"end": 9536,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9526,
									"end": 9563,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 9451,
									"end": 9569,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9451,
									"end": 9569,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9451,
									"end": 9569,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9575,
									"end": 9797,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 9575,
									"end": 9797,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9668,
									"end": 9672,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9706,
									"end": 9708,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 9695,
									"end": 9704,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9691,
									"end": 9709,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9683,
									"end": 9709,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9683,
									"end": 9709,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9719,
									"end": 9790,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "190"
								},
								{
									"begin": 9787,
									"end": 9788,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9776,
									"end": 9785,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 9772,
									"end": 9789,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9763,
									"end": 9769,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 9719,
									"end": 9790,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 9719,
									"end": 9790,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9719,
									"end": 9790,
									"name": "tag",
									"source": 6,
									"value": "190"
								},
								{
									"begin": 9719,
									"end": 9790,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9575,
									"end": 9797,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 9575,
									"end": 9797,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 9575,
									"end": 9797,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9575,
									"end": 9797,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9575,
									"end": 9797,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9843,
									"end": 9846,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9862,
									"end": 9882,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "192"
								},
								{
									"begin": 9880,
									"end": 9881,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9862,
									"end": 9882,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 9862,
									"end": 9882,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9862,
									"end": 9882,
									"name": "tag",
									"source": 6,
									"value": "192"
								},
								{
									"begin": 9862,
									"end": 9882,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9857,
									"end": 9882,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 9857,
									"end": 9882,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9896,
									"end": 9916,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "193"
								},
								{
									"begin": 9914,
									"end": 9915,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 9896,
									"end": 9916,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 9896,
									"end": 9916,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9896,
									"end": 9916,
									"name": "tag",
									"source": 6,
									"value": "193"
								},
								{
									"begin": 9896,
									"end": 9916,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9891,
									"end": 9916,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 9891,
									"end": 9916,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9939,
									"end": 9940,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9936,
									"end": 9937,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9932,
									"end": 9941,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9925,
									"end": 9941,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9925,
									"end": 9941,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9960,
									"end": 9963,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 9957,
									"end": 9958,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9954,
									"end": 9964,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 9951,
									"end": 9987,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 9951,
									"end": 9987,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "194"
								},
								{
									"begin": 9951,
									"end": 9987,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 9967,
									"end": 9985,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "195"
								},
								{
									"begin": 9967,
									"end": 9985,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 9967,
									"end": 9985,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9967,
									"end": 9985,
									"name": "tag",
									"source": 6,
									"value": "195"
								},
								{
									"begin": 9967,
									"end": 9985,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9951,
									"end": 9987,
									"name": "tag",
									"source": 6,
									"value": "194"
								},
								{
									"begin": 9951,
									"end": 9987,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9803,
									"end": 9994,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10000,
									"end": 10118,
									"name": "tag",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 10000,
									"end": 10118,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10087,
									"end": 10111,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "197"
								},
								{
									"begin": 10105,
									"end": 10110,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 10087,
									"end": 10111,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 10087,
									"end": 10111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10087,
									"end": 10111,
									"name": "tag",
									"source": 6,
									"value": "197"
								},
								{
									"begin": 10087,
									"end": 10111,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10082,
									"end": 10085,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 10075,
									"end": 10112,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 10000,
									"end": 10118,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10000,
									"end": 10118,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10000,
									"end": 10118,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10273,
									"end": 10277,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 10311,
									"end": 10313,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 10300,
									"end": 10309,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 10296,
									"end": 10314,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10288,
									"end": 10314,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 10288,
									"end": 10314,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10324,
									"end": 10395,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "199"
								},
								{
									"begin": 10392,
									"end": 10393,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 10381,
									"end": 10390,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 10377,
									"end": 10394,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10368,
									"end": 10374,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 10324,
									"end": 10395,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 10324,
									"end": 10395,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10324,
									"end": 10395,
									"name": "tag",
									"source": 6,
									"value": "199"
								},
								{
									"begin": 10324,
									"end": 10395,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10405,
									"end": 10477,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "200"
								},
								{
									"begin": 10473,
									"end": 10475,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 10462,
									"end": 10471,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 10458,
									"end": 10476,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10449,
									"end": 10455,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 10405,
									"end": 10477,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 10405,
									"end": 10477,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10405,
									"end": 10477,
									"name": "tag",
									"source": 6,
									"value": "200"
								},
								{
									"begin": 10405,
									"end": 10477,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10487,
									"end": 10559,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "201"
								},
								{
									"begin": 10555,
									"end": 10557,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 10544,
									"end": 10553,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 10540,
									"end": 10558,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10531,
									"end": 10537,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 10487,
									"end": 10559,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 10487,
									"end": 10559,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10487,
									"end": 10559,
									"name": "tag",
									"source": 6,
									"value": "201"
								},
								{
									"begin": 10487,
									"end": 10559,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10124,
									"end": 10566,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10665,
									"end": 10669,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 10703,
									"end": 10705,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 10692,
									"end": 10701,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 10688,
									"end": 10706,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10680,
									"end": 10706,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 10680,
									"end": 10706,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10716,
									"end": 10787,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "203"
								},
								{
									"begin": 10784,
									"end": 10785,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 10773,
									"end": 10782,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 10769,
									"end": 10786,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10760,
									"end": 10766,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 10716,
									"end": 10787,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 10716,
									"end": 10787,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10716,
									"end": 10787,
									"name": "tag",
									"source": 6,
									"value": "203"
								},
								{
									"begin": 10716,
									"end": 10787,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10572,
									"end": 10794,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 119,
									"end": 291,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 119,
									"end": 291,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 119,
									"end": 291,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 119,
									"end": 291,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 119,
									"end": 291,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 119,
									"end": 291,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 119,
									"end": 291,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 119,
									"end": 291,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 119,
									"end": 291,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206be31730b65fadcad3a4a480338bba50315a2925e0d6da903b1d825fcd990b1a64736f6c63430008140033",
									".code": [
										{
											"begin": 119,
											"end": 291,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 119,
											"end": 291,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 119,
											"end": 291,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 119,
											"end": 291,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 119,
											"end": 291,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 119,
											"end": 291,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 119,
											"end": 291,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 119,
											"end": 291,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 119,
											"end": 291,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 119,
											"end": 291,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 119,
											"end": 291,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 119,
											"end": 291,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 119,
											"end": 291,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 119,
											"end": 291,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 119,
											"end": 291,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 119,
											"end": 291,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 119,
											"end": 291,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 119,
											"end": 291,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 119,
											"end": 291,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 119,
											"end": 291,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 119,
											"end": 291,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 119,
											"end": 291,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 119,
											"end": 291,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 119,
											"end": 291,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 119,
											"end": 291,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 119,
											"end": 291,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 119,
											"end": 291,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 119,
											"end": 291,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 119,
											"end": 291,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 119,
											"end": 291,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 119,
											"end": 291,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 119,
											"end": 291,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 119,
											"end": 291,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 119,
											"end": 291,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 119,
											"end": 291,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 119,
											"end": 291,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 119,
											"end": 291,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 119,
											"end": 291,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 119,
											"end": 291,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 119,
											"end": 291,
											"name": "PUSH",
											"source": 5,
											"value": "95D89B41"
										},
										{
											"begin": 119,
											"end": 291,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 119,
											"end": 291,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 119,
											"end": 291,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 119,
											"end": 291,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 119,
											"end": 291,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 119,
											"end": 291,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 119,
											"end": 291,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 119,
											"end": 291,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 119,
											"end": 291,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 119,
											"end": 291,
											"name": "PUSH",
											"source": 5,
											"value": "DD62ED3E"
										},
										{
											"begin": 119,
											"end": 291,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 119,
											"end": 291,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 119,
											"end": 291,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 119,
											"end": 291,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 119,
											"end": 291,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 119,
											"end": 291,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 119,
											"end": 291,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 119,
											"end": 291,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 119,
											"end": 291,
											"name": "PUSH",
											"source": 5,
											"value": "6FDDE03"
										},
										{
											"begin": 119,
											"end": 291,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 119,
											"end": 291,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 119,
											"end": 291,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 119,
											"end": 291,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 119,
											"end": 291,
											"name": "PUSH",
											"source": 5,
											"value": "95EA7B3"
										},
										{
											"begin": 119,
											"end": 291,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 119,
											"end": 291,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 119,
											"end": 291,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 119,
											"end": 291,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 119,
											"end": 291,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 119,
											"end": 291,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 119,
											"end": 291,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 119,
											"end": 291,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 119,
											"end": 291,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 119,
											"end": 291,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 119,
											"end": 291,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 119,
											"end": 291,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 119,
											"end": 291,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 119,
											"end": 291,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 119,
											"end": 291,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 119,
											"end": 291,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 119,
											"end": 291,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 119,
											"end": 291,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4052,
											"end": 4056,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4068,
											"end": 4081,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 4084,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 4084,
											"end": 4096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 4115,
											"end": 4120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4122,
											"end": 4129,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4106,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4106,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4154,
											"end": 4158,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 2889,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4844,
											"end": 4848,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4860,
											"end": 4875,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 4878,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 4878,
											"end": 4890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4860,
											"end": 4890,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4860,
											"end": 4890,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 4916,
											"end": 4920,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4922,
											"end": 4929,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4931,
											"end": 4936,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 4900,
											"end": 4937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 4957,
											"end": 4961,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4963,
											"end": 4965,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4967,
											"end": 4972,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4947,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4947,
											"end": 4973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4990,
											"end": 4994,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2737,
											"end": 2742,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2763,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3050,
											"end": 3057,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3085,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3086,
											"end": 3093,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3365,
											"end": 3369,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3394,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3397,
											"end": 3407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3397,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3381,
											"end": 3409,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3381,
											"end": 3409,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3429,
											"end": 3434,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3436,
											"end": 3438,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3440,
											"end": 3445,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3419,
											"end": 3446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3467,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3650,
											"end": 3655,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3664,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 8800,
											"end": 8805,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8807,
											"end": 8814,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8816,
											"end": 8821,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8823,
											"end": 8827,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8791,
											"end": 8799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 8791,
											"end": 8828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8707,
											"end": 8835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10495,
											"end": 10519,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 10532,
											"end": 10537,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10539,
											"end": 10546,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10522,
											"end": 10531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 10522,
											"end": 10547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10580,
											"end": 10597,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10561,
											"end": 10577,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10561,
											"end": 10597,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10636,
											"end": 10641,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10617,
											"end": 10633,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10617,
											"end": 10641,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10695,
											"end": 10702,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10704,
											"end": 10720,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10722,
											"end": 10727,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 1,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 10668,
											"end": 10728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 10793,
											"end": 10798,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10800,
											"end": 10807,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10828,
											"end": 10833,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10809,
											"end": 10825,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10809,
											"end": 10833,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10835,
											"end": 10840,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 10784,
											"end": 10841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10485,
											"end": 10872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10396,
											"end": 10872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5474,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5457,
											"end": 5461,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5525,
											"end": 5526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 1,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 5498,
											"end": 5528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5552,
											"end": 5554,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5620,
											"end": 5621,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 1,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 5591,
											"end": 5623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 5651,
											"end": 5655,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5657,
											"end": 5659,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5661,
											"end": 5666,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5643,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 5643,
											"end": 5667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9811,
											"end": 9812,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9794,
											"end": 9799,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9865,
											"end": 9866,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 1,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 9836,
											"end": 9868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9911,
											"end": 9912,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9892,
											"end": 9899,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9964,
											"end": 9965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 1,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 9936,
											"end": 9967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10017,
											"end": 10022,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 9998,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9999,
											"end": 10004,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10013,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10036,
											"end": 10045,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10082,
											"end": 10089,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10075,
											"end": 10080,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10091,
											"end": 10096,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 10066,
											"end": 10097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 10114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6094,
											"end": 6095,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6078,
											"end": 6082,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6230,
											"end": 6235,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 6214,
											"end": 6235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6266,
											"end": 6285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6297,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6302,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6335,
											"end": 6340,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6321,
											"end": 6332,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6396,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6398,
											"end": 6409,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6411,
											"end": 6416,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 1,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 6367,
											"end": 6417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6584,
											"end": 6589,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6581,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6561,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6562,
											"end": 6566,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6252,
											"end": 6614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6642,
											"end": 6643,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6628,
											"end": 6630,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6807,
											"end": 6812,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7019,
											"end": 7024,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7011,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7012,
											"end": 7014,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7079,
											"end": 7081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7077,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7083,
											"end": 7088,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 7064,
											"end": 7089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5989,
											"end": 7096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3446,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 3714,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3915,
											"end": 3938,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3911,
											"end": 3943,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 3946,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 4091,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4154,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4164,
											"end": 4282,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4502,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4487,
											"end": 4503,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 4598,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4586,
											"end": 4621,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4762,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4758,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4835,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 4839,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 4773,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4912,
											"end": 4918,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4961,
											"end": 4963,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4949,
											"end": 4958,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4940,
											"end": 4947,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4936,
											"end": 4959,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4932,
											"end": 4964,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 4967,
											"end": 5046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5087,
											"end": 5088,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 5157,
											"end": 5164,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5148,
											"end": 5154,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5146,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5133,
											"end": 5155,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 5112,
											"end": 5165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5175,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5256,
											"end": 5262,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5264,
											"end": 5270,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5313,
											"end": 5315,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5301,
											"end": 5310,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5292,
											"end": 5299,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5288,
											"end": 5311,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5284,
											"end": 5316,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 5319,
											"end": 5398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5439,
											"end": 5440,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 5509,
											"end": 5516,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5500,
											"end": 5506,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5489,
											"end": 5498,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5485,
											"end": 5507,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 5464,
											"end": 5517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5454,
											"end": 5517,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5454,
											"end": 5517,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5410,
											"end": 5527,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5566,
											"end": 5568,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5592,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 5637,
											"end": 5644,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5628,
											"end": 5634,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5617,
											"end": 5626,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5613,
											"end": 5635,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5592,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 5592,
											"end": 5645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5592,
											"end": 5645,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 5592,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5582,
											"end": 5645,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5582,
											"end": 5645,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5537,
											"end": 5655,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5668,
											"end": 5848,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 5668,
											"end": 5848,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5716,
											"end": 5793,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5713,
											"end": 5714,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5706,
											"end": 5794,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 5817,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 5810,
											"end": 5811,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5803,
											"end": 5818,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5837,
											"end": 5841,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5834,
											"end": 5835,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5827,
											"end": 5842,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5898,
											"end": 5904,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5935,
											"end": 5936,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5929,
											"end": 5933,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5925,
											"end": 5937,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5915,
											"end": 5937,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5915,
											"end": 5937,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 5983,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5976,
											"end": 5980,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5972,
											"end": 5984,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6003,
											"end": 6021,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5993,
											"end": 6074,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 5993,
											"end": 6074,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6059,
											"end": 6063,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 6051,
											"end": 6057,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6047,
											"end": 6064,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6037,
											"end": 6064,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6037,
											"end": 6064,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5993,
											"end": 6074,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 5993,
											"end": 6074,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6121,
											"end": 6123,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6113,
											"end": 6119,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6110,
											"end": 6124,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6090,
											"end": 6108,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6087,
											"end": 6125,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6084,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 6084,
											"end": 6168,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 6140,
											"end": 6158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6084,
											"end": 6168,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 6084,
											"end": 6168,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5905,
											"end": 6174,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5854,
											"end": 6174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6180,
											"end": 6298,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 6180,
											"end": 6298,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6267,
											"end": 6291,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 6285,
											"end": 6290,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6267,
											"end": 6291,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 6267,
											"end": 6291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6267,
											"end": 6291,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 6267,
											"end": 6291,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6262,
											"end": 6265,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6255,
											"end": 6292,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6180,
											"end": 6298,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6180,
											"end": 6298,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6180,
											"end": 6298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6746,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 6304,
											"end": 6746,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6453,
											"end": 6457,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6491,
											"end": 6493,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 6480,
											"end": 6489,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6476,
											"end": 6494,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6468,
											"end": 6494,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6468,
											"end": 6494,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6504,
											"end": 6575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 6572,
											"end": 6573,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6561,
											"end": 6570,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6557,
											"end": 6574,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6548,
											"end": 6554,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6504,
											"end": 6575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 6504,
											"end": 6575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6504,
											"end": 6575,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 6504,
											"end": 6575,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6585,
											"end": 6657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 6653,
											"end": 6655,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6642,
											"end": 6651,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6638,
											"end": 6656,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6629,
											"end": 6635,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6585,
											"end": 6657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 6585,
											"end": 6657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6585,
											"end": 6657,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 6585,
											"end": 6657,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6667,
											"end": 6739,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 6735,
											"end": 6737,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6724,
											"end": 6733,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6711,
											"end": 6717,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6667,
											"end": 6739,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 6667,
											"end": 6739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6667,
											"end": 6739,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 6667,
											"end": 6739,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6746,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6746,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6746,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6746,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6746,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6746,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6752,
											"end": 6974,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 6752,
											"end": 6974,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6845,
											"end": 6849,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6883,
											"end": 6885,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6872,
											"end": 6881,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6868,
											"end": 6886,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6860,
											"end": 6886,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6860,
											"end": 6886,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6896,
											"end": 6967,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 6964,
											"end": 6965,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6953,
											"end": 6962,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6949,
											"end": 6966,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6940,
											"end": 6946,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6896,
											"end": 6967,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 6896,
											"end": 6967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6896,
											"end": 6967,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 6896,
											"end": 6967,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6752,
											"end": 6974,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6752,
											"end": 6974,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6752,
											"end": 6974,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6752,
											"end": 6974,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6752,
											"end": 6974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6980,
											"end": 7160,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 6980,
											"end": 7160,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7028,
											"end": 7105,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7025,
											"end": 7026,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7018,
											"end": 7106,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7125,
											"end": 7129,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 7122,
											"end": 7123,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7115,
											"end": 7130,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7149,
											"end": 7153,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7146,
											"end": 7147,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7139,
											"end": 7154,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7166,
											"end": 7357,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 7166,
											"end": 7357,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7206,
											"end": 7209,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7225,
											"end": 7245,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 7243,
											"end": 7244,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7225,
											"end": 7245,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 7225,
											"end": 7245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7225,
											"end": 7245,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 7225,
											"end": 7245,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7220,
											"end": 7245,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7220,
											"end": 7245,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7259,
											"end": 7279,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 7277,
											"end": 7278,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7259,
											"end": 7279,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 7259,
											"end": 7279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7259,
											"end": 7279,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 7259,
											"end": 7279,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7254,
											"end": 7279,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7254,
											"end": 7279,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7302,
											"end": 7303,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7299,
											"end": 7300,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7295,
											"end": 7304,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7288,
											"end": 7304,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7288,
											"end": 7304,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7323,
											"end": 7326,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7320,
											"end": 7321,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7317,
											"end": 7327,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7314,
											"end": 7350,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7314,
											"end": 7350,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 7314,
											"end": 7350,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 7330,
											"end": 7348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7314,
											"end": 7350,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 7314,
											"end": 7350,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7166,
											"end": 7357,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7166,
											"end": 7357,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7166,
											"end": 7357,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7166,
											"end": 7357,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7166,
											"end": 7357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"WaveToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"WaveToken.sol\":\"WaveToken\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"WaveToken.sol\":{\"keccak256\":\"0x74fd2d4c56a140f4c92f7f7d25e0c93ab4397363d61f5886989797398265833c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e23272c80733ed93b16bc756c82fb4417a18672dce23704bf0dc6c64110d3612\",\"dweb:/ipfs/QmSivbdtxuvnfJaexQ3BowkE4D1hsBqBqKthHpSdgkThDY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "WaveToken.sol:WaveToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "WaveToken.sol:WaveToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "WaveToken.sol:WaveToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "WaveToken.sol:WaveToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "WaveToken.sol:WaveToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "654:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "670:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "687:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:0"
									},
									"src": "623:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "891:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:0"
									},
									"src": "866:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1104:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:0"
									},
									"src": "1077:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1511:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1528:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1547:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:0"
									},
									"src": "1478:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1775:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:0"
									},
									"src": "1748:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2025:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:0"
									},
									"src": "1999:43:0"
								}
							],
							"scope": 137,
							"src": "280:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2469:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:0"
									},
									"src": "2444:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2656:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:0"
									},
									"src": "2627:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3000:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3016:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3033:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:0"
									},
									"src": "2973:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3237:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:0"
									},
									"src": "3211:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3451:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:0"
									},
									"src": "3423:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3760:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3778:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:0"
									},
									"src": "3727:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4008:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:0"
									},
									"src": "3980:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4262:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:0"
									},
									"src": "4234:46:0"
								}
							],
							"scope": 137,
							"src": "2190:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4860:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4876:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4893:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4909:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:0"
									},
									"src": "4827:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5116:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:0"
									},
									"src": "5089:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5331:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:0"
									},
									"src": "5302:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5651:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5669:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:0"
									},
									"src": "5616:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5898:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:0"
									},
									"src": "5869:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6153:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:0"
									},
									"src": "6124:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6494:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6513:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:0"
									},
									"src": "6462:73:0"
								}
							],
							"scope": 137,
							"src": "4430:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1133:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1133:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1142:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1150:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1166:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1124:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1185:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1201:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1245:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1261:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1288:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1335:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1370:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1396:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1638:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1648:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1656:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1671:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1681:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1594:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1615:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:1"
									},
									"scope": 651,
									"src": "1582:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1820:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "1837:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "1830:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1805:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:1"
									},
									"scope": 651,
									"src": "1760:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2024:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2041:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2034:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2009:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:1"
									},
									"scope": 651,
									"src": "1962:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "2744:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "2754:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "2737:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:1"
									},
									"scope": 651,
									"src": "2688:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "2891:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "2908:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "2901:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "2776:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2839:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2850:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2882:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2881:9:1"
									},
									"scope": 651,
									"src": "2830:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3059:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3076:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3086:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3076:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3069:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "2933:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2994:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3012:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3004:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3003:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3050:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3050:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3049:9:1"
									},
									"scope": 651,
									"src": "2985:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3371:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3389:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3381:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3381:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3397:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3397:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3381:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3429:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3436:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3440:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3419:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3419:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3419:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3463:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3456:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3107:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3305:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3322:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3314:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3314:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3334:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3326:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3326:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3313:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3365:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3365:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3364:6:1"
									},
									"scope": 651,
									"src": "3296:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3621:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3638:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3650:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3638:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3657:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3638:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3631:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3480:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3541:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3559:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3551:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3574:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3566:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:9:1"
									},
									"scope": 651,
									"src": "3532:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4058:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4076:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4068:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4068:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4084:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4084:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4068:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4115:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4122:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4131:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4106:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4106:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4106:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4147:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3678:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3988:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4004:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "3996:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4021:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4013:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3995:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4052:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4052:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4051:6:1"
									},
									"scope": 651,
									"src": "3979:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "4850:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4868:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "4860:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4860:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4878:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4878:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4860:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4916:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "4922:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4931:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "4900:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4900:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "4900:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4957:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "4963:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4967:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "4947:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4947:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "4947:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4990:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "4983:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4171:581:1",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4766:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4787:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4779:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4779:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4801:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4793:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4793:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4813:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4805:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4805:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4778:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4844:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4844:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4843:6:1"
									},
									"scope": 651,
									"src": "4757:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5443:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5457:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5473:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5465:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5465:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5465:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5457:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5453:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5477:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5525:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5517:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5517:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5517:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5498:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5491:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5552:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5566:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5558:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5558:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5558:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5552:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5548:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5570:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5620:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5612:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5612:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5612:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5591:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5591:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5584:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5651:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5657:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5661:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5643:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5643:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5643:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5007:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5383:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5401:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5393:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5393:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5415:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5407:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5407:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5427:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5419:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5419:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5392:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5443:0:1"
									},
									"scope": 651,
									"src": "5374:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6064:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6078:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6094:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6086:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6086:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6086:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6078:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6252:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6274:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6266:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6266:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6288:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6298:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6288:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6266:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6321:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6335:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6321:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6317:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6342:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6392:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6398:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6411:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6367:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6367:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6360:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6445:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6552:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6562:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6552:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6570:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6584:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6570:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6552:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6552:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6074:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6098:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6214:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6230:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6214:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6214:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6628:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6642:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6634:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6634:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6634:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6628:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "6843:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "6857:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7002:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7012:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7002:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7019:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7002:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7002:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6624:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6646:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6660:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "6791:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "6807:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6791:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "6791:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7073:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7079:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7083:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7064:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7064:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7059:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5680:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5998:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6014:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6006:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6006:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6028:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6020:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6020:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6040:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6032:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6005:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6064:0:1"
									},
									"scope": 651,
									"src": "5989:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7495:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7509:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7528:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7520:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7520:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7520:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7509:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7505:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7532:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7582:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7574:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7574:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7574:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7553:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7553:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7546:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7621:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7613:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7613:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7613:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7625:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7634:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7605:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7605:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7605:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7102:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7448:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7462:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7454:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7454:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7479:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7471:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7471:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7453:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7495:0:1"
									},
									"scope": 651,
									"src": "7439:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8021:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8035:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8054:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8046:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8046:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8046:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8035:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8031:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8058:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8106:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8098:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8098:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8098:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8079:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8079:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8072:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8137:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8154:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8146:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8146:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8146:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8158:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8129:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8129:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8129:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7653:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7974:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7988:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7980:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7980:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8005:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7997:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7997:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7979:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8021:0:1"
									},
									"scope": 651,
									"src": "7965:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "8781:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "8800:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "8807:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "8816:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8823:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "8791:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8791:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "8791:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8177:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8716:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8733:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8725:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8725:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8748:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8740:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8740:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8765:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8757:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8757:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8724:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8781:0:1"
									},
									"scope": 651,
									"src": "8707:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "9780:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "9794:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9811:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9803:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9803:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9803:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9794:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "9790:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "9815:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9865:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9857:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9857:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9857:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "9836:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9836:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "9829:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "9892:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9911:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9903:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9903:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9903:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9892:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "9888:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "9915:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9964:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9956:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9956:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9956:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "9936:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9936:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "9929:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "9987:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "9999:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9987:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10006:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9987:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10017:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9987:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "9987:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10036:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10032:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10047:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10075:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10082:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10091:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10066:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10066:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10061:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "8841:836:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9691:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9708:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9700:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9700:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9723:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9715:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9715:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9740:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9732:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9732:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9752:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9747:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9747:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9699:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9780:0:1"
									},
									"scope": 651,
									"src": "9682:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10485:387:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10503:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10495:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10495:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10532:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10539:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10522:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10522:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10495:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10561:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10585:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10585:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10580:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10580:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10594:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10580:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10561:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10557:309:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10599:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10617:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10636:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10617:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10613:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10643:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10695:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10704:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10722:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10668:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10668:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10661:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "10756:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "10793:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "10800:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10809:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10828:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10809:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10835:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "10784:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10784:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "10784:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10120:271:1",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10405:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10429:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10421:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10421:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10444:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10436:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10436:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10461:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10453:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10453:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10420:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10485:0:1"
									},
									"scope": 651,
									"src": "10396:476:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1106:9768:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:10770:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:2",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "214:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "396:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "405:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "427:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "447:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:2"
									},
									"src": "390:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "627:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "636:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "659:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "684:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:2"
									},
									"src": "621:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "821:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:2"
									},
									"scope": 729,
									"src": "775:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 729,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1222:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1234:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1267:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:2"
									},
									"scope": 729,
									"src": "1204:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1567:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1582:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1622:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:2"
									},
									"scope": 729,
									"src": "1548:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2326:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2343:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2376:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:2"
									},
									"scope": 729,
									"src": "2309:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2712:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2726:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2738:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2771:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:2"
									},
									"scope": 729,
									"src": "2690:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "204:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2674:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"306:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "306:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:3",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "417:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:3"
									},
									"scope": 755,
									"src": "378:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "540:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:3"
									},
									"scope": 755,
									"src": "499:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "674:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:3"
									},
									"scope": 755,
									"src": "631:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "278:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:559:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"WaveToken.sol": {
				"ast": {
					"absolutePath": "WaveToken.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						],
						"WaveToken": [
							812
						]
					},
					"id": 813,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 788,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 813,
							"sourceUnit": 652,
							"src": "60:55:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 789,
										"name": "ERC20",
										"nameLocations": [
											"141:5:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 651,
										"src": "141:5:5"
									},
									"id": 790,
									"nodeType": "InheritanceSpecifier",
									"src": "141:5:5"
								}
							],
							"canonicalName": "WaveToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 812,
							"linearizedBaseContracts": [
								812,
								651,
								41,
								755,
								729,
								785
							],
							"name": "WaveToken",
							"nameLocation": "128:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 810,
										"nodeType": "Block",
										"src": "217:71:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 800,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "235:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "239:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "235:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 802,
																"name": "initialSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 792,
																"src": "247:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 806,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 803,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "263:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 804,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 215,
																		"src": "269:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 805,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "269:10:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "263:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "247:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 799,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "229:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "229:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 809,
												"nodeType": "ExpressionStatement",
												"src": "229:51:5"
											}
										]
									},
									"id": 811,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "5761766520546f6b656e",
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "196:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_d33834f9d19b0205d3dabdea19da69110d4da3b9567493ad73b0a0a1ee825475",
														"typeString": "literal_string \"Wave Token\""
													},
													"value": "Wave Token"
												},
												{
													"hexValue": "574156",
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "210:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_e99640550c3cfa8d5858bcd6ddfdd3539c233fb72b97424fd6ffad09ff926b29",
														"typeString": "literal_string \"WAV\""
													},
													"value": "WAV"
												}
											],
											"id": 797,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 794,
												"name": "ERC20",
												"nameLocations": [
													"190:5:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 651,
												"src": "190:5:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "190:26:5"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "initialSupply",
												"nameLocation": "175:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "167:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "167:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "166:23:5"
									},
									"returnParameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "217:0:5"
									},
									"scope": 812,
									"src": "155:133:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 813,
							"src": "119:172:5",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "33:258:5"
				},
				"id": 5
			}
		}
	}
}